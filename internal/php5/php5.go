// Code generated by goyacc -o internal/php5/php5.go internal/php5/php5.y. DO NOT EDIT.

// line internal/php5/php5.y:2
package php5

import __yyfmt__ "fmt"

// line internal/php5/php5.y:2

import (
	"bytes"
	"strconv"

	"github.com/z7zmey/php-parser/internal/scanner"
	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php5/php5.y:15
type yySymType struct {
	yys                     int
	node                    ast.Vertex
	token                   *scanner.Token
	list                    []ast.Vertex
	simpleIndirectReference simpleIndirectReference

	ClassExtends     *ast.StmtClassExtends
	ClassImplements  *ast.StmtClassImplements
	InterfaceExtends *ast.StmtInterfaceExtends
	ClosureUse       *ast.ExprClosureUse
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php5/php5.y:7171

type simpleIndirectReference struct {
	all  []*ast.ExprVariable
	last *ast.ExprVariable
}

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 51,
	105, 435,
	106, 435,
	-2, 433,
	-1, 102,
	79, 332,
	-2, 411,
	-1, 114,
	79, 451,
	148, 447,
	-2, 457,
	-1, 154,
	105, 435,
	106, 435,
	-2, 433,
	-1, 204,
	146, 306,
	149, 306,
	-2, 430,
	-1, 205,
	105, 435,
	106, 435,
	146, 307,
	149, 307,
	-2, 433,
	-1, 271,
	79, 451,
	-2, 457,
	-1, 298,
	79, 334,
	-2, 413,
	-1, 302,
	148, 448,
	-2, 458,
	-1, 311,
	79, 333,
	-2, 412,
	-1, 378,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 274,
	-1, 379,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 275,
	-1, 380,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 276,
	-1, 381,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 277,
	-1, 382,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 278,
	-1, 383,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 279,
	-1, 384,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 280,
	-1, 385,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 281,
	-1, 392,
	105, 435,
	106, 435,
	-2, 433,
	-1, 400,
	149, 142,
	-2, 147,
	-1, 462,
	105, 435,
	106, 435,
	149, 515,
	160, 515,
	-2, 433,
	-1, 463,
	149, 516,
	160, 516,
	-2, 430,
	-1, 464,
	105, 435,
	106, 435,
	-2, 433,
	-1, 486,
	149, 156,
	160, 156,
	-2, 430,
	-1, 487,
	105, 435,
	106, 435,
	149, 157,
	160, 157,
	-2, 433,
	-1, 493,
	148, 472,
	-2, 517,
	-1, 499,
	148, 472,
	-2, 518,
	-1, 521,
	79, 332,
	-2, 369,
	-1, 539,
	94, 135,
	95, 135,
	96, 135,
	-2, 0,
	-1, 551,
	149, 142,
	-2, 147,
	-1, 564,
	149, 142,
	-2, 147,
	-1, 581,
	146, 308,
	149, 308,
	-2, 430,
	-1, 582,
	105, 435,
	106, 435,
	146, 309,
	149, 309,
	-2, 433,
	-1, 682,
	79, 334,
	-2, 371,
	-1, 780,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 397,
	-1, 781,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 398,
	-1, 782,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 399,
	-1, 783,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 400,
	-1, 784,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 401,
	-1, 785,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 402,
	-1, 786,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 403,
	-1, 787,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 404,
	-1, 790,
	79, 333,
	-2, 370,
	-1, 840,
	37, 201,
	-2, 198,
	-1, 880,
	31, 128,
	32, 128,
	33, 128,
	145, 128,
	-2, 0,
	-1, 915,
	96, 140,
	-2, 0,
	-1, 917,
	31, 127,
	32, 127,
	33, 127,
	145, 127,
	-2, 0,
	-1, 944,
	94, 136,
	95, 136,
	96, 136,
	-2, 0,
	-1, 972,
	29, 189,
	-2, 4,
	-1, 981,
	149, 142,
	-2, 147,
	-1, 998,
	146, 193,
	-2, 195,
}

const yyPrivate = 57344

const yyLast = 8877

var yyAct = [...]int{

	102, 571, 844, 565, 1007, 966, 715, 61, 420, 827,
	123, 131, 919, 200, 340, 594, 567, 607, 452, 816,
	461, 808, 474, 735, 592, 684, 138, 140, 421, 142,
	145, 390, 39, 98, 444, 579, 264, 517, 118, 319,
	158, 315, 331, 330, 447, 7, 6, 544, 485, 130,
	2, 979, 26, 960, 938, 935, 228, 228, 162, 477,
	932, 942, 289, 941, 44, 670, 658, 664, 665, 672,
	673, 674, 675, 678, 679, 822, 738, 940, 658, 1003,
	251, 267, 710, 654, 258, 562, 662, 656, 655, 516,
	153, 658, 664, 665, 661, 654, 663, 657, 659, 660,
	676, 677, 666, 358, 298, 325, 736, 204, 654, 657,
	659, 660, 656, 655, 270, 794, 241, 137, 977, 729,
	954, 933, 657, 659, 660, 543, 311, 666, 475, 316,
	320, 955, 192, 323, 43, 934, 329, 922, 854, 5,
	898, 126, 450, 121, 121, 499, 192, 121, 586, 586,
	121, 658, 664, 665, 899, 633, 339, 141, 678, 679,
	619, 228, 201, 930, 114, 121, 634, 39, 654, 750,
	585, 620, 656, 655, 179, 310, 357, 115, 159, 162,
	432, 586, 657, 659, 660, 676, 677, 666, 179, 182,
	183, 192, 241, 267, 908, 228, 907, 905, 510, 493,
	862, 121, 296, 749, 506, 178, 180, 181, 192, 177,
	176, 229, 511, 856, 230, 792, 560, 104, 507, 178,
	180, 181, 746, 228, 175, 640, 270, 561, 117, 386,
	233, 425, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 494, 359, 595, 271, 126, 632, 121, 631,
	179, 1019, 625, 173, 177, 176, 624, 360, 272, 978,
	393, 172, 228, 174, 178, 180, 181, 188, 190, 175,
	456, 177, 176, 231, 231, 333, 451, 336, 556, 451,
	302, 178, 180, 181, 232, 232, 175, 355, 658, 557,
	120, 120, 350, 228, 120, 352, 423, 120, 265, 597,
	596, 356, 446, 241, 931, 654, 351, 473, 294, 273,
	312, 126, 303, 121, 131, 396, 229, 301, 509, 230,
	133, 305, 513, 300, 313, 160, 521, 604, 595, 126,
	440, 121, 605, 451, 134, 233, 741, 293, 492, 463,
	39, 436, 437, 498, 491, 287, 541, 281, 120, 497,
	484, 472, 612, 7, 6, 658, 254, 271, 611, 521,
	502, 718, 486, 505, 253, 1002, 951, 437, 436, 436,
	272, 437, 654, 916, 886, 883, 656, 655, 231, 871,
	826, 229, 815, 295, 230, 399, 657, 659, 660, 232,
	728, 666, 548, 546, 694, 120, 552, 635, 626, 229,
	233, 572, 230, 572, 577, 572, 580, 430, 228, 428,
	265, 584, 231, 126, 307, 121, 1014, 981, 233, 893,
	593, 273, 439, 232, 139, 588, 39, 297, 448, 825,
	126, 819, 121, 810, 809, 434, 683, 458, 587, 564,
	231, 449, 551, 400, 537, 288, 344, 5, 297, 345,
	295, 232, 539, 278, 717, 540, 616, 275, 274, 250,
	120, 222, 467, 196, 448, 492, 498, 453, 471, 448,
	581, 491, 497, 195, 479, 480, 194, 449, 120, 231,
	144, 495, 449, 229, 122, 1011, 230, 1010, 1000, 228,
	232, 914, 617, 615, 877, 135, 446, 990, 618, 985,
	268, 490, 233, 269, 704, 705, 984, 924, 316, 913,
	231, 309, 320, 308, 504, 881, 812, 521, 806, 233,
	805, 232, 799, 400, 682, 713, 521, 704, 705, 700,
	547, 545, 39, 521, 521, 521, 521, 521, 542, 501,
	398, 348, 156, 531, 91, 7, 6, 353, 636, 646,
	982, 649, 572, 126, 653, 711, 906, 701, 228, 228,
	228, 606, 120, 521, 435, 572, 719, 1020, 727, 39,
	39, 976, 918, 892, 891, 732, 531, 572, 580, 120,
	889, 733, 730, 578, 306, 267, 197, 228, 228, 714,
	179, 448, 448, 706, 875, 708, 740, 224, 225, 257,
	724, 192, 803, 804, 449, 449, 831, 518, 743, 696,
	697, 295, 734, 126, 613, 739, 742, 811, 270, 448,
	731, 737, 448, 126, 448, 231, 125, 681, 490, 228,
	745, 228, 449, 455, 446, 449, 232, 449, 424, 5,
	703, 755, 126, 179, 125, 988, 688, 610, 259, 459,
	128, 651, 129, 438, 126, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 790, 759, 521, 463, 321, 124, 757, 454,
	758, 648, 282, 286, 638, 639, 132, 721, 972, 486,
	642, 643, 427, 426, 800, 295, 231, 515, 793, 791,
	126, 521, 573, 260, 261, 574, 512, 232, 228, 848,
	849, 850, 847, 846, 845, 508, 304, 317, 322, 299,
	572, 469, 832, 126, 531, 687, 62, 572, 851, 820,
	817, 865, 595, 531, 457, 295, 829, 263, 814, 271,
	531, 531, 531, 531, 531, 576, 852, 833, 743, 404,
	448, 295, 272, 857, 859, 402, 796, 259, 573, 208,
	295, 574, 438, 449, 744, 231, 231, 231, 468, 295,
	531, 54, 295, 132, 569, 570, 232, 232, 232, 521,
	259, 504, 751, 207, 285, 521, 521, 986, 828, 1008,
	239, 842, 265, 573, 231, 231, 574, 843, 824, 797,
	841, 876, 726, 273, 163, 232, 232, 45, 228, 987,
	228, 878, 559, 521, 884, 882, 572, 890, 885, 879,
	338, 470, 260, 261, 801, 1018, 992, 226, 234, 45,
	821, 958, 956, 901, 572, 904, 231, 926, 231, 897,
	259, 39, 894, 259, 469, 260, 261, 232, 284, 232,
	888, 848, 849, 850, 847, 846, 845, 550, 228, 900,
	519, 521, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 923,
	909, 531, 1, 519, 446, 1004, 599, 895, 601, 600,
	39, 999, 961, 521, 937, 260, 261, 285, 260, 261,
	936, 902, 855, 813, 704, 705, 880, 910, 531, 126,
	860, 861, 761, 521, 760, 231, 521, 874, 723, 521,
	453, 572, 963, 572, 971, 39, 232, 39, 610, 707,
	704, 705, 652, 650, 647, 39, 602, 39, 39, 259,
	514, 521, 481, 259, 438, 395, 572, 971, 283, 324,
	957, 983, 203, 959, 39, 202, 962, 199, 39, 39,
	521, 136, 572, 830, 748, 994, 754, 572, 996, 259,
	998, 864, 445, 609, 256, 915, 589, 917, 980, 590,
	591, 685, 255, 39, 572, 1012, 531, 925, 840, 927,
	928, 1013, 531, 531, 995, 572, 1016, 993, 965, 964,
	920, 39, 903, 920, 260, 261, 483, 896, 260, 261,
	448, 839, 944, 836, 566, 231, 948, 231, 1006, 949,
	531, 842, 1005, 449, 725, 39, 232, 843, 232, 192,
	841, 39, 394, 946, 260, 261, 389, 164, 341, 698,
	538, 519, 929, 290, 460, 973, 161, 157, 318, 314,
	519, 127, 403, 575, 401, 335, 945, 519, 519, 519,
	519, 519, 1009, 343, 939, 231, 528, 608, 531, 997,
	970, 179, 182, 183, 991, 969, 232, 968, 189, 191,
	967, 848, 849, 850, 847, 846, 845, 519, 838, 837,
	835, 40, 177, 176, 568, 169, 171, 170, 192, 15,
	14, 823, 178, 180, 181, 188, 190, 175, 720, 1015,
	531, 802, 695, 686, 11, 249, 75, 76, 1021, 116,
	689, 690, 691, 692, 693, 266, 64, 834, 89, 598,
	531, 90, 520, 531, 101, 74, 531, 12, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 326,
	100, 99, 79, 810, 809, 119, 526, 3, 531, 193,
	173, 177, 176, 41, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 531, 0, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 0, 0, 519, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 669,
	667, 668, 0, 0, 0, 519, 0, 0, 0, 0,
	0, 0, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 789, 0,
	0, 686, 671, 670, 658, 664, 665, 672, 673, 674,
	675, 678, 679, 0, 169, 171, 170, 192, 870, 0,
	0, 654, 0, 680, 662, 656, 655, 0, 0, 0,
	0, 0, 661, 0, 663, 657, 659, 660, 676, 677,
	666, 0, 0, 519, 0, 0, 0, 0, 0, 519,
	519, 0, 0, 0, 0, 0, 0, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 863, 31, 0, 0, 0, 0, 519, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 147, 151, 155, 0,
	0, 0, 165, 0, 0, 0, 869, 0, 0, 51,
	198, 0, 872, 873, 0, 206, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 519, 223, 0, 0, 0,
	235, 236, 237, 238, 0, 154, 240, 0, 242, 243,
	244, 245, 246, 247, 248, 0, 252, 0, 0, 0,
	0, 262, 205, 0, 0, 0, 276, 277, 0, 279,
	280, 0, 0, 0, 0, 227, 227, 519, 0, 0,
	291, 0, 0, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 0, 0, 0, 519, 911, 0,
	519, 0, 654, 519, 680, 662, 656, 655, 0, 0,
	0, 0, 0, 661, 0, 663, 657, 659, 660, 676,
	677, 666, 240, 0, 0, 519, 0, 342, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	943, 0, 0, 0, 519, 0, 0, 0, 0, 0,
	361, 362, 363, 364, 365, 366, 367, 368, 369, 370,
	371, 372, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 387, 0, 155, 0,
	354, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 406, 408, 409, 410, 411, 412, 413, 414,
	415, 416, 417, 418, 419, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 391, 392, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 912, 0, 0, 0, 0,
	0, 0, 0, 240, 0, 0, 433, 433, 0, 0,
	0, 0, 422, 441, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 669, 667, 668, 155, 465, 0,
	0, 466, 0, 0, 433, 0, 0, 0, 0, 0,
	433, 291, 0, 0, 0, 0, 433, 433, 0, 0,
	155, 443, 0, 433, 496, 0, 0, 0, 0, 500,
	0, 0, 0, 0, 462, 464, 0, 671, 670, 658,
	664, 665, 672, 673, 674, 675, 678, 679, 0, 0,
	0, 0, 478, 0, 0, 0, 654, 487, 680, 662,
	656, 655, 0, 0, 0, 0, 0, 661, 0, 663,
	657, 659, 660, 676, 677, 666, 549, 0, 0, 0,
	0, 0, 0, 553, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 4, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 555, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 155, 23,
	24, 38, 45, 0, 16, 25, 36, 0, 0, 37,
	10, 0, 27, 0, 32, 81, 82, 8, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 582, 0, 583, 0, 0,
	93, 0, 0, 0, 614, 9, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 627, 629,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 637, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 0, 0, 0, 92, 77, 17,
	645, 35, 654, 63, 0, 97, 656, 655, 478, 58,
	57, 59, 60, 73, 120, 0, 657, 659, 660, 676,
	677, 666, 0, 192, 0, 342, 702, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 0, 712, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 662, 656, 655,
	0, 0, 0, 0, 0, 661, 0, 663, 657, 659,
	660, 676, 677, 666, 0, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 433, 391, 716, 716,
	669, 667, 668, 0, 0, 173, 177, 176, 747, 0,
	0, 0, 0, 0, 433, 752, 178, 180, 181, 188,
	190, 175, 0, 155, 0, 0, 422, 422, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 0, 169,
	171, 170, 192, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 0, 0, 0, 0, 0, 0,
	462, 0, 654, 868, 680, 662, 656, 655, 478, 0,
	478, 0, 0, 661, 487, 663, 657, 659, 660, 676,
	677, 666, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 858, 193, 173, 177, 176, 807, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 658,
	664, 665, 672, 673, 674, 675, 678, 679, 0, 0,
	0, 853, 0, 0, 433, 0, 654, 0, 0, 662,
	656, 655, 433, 433, 0, 0, 0, 818, 0, 866,
	657, 659, 660, 676, 677, 666, 0, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	0, 0, 4, 0, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 349, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 342,
	22, 209, 0, 0, 23, 24, 38, 45, 0, 16,
	25, 36, 0, 0, 37, 10, 0, 27, 0, 32,
	81, 82, 8, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 716, 0, 422,
	9, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 478, 0, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 92, 77, 17, 503, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	4, 621, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 209, 0, 95, 29, 20, 19,
	0, 21, 0, 33, 0, 34, 558, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 16, 25, 36,
	0, 0, 37, 10, 0, 27, 0, 32, 81, 82,
	8, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 9, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 210, 211, 212, 213, 214,
	215, 216, 217, 218, 219, 220, 221, 210, 211, 212,
	213, 214, 215, 216, 217, 218, 219, 220, 221, 0,
	92, 77, 17, 0, 35, 0, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 328, 209,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 209, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	17, 1022, 35, 0, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 328, 0, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 17, 1017,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 328, 0, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 17, 1001, 35, 0,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 328, 0, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 989, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 17, 0, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	328, 0, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 0, 0, 95, 29, 20, 19,
	0, 21, 0, 33, 975, 34, 0, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 17, 0, 35, 0, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 328, 0,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	17, 974, 35, 0, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 328, 0, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 17, 953,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 328, 0, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 17, 952, 35, 0,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 328, 0, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 17, 950, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	328, 0, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 0, 0, 95, 29, 20, 19,
	0, 21, 0, 33, 0, 34, 887, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	332, 46, 48, 50, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 47, 49,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 17, 0, 35, 0, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 328, 0,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 699, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 332, 46,
	48, 50, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 47, 49, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	17, 0, 35, 0, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 328, 0, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 332, 46, 48, 50,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 47, 49, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 17, 563,
	35, 0, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 328, 0, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 332, 46, 48, 50, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 47, 49, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 17, 327, 35, 0,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 328, 0, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 332, 46, 48, 50, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	47, 49, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 17, 0, 35, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	17, 0, 35, 947, 63, 0, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 83, 84, 72, 18,
	105, 106, 13, 88, 121, 0, 30, 0, 0, 0,
	95, 29, 20, 19, 0, 21, 0, 33, 0, 34,
	0, 0, 22, 0, 0, 0, 23, 24, 38, 45,
	0, 0, 25, 36, 0, 0, 37, 0, 0, 27,
	0, 32, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 28, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 17, 0, 35, 921,
	63, 0, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 83, 84, 72, 18, 105, 106, 13, 88,
	121, 0, 30, 0, 0, 0, 95, 29, 20, 19,
	0, 21, 0, 33, 0, 34, 0, 0, 22, 0,
	0, 0, 23, 24, 38, 45, 0, 0, 25, 36,
	0, 0, 37, 0, 0, 27, 0, 32, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 28, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 17, 0, 35, 722, 63, 0, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 83, 84,
	72, 18, 105, 106, 13, 88, 121, 0, 30, 0,
	0, 0, 95, 29, 20, 19, 0, 21, 0, 33,
	0, 34, 0, 0, 22, 0, 0, 0, 23, 24,
	38, 45, 0, 0, 25, 36, 0, 0, 37, 0,
	0, 27, 0, 32, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 42, 28, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 17, 0,
	35, 337, 63, 0, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 83, 84, 72, 18, 105, 106,
	13, 88, 121, 0, 30, 0, 0, 0, 95, 29,
	20, 19, 0, 21, 0, 33, 0, 34, 0, 0,
	22, 0, 0, 0, 23, 24, 38, 45, 0, 0,
	25, 36, 0, 0, 37, 0, 0, 27, 0, 32,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 28,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 17, 0, 35, 334, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	83, 84, 72, 18, 105, 106, 13, 88, 121, 0,
	30, 0, 0, 0, 95, 29, 20, 19, 0, 21,
	0, 33, 0, 34, 0, 0, 22, 0, 0, 0,
	23, 24, 38, 45, 0, 0, 25, 36, 0, 0,
	37, 0, 0, 27, 0, 32, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 42, 28, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	17, 0, 35, 0, 63, 45, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 489, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 42, 149, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 0, 0, 83, 84, 72, 0,
	105, 106, 126, 88, 121, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 0, 0, 0, 0, 63, 482, 97, 45,
	0, 488, 58, 57, 59, 60, 73, 120, 0, 0,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 489, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 83, 84,
	72, 0, 105, 106, 126, 88, 121, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 0, 0, 0, 0,
	63, 45, 97, 0, 0, 488, 58, 57, 59, 60,
	73, 120, 0, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	83, 84, 72, 0, 105, 106, 126, 88, 121, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 0, 0,
	0, 0, 63, 45, 97, 0, 0, 867, 58, 57,
	59, 60, 73, 120, 0, 0, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 148, 149, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	0, 0, 0, 0, 63, 45, 97, 0, 0, 630,
	58, 57, 59, 60, 73, 120, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 148, 149, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 83, 84, 72, 0, 105, 106,
	126, 88, 121, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 0, 0, 0, 0, 63, 45, 97, 0,
	0, 628, 58, 57, 59, 60, 73, 120, 0, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 83, 84, 72, 0,
	105, 106, 126, 88, 121, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 0, 0, 0, 0, 63, 45,
	97, 0, 0, 292, 58, 57, 59, 60, 73, 120,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	42, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 0, 0,
	83, 84, 72, 0, 105, 106, 126, 88, 121, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 0, 0, 0, 0,
	63, 431, 97, 45, 0, 0, 58, 57, 59, 60,
	73, 120, 0, 0, 0, 0, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 148, 149, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 83, 84, 72, 0, 105, 106, 126, 88,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	0, 0, 0, 0, 63, 45, 97, 0, 0, 407,
	58, 57, 59, 60, 73, 120, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 148, 149, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 83, 84, 72, 0, 105, 106,
	126, 88, 121, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 0, 0, 0, 388, 63, 45, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 0, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 148, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 83, 84, 72, 0,
	105, 106, 126, 88, 121, 0, 0, 0, 0, 0,
	95, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 0, 0, 152, 0, 63, 45,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	0, 0, 81, 82, 0, 0, 0, 0, 0, 0,
	0, 0, 52, 96, 0, 94, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 93, 0, 0,
	0, 0, 143, 113, 109, 103, 0, 85, 86, 87,
	0, 0, 0, 0, 80, 53, 0, 0, 0, 78,
	148, 149, 0, 0, 0, 0, 0, 55, 56, 0,
	65, 66, 67, 68, 69, 70, 71, 0, 83, 84,
	72, 0, 105, 106, 126, 88, 121, 0, 0, 0,
	0, 0, 95, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 92, 77, 0, 0, 150, 0,
	63, 45, 97, 0, 0, 0, 58, 57, 59, 60,
	73, 120, 0, 0, 81, 82, 0, 0, 0, 0,
	0, 0, 0, 0, 52, 96, 0, 94, 110, 111,
	112, 107, 108, 0, 0, 0, 0, 0, 0, 93,
	0, 0, 0, 0, 143, 113, 109, 103, 0, 85,
	86, 87, 0, 0, 0, 0, 80, 53, 0, 0,
	0, 78, 148, 149, 0, 0, 0, 0, 0, 55,
	56, 0, 65, 66, 67, 68, 69, 70, 71, 0,
	83, 84, 72, 0, 105, 106, 126, 88, 121, 0,
	0, 0, 0, 0, 95, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 92, 77, 0, 0,
	146, 0, 63, 45, 97, 0, 0, 0, 58, 57,
	59, 60, 73, 120, 0, 0, 81, 82, 0, 0,
	0, 0, 0, 0, 0, 0, 52, 96, 0, 94,
	110, 111, 112, 107, 108, 0, 0, 0, 0, 0,
	0, 93, 0, 0, 0, 0, 143, 113, 109, 103,
	0, 85, 86, 87, 0, 0, 0, 0, 80, 53,
	0, 0, 0, 78, 148, 149, 0, 0, 0, 0,
	0, 55, 56, 0, 65, 66, 67, 68, 69, 70,
	71, 0, 83, 84, 72, 0, 105, 106, 126, 442,
	121, 0, 0, 0, 0, 0, 95, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 92, 77,
	0, 0, 0, 0, 63, 45, 97, 0, 0, 0,
	58, 57, 59, 60, 73, 120, 0, 0, 81, 82,
	0, 0, 0, 0, 0, 0, 0, 0, 52, 96,
	0, 94, 110, 111, 112, 107, 108, 0, 0, 0,
	0, 0, 0, 93, 0, 0, 0, 0, 143, 113,
	109, 103, 0, 85, 86, 87, 0, 0, 0, 0,
	80, 53, 0, 0, 0, 78, 148, 149, 0, 0,
	0, 0, 0, 55, 56, 0, 65, 66, 67, 68,
	69, 70, 71, 0, 83, 84, 72, 0, 105, 106,
	126, 88, 121, 0, 0, 0, 0, 0, 95, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	92, 77, 0, 0, 0, 0, 63, 45, 97, 0,
	0, 0, 58, 57, 59, 60, 73, 120, 0, 0,
	81, 82, 0, 0, 0, 0, 0, 0, 0, 0,
	52, 96, 0, 94, 110, 111, 112, 107, 108, 0,
	0, 0, 0, 0, 0, 93, 0, 0, 0, 0,
	143, 113, 109, 103, 0, 85, 86, 87, 0, 0,
	0, 0, 80, 53, 0, 0, 0, 78, 42, 149,
	0, 0, 0, 0, 0, 55, 56, 0, 65, 66,
	67, 68, 69, 70, 71, 0, 0, 669, 667, 668,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 92, 77, 795, 0, 0, 0, 63, 0,
	97, 0, 0, 0, 58, 57, 59, 60, 73, 120,
	671, 670, 658, 664, 665, 672, 673, 674, 675, 678,
	679, 0, 0, 669, 667, 668, 0, 0, 798, 654,
	0, 680, 662, 656, 655, 0, 0, 0, 0, 0,
	661, 0, 663, 657, 659, 660, 676, 677, 666, 756,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 670, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 0, 169, 171,
	170, 192, 0, 0, 0, 654, 0, 680, 662, 656,
	655, 0, 0, 0, 0, 0, 661, 0, 663, 657,
	659, 660, 676, 677, 666, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 169, 171, 170,
	192, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 753, 169, 171, 170, 192, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 171, 170, 192, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 709, 0, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 644, 169, 171, 170, 192, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 171, 170, 192, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 641,
	0, 0, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 0,
	0, 0, 623, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 171, 170, 192, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 0, 0, 0, 0, 622, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 603, 169, 171, 170, 192, 0, 0, 193, 173,
	177, 176, 476, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 171, 170, 192, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 554, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 0,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 405, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 169, 171, 170, 192, 429, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 169, 171, 170, 192, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 169, 171, 170, 192, 397,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 169, 171, 170, 192, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 0, 347, 0, 0, 0, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 169, 171,
	170, 192, 346, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 669, 667, 668,
	0, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 166, 0, 0, 0,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	671, 670, 658, 664, 665, 672, 673, 674, 675, 678,
	679, 169, 171, 170, 192, 0, 0, 0, 0, 654,
	0, 680, 662, 656, 655, 0, 0, 0, 0, 0,
	661, 0, 663, 657, 659, 660, 676, 677, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 667, 668, 0, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 171, 170, 192, 0, 0, 0,
	0, 0, 654, 0, 680, 662, 656, 655, 0, 0,
	0, 0, 0, 661, 0, 663, 657, 659, 660, 676,
	677, 666, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 668, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 671, 670, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 170, 192, 0, 0,
	0, 0, 0, 0, 654, 0, 680, 662, 656, 655,
	0, 0, 0, 0, 0, 661, 0, 663, 657, 659,
	660, 676, 677, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 192, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 671, 670, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 192, 0, 0, 0,
	0, 0, 0, 0, 654, 0, 0, 662, 656, 655,
	0, 0, 0, 0, 0, 661, 0, 663, 657, 659,
	660, 676, 677, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 658, 664, 665, 672, 673, 674, 675, 678,
	679, 192, 0, 0, 0, 0, 0, 0, 0, 654,
	0, 0, 662, 656, 655, 0, 0, 0, 0, 0,
	0, 0, 663, 657, 659, 660, 676, 677, 666, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 192, 0,
	0, 0, 0, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 177, 176, 0, 0, 0, 0,
	0, 0, 0, 174, 178, 180, 181, 188, 190, 175,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 105,
	106, 126, 0, 0, 0, 0, 0, 0, 0, 529,
	0, 177, 176, 0, 0, 0, 0, 0, 0, 0,
	0, 178, 180, 181, 188, 190, 175, 105, 106, 126,
	0, 0, 0, 0, 0, 0, 0, 529, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 524, 0, 527, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 530, 0, 0, 0,
	0, 522, 113, 109, 523, 0, 0, 0, 0, 0,
	524, 0, 527, 110, 111, 112, 107, 108, 0, 0,
	233, 0, 0, 0, 530, 0, 0, 0, 0, 522,
	113, 109, 523, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 233, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 788, 536,
	0, 525, 0, 0, 0, 535, 534, 532, 533, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 536, 0, 525,
	0, 0, 0, 535, 534, 532, 533,
}
var yyPact = [...]int{

	-1000, -1000, 2298, -1000, -1000, -1000, -1000, -1000, 336, 543,
	613, 174, -1000, 348, -1000, -1000, 971, -1000, 276, 276,
	5446, 332, 276, 6794, 6682, 6570, 396, 166, 802, 6906,
	-1000, 7990, 328, 325, 315, -1000, 442, 6906, 967, 9,
	965, 962, 6906, -1000, -1000, -1000, -1000, 740, -1000, 716,
	-1000, 2309, 313, 6906, 492, 131, 131, 6906, 6906, 6906,
	6906, -1000, -1000, 7130, -1000, 6906, 6906, 6906, 6906, 6906,
	6906, 6906, 311, 6906, -1000, 214, 206, 977, 6906, 689,
	420, 310, 309, 6906, 6906, 305, 6906, 6906, -1000, 197,
	-1000, -1000, 951, 841, -1000, 195, 297, 6120, -1000, 187,
	158, -1000, 300, 919, 650, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 173, 153, -1000, 647, 279, -1000,
	440, -1000, 265, 367, -1000, 919, -1000, 164, 644, 603,
	-1000, 699, 919, -1000, 959, -1000, -57, 4352, 5290, 7130,
	5134, 809, 9, 561, 6906, 302, -1000, 7936, -1000, 780,
	-1000, 7897, -1000, 395, 2009, 8083, -1000, 146, -1000, -1000,
	403, 141, 9, -59, 97, 8083, -1000, 6906, 6906, 6906,
	6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906,
	6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906,
	6906, 6906, 420, 6458, 131, 6906, 955, -1000, 7843, 394,
	375, -1000, 709, 703, -1000, 2309, 7804, -1000, -1000, 6346,
	6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906, 6906,
	6906, 6906, 236, -1000, -1000, -1000, -1000, -1000, 300, 555,
	919, 624, 623, -1000, -1000, 457, 457, 510, 457, 260,
	7747, 258, 457, 457, 457, 457, 457, 457, 457, -1000,
	6232, -1000, 457, 6906, 6906, 421, 838, 947, -1000, 272,
	7018, 131, 8305, 132, 279, 610, -1000, 528, 550, 919,
	686, 173, 153, 570, 6906, 6906, 8083, 8083, 6906, 8083,
	8083, 6906, 636, 838, 778, -1000, 755, 6906, 6120, 156,
	-32, 7693, 131, 6906, 6906, 952, -1000, 5558, 300, 189,
	6906, 6906, 173, 440, 135, -1000, 6906, 393, -1000, -1000,
	2140, 300, -1000, 700, 58, -1000, 696, 919, 52, -1000,
	687, 919, 950, 678, -73, 8719, -1000, -1000, -1000, -1000,
	-1000, -1000, 296, -1000, -1000, -1000, -1000, -1000, 276, 295,
	392, -35, 8083, -1000, 385, 384, -1000, -1000, -1000, -1000,
	-1000, 166, -1000, 6906, -1000, -1000, 855, 294, 8719, -1000,
	6906, 100, 8432, 8175, 8305, 8266, 8520, 8557, 1812, 41,
	41, 41, 510, 457, 510, 510, 117, 117, 958, 958,
	958, 958, 55, 55, 55, 55, -1000, 7654, 6906, 129,
	-1000, -1000, 2297, 793, 67, -77, 4194, -1000, -1000, 291,
	723, 698, 632, 439, 632, 6906, 8305, 319, 8305, 8305,
	8305, 8305, 8305, 8305, 8305, 8305, 8305, 8305, 8305, 8305,
	21, -1000, -1000, 290, 919, 300, 132, 132, 270, -1000,
	-1000, -1000, 149, 8083, 148, -1000, -1000, -1000, -1000, 896,
	946, 7596, 182, 416, 279, 208, -1000, -1000, 173, 153,
	-1000, 6906, -1000, -1000, 138, 919, 528, 132, 173, 138,
	11, -1000, 2309, -1000, 2152, 7557, 7503, 105, -1000, -1000,
	-1000, 101, 249, -1000, -1000, 6008, 5896, -1000, -1000, 98,
	96, -1000, -1000, 6, 248, -1000, -1000, 2309, 131, 6906,
	-1000, 279, 279, -1000, -1000, 74, 7464, 279, 279, -1000,
	7406, -1000, 1735, -1000, -1000, -1000, -1000, 644, 944, 662,
	-1000, 603, 943, 622, -1000, 942, 8719, -1000, 8029, -1000,
	-1000, 528, 544, 919, 288, 8719, -1000, -1000, -1000, -1000,
	718, 567, 8719, 8719, 8719, 8719, 8719, 245, 515, 4510,
	4036, 383, 6906, 6906, 495, -1000, 918, -1000, -1000, 7367,
	-80, 723, -1000, 8083, 6906, 8395, 379, 131, 301, 301,
	4978, 928, 8719, 770, 723, 241, -41, -1000, 9, -1000,
	-1000, -1000, 528, 537, 919, 437, 632, -1000, -1000, -54,
	-1000, -1000, 2309, -1000, 420, -86, 236, 236, 300, -1000,
	-1000, 186, 684, 6906, -1000, 132, -1000, -1000, 71, -1000,
	-1000, -1000, -1000, -1000, -1000, 6906, -1000, -1000, 53, 19,
	-1000, 6906, 6906, 173, 7309, -1000, 528, -1000, -1000, -1000,
	6906, -1000, -1000, -1000, -1000, -1000, -1000, 7270, 131, 8083,
	131, -1000, -1000, -1000, 5672, -1000, -1000, 8083, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 924, -1000,
	-1000, 922, -1000, -1000, 8719, 8719, 8719, 8719, 8719, 8719,
	8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719,
	8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719, 8719,
	8691, 919, 528, 8719, 64, -45, 7215, 655, 756, 155,
	155, -55, -55, 7159, 376, -1000, 276, 5446, 508, 374,
	-1000, 372, 8083, -1000, 6906, 287, 472, 370, 892, -1000,
	8719, 233, 8395, -1000, -1000, 681, -1000, 131, 283, 681,
	-1000, -1000, -1000, -87, -1000, 765, 281, 231, 753, 723,
	522, 919, 528, -1000, -54, 1002, 632, 279, 6906, -1000,
	-11, 6906, 684, -1000, 62, 279, -1000, 1911, 684, 6906,
	6906, 49, 1216, -1000, 683, -1000, 5784, -1000, -1000, -1000,
	-1000, -1000, 1872, -55, -55, 155, 155, 155, 155, 8469,
	1732, 1956, 222, 222, -55, 8214, 1332, 8122, 1774, -67,
	18, 18, 18, 18, -42, -42, -42, -42, 8719, 1161,
	528, 230, -1000, -1000, 8719, 8719, -1000, -1000, -1000, -1000,
	5446, -1000, 498, 276, 347, -1000, 6906, 1027, -1000, -1000,
	-1000, -1000, -1000, 369, -1000, 753, 226, 301, -1000, 236,
	225, 3878, 8719, -1000, 436, 632, 430, 429, 271, -1000,
	840, -1000, 528, 762, -1000, -1000, 837, -6, -1000, 780,
	620, -1000, 911, 632, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8305, -1000, 46, -1000, -1000, 411, -1000,
	45, 43, -1000, -1000, -1000, 132, 8083, 131, -1000, 8344,
	8719, -1000, 1546, 8029, -1000, 363, 344, -1000, 224, -1000,
	4510, -1000, 428, 4822, -1000, -12, 4822, 361, -1000, -1000,
	835, -1000, -1000, 151, -102, -1000, -25, -107, -1000, 910,
	9, -1000, -108, -83, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8344, 8719, -1000, -1000, 4510, 4666, 4510, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3720, 217, 3562, 3404, -29,
	-1000, 830, 8719, -1000, 829, 8719, -109, 902, 8719, -1000,
	632, -1000, 688, 8029, 4510, -1000, -1000, -1000, 3246, 3088,
	-1000, 427, -1000, -1000, -1000, 106, -1000, -1000, -111, -1000,
	8719, 269, -1000, -1000, 405, 688, -1000, 360, 353, 751,
	790, 566, -1000, 2930, -1000, 351, -1000, -1000, 824, 8719,
	-1000, 723, -1000, -1000, -1000, -1000, 632, 620, 901, 342,
	-1000, 2772, -1000, -1000, 216, -81, -1000, 895, -1000, -1000,
	-1000, 757, 341, 632, -1000, -1000, 757, -1000, 268, -1000,
	-1000, -1000, -1000, -1000, 632, 2614, 823, -1000, 102, 423,
	-1000, 2456, -1000,
}
var yyPgo = [...]int{

	0, 29, 1183, 22, 21, 1177, 49, 41, 39, 544,
	1176, 1175, 164, 217, 228, 180, 1362, 64, 134, 59,
	781, 1399, 1172, 33, 1171, 1170, 1169, 136, 1157, 40,
	37, 1155, 1154, 1152, 1151, 84, 1149, 1148, 20, 1146,
	28, 44, 38, 1145, 736, 36, 1139, 1, 1137, 1136,
	7, 1135, 52, 43, 42, 1134, 1132, 1131, 31, 1128,
	1121, 4, 1120, 1119, 1114, 16, 1111, 1110, 1109, 1108,
	48, 5, 1100, 1097, 1095, 1090, 1089, 2, 1087, 607,
	1086, 18, 202, 1084, 1083, 1082, 12, 1076, 1075, 6,
	19, 1074, 1073, 1072, 9, 50, 0, 1071, 1069, 1068,
	117, 1067, 1066, 599, 1064, 1063, 62, 8, 1062, 1060,
	1059, 1058, 14, 47, 1057, 1056, 1052, 1044, 1042, 1038,
	3, 1034, 23, 1033, 1031, 1027, 35, 1026, 1022, 1019,
	1018, 1014, 1008, 1002, 25, 1001, 1000, 999, 24, 996,
	15, 17, 993, 34, 992, 991, 986, 984, 177, 13,
	983, 902,
}
var yyR1 = [...]int{

	0, 151, 95, 95, 96, 96, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 97, 97,
	6, 6, 6, 6, 98, 98, 7, 7, 7, 7,
	99, 99, 8, 8, 8, 8, 55, 55, 100, 100,
	26, 26, 26, 26, 26, 27, 27, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 117, 117, 60, 60, 118,
	118, 119, 119, 61, 115, 115, 58, 53, 54, 149,
	149, 150, 150, 62, 63, 63, 66, 66, 66, 66,
	91, 91, 2, 93, 93, 92, 92, 126, 126, 90,
	90, 89, 89, 89, 87, 87, 86, 86, 59, 59,
	116, 116, 84, 84, 84, 84, 113, 113, 113, 4,
	4, 88, 88, 109, 109, 110, 110, 56, 56, 57,
	57, 120, 120, 121, 121, 65, 65, 64, 64, 64,
	64, 82, 82, 82, 127, 127, 70, 70, 70, 70,
	101, 101, 29, 29, 29, 102, 102, 102, 102, 122,
	122, 67, 67, 67, 67, 69, 128, 128, 83, 83,
	129, 129, 130, 130, 71, 71, 72, 131, 131, 75,
	75, 74, 73, 73, 76, 76, 85, 85, 123, 123,
	124, 124, 132, 132, 77, 77, 77, 77, 77, 77,
	125, 125, 125, 125, 68, 68, 114, 114, 112, 112,
	111, 111, 138, 138, 136, 136, 137, 137, 137, 139,
	139, 44, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 52, 52, 52, 52,
	49, 49, 49, 49, 48, 48, 1, 94, 94, 108,
	108, 108, 108, 25, 25, 25, 25, 25, 25, 25,
	25, 13, 13, 13, 13, 47, 47, 47, 45, 45,
	43, 43, 146, 146, 145, 51, 51, 51, 133, 133,
	133, 81, 81, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 30, 79, 79, 79,
	79, 79, 79, 79, 79, 79, 79, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	80, 80, 80, 80, 80, 80, 80, 80, 80, 80,
	37, 37, 37, 37, 31, 31, 31, 31, 31, 31,
	31, 134, 134, 3, 3, 135, 135, 135, 135, 16,
	16, 50, 50, 18, 19, 20, 21, 21, 147, 147,
	140, 142, 142, 78, 141, 141, 141, 42, 42, 46,
	46, 14, 24, 24, 22, 22, 22, 23, 23, 23,
	12, 12, 12, 11, 11, 15, 15, 143, 143, 144,
	144, 144, 41, 41, 148, 148, 107, 107, 40, 40,
	40, 106, 106, 105, 105, 105, 105, 105, 105, 105,
	105, 103, 103, 103, 103, 35, 35, 35, 35, 35,
	35, 35, 36, 36, 36, 39, 39, 39, 39, 39,
	39, 39, 39, 104, 104, 38, 38, 32, 32, 33,
	34,
}
var yyR2 = [...]int{

	0, 1, 2, 0, 1, 3, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 4, 2, 3, 1,
	1, 3, 2, 4, 3, 1, 1, 3, 2, 4,
	3, 1, 1, 3, 2, 4, 5, 4, 2, 0,
	1, 1, 1, 1, 4, 1, 2, 3, 5, 8,
	3, 5, 9, 3, 2, 3, 2, 3, 2, 3,
	3, 2, 3, 3, 3, 1, 2, 5, 8, 8,
	5, 1, 6, 3, 3, 0, 9, 0, 4, 1,
	0, 1, 2, 8, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 9, 7, 6, 1, 2, 1, 2,
	0, 2, 1, 0, 2, 0, 2, 1, 3, 0,
	2, 1, 2, 4, 1, 4, 1, 4, 1, 4,
	3, 5, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 0, 4, 0, 5, 0, 2, 0,
	3, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	1, 2, 3, 3, 1, 3, 1, 1, 2, 2,
	3, 1, 1, 2, 4, 3, 5, 1, 3, 2,
	0, 3, 2, 1, 8, 3, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 2, 3, 1, 3, 1,
	1, 3, 4, 3, 0, 1, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 5, 4, 3, 1, 0, 1,
	3, 1, 2, 1, 4, 3, 2, 1, 1, 0,
	1, 3, 6, 3, 4, 6, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 4, 5, 4, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 9, 10, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 3, 1, 0, 4, 3,
	4, 1, 2, 2, 4, 3, 4, 4, 4, 4,
	2, 1, 1, 3, 2, 1, 3, 2, 1, 1,
	4, 1, 2, 0, 2, 0, 2, 1, 0, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 1,
	3, 2, 4, 3, 1, 1, 1, 4, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 2, 2, 3,
	1, 1, 3, 2, 1, 1, 1, 1, 3, 3,
	1, 0, 2, 0, 1, 5, 3, 3, 1, 1,
	1, 3, 3, 1, 1, 1, 5, 1, 2, 0,
	3, 4, 4, 1, 1, 1, 0, 1, 2, 3,
	3, 1, 4, 4, 1, 1, 1, 1, 2, 1,
	4, 4, 1, 1, 4, 0, 1, 1, 1, 4,
	4, 1, 1, 3, 1, 2, 3, 1, 1, 4,
	0, 0, 2, 5, 3, 3, 1, 6, 4, 4,
	2, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	6, 3, 1, 1, 1, 4, 4, 4, 2, 2,
	4, 2, 2, 1, 3, 1, 1, 3, 3, 3,
	3,
}
var yyChk = [...]int{

	-1000, -151, -95, -5, 2, -27, -53, -54, 52, 80,
	45, -55, -28, 10, -62, -63, 39, 144, 7, 21,
	20, 23, 30, 34, 35, 40, -52, 47, 99, 19,
	14, -16, 49, 25, 27, 146, 41, 44, 36, -1,
	-66, -2, 98, -18, -17, 37, 53, 100, 54, 101,
	55, -21, 60, 93, -20, 105, 106, 155, 154, 156,
	157, -50, -44, 148, -39, 108, 109, 110, 111, 112,
	113, 114, 6, 158, -31, -49, -48, 143, 97, -22,
	92, 50, 51, 4, 5, 85, 86, 87, 11, -37,
	-34, -9, 142, 75, 63, 18, 61, 150, -23, -24,
	-25, -32, -96, 83, -13, 8, 9, 67, 68, 82,
	64, 65, 66, 81, -12, -148, -46, -14, -42, -11,
	159, 12, 148, -96, 144, 83, 10, -97, 37, 39,
	-6, -96, 83, 146, 160, 147, 10, -100, -50, 148,
	-50, -27, -1, 80, 148, -50, 146, -16, 98, 99,
	146, -16, 146, -17, -21, -16, 146, -101, -29, 12,
	159, -102, -1, 12, -114, -16, 146, 131, 132, 88,
	90, 89, 161, 153, 163, 169, 155, 154, 164, 133,
	165, 166, 134, 135, 136, 137, 138, 139, 167, 140,
	168, 141, 91, 152, 148, 148, 148, 144, -16, 10,
	-149, 153, 10, 10, -17, -21, -16, 53, 53, 162,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 148, -16, 105, 106, -20, -21, -96, 80,
	83, -13, -14, 99, -20, -16, -16, -16, -16, -44,
	-16, -52, -16, -16, -16, -16, -16, -16, -16, -51,
	148, -50, -16, 150, 150, -133, 17, -103, -35, 12,
	77, 78, -16, 58, -45, -13, -43, -96, 80, 83,
	-23, -12, -148, -14, 148, 148, -16, -16, 148, -16,
	-16, 150, -103, 17, 17, 76, -103, 150, 148, -106,
	-105, -16, 153, 150, 150, 83, -82, 148, -96, 79,
	150, 144, -12, 159, 79, -82, 144, 149, 146, 144,
	-95, -96, 146, 160, -98, -7, -96, 83, -99, -8,
	-96, 83, 29, -96, 10, 162, -26, 145, 2, -27,
	-53, -54, 52, -27, 147, -88, -27, 147, 21, -149,
	-112, -111, -16, -84, 144, 147, 146, 146, 146, 146,
	146, 160, -18, 144, -21, 146, 160, -149, 162, 146,
	160, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -45, -16, 147, -115,
	-58, -21, -21, -17, -116, 10, -100, 146, 146, 10,
	148, -91, 56, -93, 56, 59, -16, 153, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-107, -40, -21, 60, 83, -96, 79, 79, 149, 149,
	149, 149, -15, -16, -15, 143, -35, -35, 17, 150,
	58, -16, 11, -21, -143, -144, -42, -41, -12, -148,
	10, 144, -81, -82, 79, 83, -96, 58, -12, 79,
	-104, -38, -21, -17, -21, -16, -16, -15, 142, 76,
	76, -15, -106, 151, -3, 160, 59, -19, -21, -15,
	-15, 10, 149, -127, -52, -70, -17, -21, 153, 84,
	-82, -41, -42, 10, 53, -15, -16, -41, -42, 10,
	-16, 146, -95, 145, -82, -6, 146, 160, 29, -96,
	146, 160, 29, -96, 10, 29, 162, -30, -79, -9,
	-33, -96, 80, 83, 61, 150, -10, 63, -80, 18,
	75, -13, 156, 157, 155, 154, 148, 148, -109, -100,
	-100, -50, 146, 160, -113, 146, -113, 146, -29, -16,
	12, 148, -30, -16, 147, -16, 149, 160, 29, 29,
	149, 160, 162, 145, 148, -120, -121, -65, -64, 61,
	62, -47, -96, 80, 83, -92, 57, -47, 144, -126,
	-47, -17, -21, -21, 92, 149, 160, 148, -96, -139,
	-137, -136, -138, 150, -140, 58, 151, 151, -36, 10,
	13, 12, 10, 145, 145, 150, 145, -141, -78, -142,
	-82, 150, 144, -12, -16, -42, -96, -143, -42, 149,
	160, 149, 149, 149, 151, 151, 149, -16, 153, -16,
	153, 151, 151, 149, 160, 149, -19, -16, -82, -82,
	151, 145, -82, -82, 145, 145, -7, 10, 29, -8,
	10, 29, 10, -30, 150, 155, 154, 164, 133, 165,
	166, 161, 153, 163, 134, 135, 169, 89, 90, 88,
	132, 131, 136, 137, 138, 139, 167, 168, 140, 141,
	152, 83, -96, 148, -134, -135, -79, 17, 79, -79,
	-79, -79, -79, -79, 149, -56, 94, 95, -110, 22,
	146, -112, -16, 145, 32, 33, -113, 31, -113, 145,
	162, -120, -16, 146, -58, -89, -21, 153, 60, -89,
	-59, -27, 147, 10, -30, -117, 42, -120, 149, 160,
	-149, 83, -96, 144, -126, -122, 160, -45, 162, -40,
	-107, 150, -138, -140, -15, -143, 151, -16, -147, 150,
	150, -15, -16, 145, -146, -38, 59, -19, -19, -70,
	10, 10, -79, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, -79, -79,
	-79, -79, -79, -79, -79, -79, -79, -79, 147, -79,
	-96, -134, 151, -3, 160, 59, 10, 53, 149, 146,
	-50, -27, -57, 94, 95, 146, 146, -16, -4, 147,
	146, 145, 146, 31, -30, 149, -90, 59, -21, 148,
	-90, -100, 162, -60, 43, 148, 149, -94, 45, -65,
	-150, 84, -96, -122, 145, -67, -123, -68, -69, -124,
	-132, 48, 39, 45, -77, 104, 103, 102, 99, 100,
	101, -47, -81, -16, 149, -15, 151, -141, 151, -140,
	-15, -15, 151, 145, -145, 58, -16, 153, 151, -79,
	147, 149, -79, -79, -27, 96, -50, 147, -112, -4,
	-100, 146, -94, 149, -89, -107, 149, 28, -30, 144,
	-47, 144, 144, 148, 12, 145, -125, 12, 146, 160,
	-1, -77, 10, -128, -47, 151, 145, 151, 151, -143,
	-19, -79, 59, 146, 147, -100, 149, -100, 144, -86,
	-27, 147, 149, -86, 146, -100, 12, -100, -100, -108,
	12, 153, 162, 146, 160, 162, 10, -149, 162, -83,
	160, 146, 144, -79, -100, -87, -27, 147, -100, -100,
	145, 149, 145, 145, 149, 160, 12, -30, 12, -30,
	162, 10, -30, -47, -129, -130, -71, -72, -73, -74,
	-75, -47, 10, -100, 145, 26, 144, 12, 153, 162,
	-30, 148, 145, -71, 146, 146, 46, 29, 79, 24,
	146, -100, 12, -30, -120, -131, -47, -76, -77, 10,
	146, 145, 149, 160, 10, -118, -119, -61, 42, -85,
	146, 144, -47, -61, 148, -100, -47, 145, 12, 149,
	144, -100, 145,
}
var yyDef = [...]int{

	3, -2, -2, 2, 6, 7, 8, 9, 0, 0,
	0, 0, 45, 4, 87, 88, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	65, 0, 0, 0, 0, 71, 0, 0, 0, 89,
	0, 0, 303, 429, 430, 316, 96, 0, 98, 0,
	102, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 298, 299, 300, 348, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	416, 417, 0, 0, 420, 355, 0, 481, 454, 455,
	456, 410, -2, 0, 0, 353, 354, 356, 357, 358,
	359, 360, 361, 362, -2, 0, 459, 0, 0, 462,
	474, 463, 0, 0, 3, 0, 4, 0, 0, 0,
	19, 20, 0, 17, 0, 46, 0, 0, 0, 0,
	0, 0, 89, 0, 218, 0, 54, 0, 303, 331,
	56, 0, 58, 430, -2, 0, 61, 0, 161, 162,
	0, 0, 89, 167, 0, 217, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	0, 90, 100, 103, -2, -2, 0, 97, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 236, 249, 251, 250, 435, 332, 0,
	0, 0, 0, 331, 252, 270, 271, 272, 273, 284,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 296,
	0, 347, 297, 465, 465, 0, 349, 350, 493, 495,
	0, 0, 302, 0, 351, 338, 339, 332, 0, 0,
	341, -2, 0, 0, 0, 0, 508, 509, 0, 511,
	512, 465, 0, 0, 0, 364, 0, 465, 481, 0,
	423, 486, 0, 465, 465, 0, 323, 0, -2, 0,
	465, 0, -2, 475, 0, 330, 0, 0, 11, 3,
	0, -2, 14, 0, 0, 25, 26, 0, 0, 31,
	32, 0, 0, 22, 0, 0, 38, 47, 40, 41,
	42, 43, 0, 133, 39, 50, 131, 39, 0, 0,
	0, 219, 221, 53, 126, 126, 55, 57, 59, 60,
	62, 0, 163, 0, 433, 63, 0, 0, 0, 64,
	0, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, -2, -2,
	-2, -2, -2, -2, -2, -2, 282, 0, 0, 0,
	84, 86, -2, 430, 0, 0, 0, 73, 74, 0,
	-2, 105, 0, 0, 0, 0, 233, 0, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	0, 477, 478, 0, 0, 334, 0, 0, 229, 431,
	432, 346, 0, 466, 0, 301, 494, 491, 492, 0,
	0, 0, 414, 0, 446, 467, 468, 471, 447, 0,
	472, 0, 231, 352, 0, 0, 334, 0, 458, 0,
	0, 513, -2, -2, -2, 0, 0, 0, 418, 363,
	419, 0, 0, 315, 482, 424, 0, 490, 434, 0,
	0, 5, 151, 0, 0, 154, -2, -2, 0, 0,
	325, 0, 449, -2, 520, 0, 0, 0, 450, -2,
	0, 10, 0, 13, 324, 18, 15, 0, 0, 28,
	16, 0, 0, 34, 21, 0, 0, 37, 366, 367,
	368, -2, 0, 0, 0, 421, 374, 375, 376, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 137, -2,
	0, 0, 218, 0, 0, 126, 0, 126, 160, 0,
	165, -2, 168, 216, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 75, -2, 0, 141, 143, 89, 148,
	149, 150, 335, 0, 0, 0, 0, 101, 170, 104,
	107, -2, -2, 234, 0, 0, 480, 480, 333, 285,
	230, 227, 228, 465, 223, 0, 311, 310, 0, 502,
	503, 504, 497, 498, 499, 0, 501, 439, 444, 445,
	443, 465, 0, 448, 0, 449, 333, 343, 450, 505,
	0, 506, 507, 510, 313, 312, 314, 484, 0, 485,
	0, 452, 453, 152, 0, 153, 158, 159, 326, 327,
	460, 461, 328, 329, 464, 12, 24, 27, 0, 30,
	33, 0, 23, 36, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 421, 0, 423, 428, 0, 0, 384,
	385, 407, 408, 0, 0, 48, 0, 0, 139, 0,
	51, 0, 220, 122, 0, 0, 0, 0, 0, 164,
	0, 0, 286, 67, 85, 109, 111, 0, 0, 109,
	70, 118, 39, 0, 120, 77, 0, 0, 317, 147,
	91, 0, 337, 170, 106, 200, 0, 351, 0, 476,
	0, 465, 226, 222, 0, 446, 496, 0, 436, 465,
	465, 0, 0, 473, 340, 514, 0, 488, 489, 155,
	29, 35, 0, 378, 379, 380, 381, 382, 383, 386,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 0,
	-2, 0, 373, 422, 424, 0, 365, 519, 409, 44,
	0, 138, 0, 0, 0, 132, 218, 0, 39, 129,
	130, 123, 124, 0, 166, 317, 0, 0, 112, 480,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 144,
	0, 92, 336, 200, 95, 169, 0, 0, 173, 0,
	-2, 199, 0, 0, 202, 204, 205, 206, 207, 208,
	209, 108, 235, 232, 479, 0, 225, 440, 0, 438,
	0, 0, 469, 470, 342, 0, 483, 0, 377, 405,
	0, 372, 426, 427, 134, 0, 0, 39, 0, 39,
	-2, 125, 0, 0, 110, 0, 0, 0, 121, 39,
	0, 39, 39, 0, 145, 94, 0, 212, 172, 0,
	89, 203, 0, 0, 176, 224, 500, 442, 441, 344,
	487, 406, 0, 49, 39, -2, 0, -2, 39, 68,
	116, 39, 113, 69, 119, 0, 0, 0, 0, 0,
	321, 0, 0, 171, 0, 0, 0, 0, 0, 175,
	0, 178, 180, 425, -2, 52, 114, 39, 0, 0,
	78, 0, 93, 304, 318, 0, 322, 146, 210, 213,
	0, 0, 215, 177, 0, 181, 182, 0, 0, 190,
	0, 0, -2, 0, 305, 0, 39, 319, 0, 0,
	214, -2, 179, 183, 184, 185, 0, 194, 0, 0,
	117, 0, 320, 211, 0, 186, 187, 0, -2, 191,
	115, 80, 0, 0, 192, 76, 79, 81, 0, 174,
	196, 39, 188, 82, 0, 0, 0, 197, 0, 0,
	39, 0, 83,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 156, 142, 3, 159, 166, 153, 3,
	148, 149, 164, 155, 160, 154, 169, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 147, 146,
	167, 162, 168, 152, 158, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 150, 3, 151, 163, 3, 143, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 161, 145, 157,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:276
		{
			yylex.(*Parser).rootNode = &ast.Root{ast.Node{}, yyDollar[1].list}
			yylex.(*Parser).rootNode.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			yylex.(*Parser).setFreeFloating(yylex.(*Parser).rootNode, token.End, yylex.(*Parser).currentToken.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:288
		{
			if inlineHtmlNode, ok := yyDollar[2].node.(*ast.StmtInlineHtml); ok && len(yyDollar[1].list) > 0 {
				prevNode := lastNode(yyDollar[1].list)
				yylex.(*Parser).splitSemiColonAndPhpCloseTag(inlineHtmlNode, prevNode)
			}

			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:301
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:310
		{
			namePart := &ast.NameNamePart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{namePart}

			// save position
			namePart.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(namePart, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:323
		{
			namePart := &ast.NameNamePart{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.list = append(yyDollar[1].list, namePart)

			// save position
			namePart.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(namePart, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:340
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:347
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:353
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:359
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 10:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:365
		{
			yyVAL.node = &ast.StmtHaltCompiler{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.HaltCompiller, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.OpenParenthesisToken, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:381
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:398
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, name, yyDollar[4].list}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:415
		{
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, nil, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:429
		{
			yyVAL.node = &ast.StmtUseList{ast.Node{}, nil, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:443
		{
			useType := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtUseList{ast.Node{}, useType, yyDollar[3].list}

			// save position
			useType.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(useType, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:460
		{
			useType := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtUseList{ast.Node{}, useType, yyDollar[3].list}

			// save position
			useType.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(useType, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:477
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:493
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:502
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:511
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 21:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:525
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:543
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:559
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:582
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:591
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:600
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:614
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:632
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 29:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:648
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:671
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:680
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:689
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:703
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:721
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:737
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[2].list, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:760
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[5].node}
			constList := yyDollar[1].node.(*ast.StmtConstList)
			lastConst := lastNode(constList.Consts)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, constList.Consts)

			// save comments
			yylex.(*Parser).setFreeFloating(lastConst, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:781
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[4].node}
			constList := []ast.Vertex{constant}
			yyVAL.node = &ast.StmtConstList{ast.Node{}, constList}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, constList)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:803
		{
			if inlineHtmlNode, ok := yyDollar[2].node.(*ast.StmtInlineHtml); ok && len(yyDollar[1].list) > 0 {
				prevNode := lastNode(yyDollar[1].list)
				yylex.(*Parser).splitSemiColonAndPhpCloseTag(inlineHtmlNode, prevNode)
			}

			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:816
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:826
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:833
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:839
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:845
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:851
		{
			yyVAL.node = &ast.StmtHaltCompiler{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.HaltCompiller, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.OpenParenthesisToken, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:871
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:877
		{
			label := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtLabel{ast.Node{}, label}

			// save position
			label.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Label, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:895
		{
			yyVAL.node = &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:908
		{
			yyVAL.node = &ast.StmtIf{ast.Node{}, yyDollar[2].node, yyDollar[3].node, yyDollar[4].list, yyDollar[5].node}

			// save position
			if yyDollar[5].node != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)
			} else if len(yyDollar[4].list) > 0 {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.If, yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.CloseParenthesisToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php5/php5.y:932
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[4].list}
			yyVAL.node = &ast.StmtAltIf{ast.Node{}, yyDollar[2].node, stmts, yyDollar[5].list, yyDollar[6].node}

			// save position
			stmts.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[4].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.If, yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.CloseParenthesisToken)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[7].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[8].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[8].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:956
		{
			switch n := yyDollar[3].node.(type) {
			case *ast.StmtWhile:
				n.Cond = yyDollar[2].node
			case *ast.StmtAltWhile:
				n.Cond = yyDollar[2].node
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.While, yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.CloseParenthesisToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:981
		{
			yyVAL.node = &ast.StmtDo{ast.Node{}, yyDollar[2].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			if len(yyDollar[4].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.While, yyDollar[4].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[4].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[4].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[4].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[4].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[4].node.GetNode().Tokens, token.CloseParenthesisToken)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[5].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php5/php5.y:1002
		{
			switch n := yyDollar[9].node.(type) {
			case *ast.StmtFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			case *ast.StmtAltFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			}

			yyVAL.node = yyDollar[9].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.For, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.InitExpr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CondExpr, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.IncExpr, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1029
		{
			switch n := yyDollar[3].node.(type) {
			case *ast.StmtSwitch:
				n.Cond = yyDollar[2].node
			case *ast.StmtAltSwitch:
				n.Cond = yyDollar[2].node
			default:
				panic("unexpected node type")
			}

			yyVAL.node = yyDollar[3].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Switch, yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[2].node.GetNode().Tokens, token.CloseParenthesisToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1056
		{
			yyVAL.node = &ast.StmtBreak{ast.Node{}, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1070
		{
			yyVAL.node = &ast.StmtBreak{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1084
		{
			yyVAL.node = &ast.StmtContinue{ast.Node{}, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1098
		{
			yyVAL.node = &ast.StmtContinue{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1112
		{
			yyVAL.node = &ast.StmtReturn{ast.Node{}, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1126
		{
			yyVAL.node = &ast.StmtReturn{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1140
		{
			yyVAL.node = &ast.StmtReturn{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1154
		{
			yyVAL.node = &ast.StmtExpression{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1168
		{
			yyVAL.node = &ast.StmtGlobal{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1182
		{
			yyVAL.node = &ast.StmtStatic{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1196
		{
			yyVAL.node = &ast.StmtEcho{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Echo, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1211
		{
			yyVAL.node = &ast.StmtInlineHtml{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1223
		{
			yyVAL.node = &ast.StmtExpression{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:1237
		{
			yyVAL.node = &ast.StmtUnset{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Unset, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[5].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php5/php5.y:1253
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *ast.StmtForeach:
					n.Expr = yyDollar[3].node
					n.Var = yyDollar[5].node
				case *ast.StmtAltForeach:
					n.Expr = yyDollar[3].node
					n.Var = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *ast.StmtForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Var = yyDollar[6].node
				case *ast.StmtAltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Var = yyDollar[6].node
				}
			}

			yyVAL.node = yyDollar[8].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Foreach, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)
			if yyDollar[6].node != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Key, yyDollar[6].node.GetNode().Tokens[token.Key])
				delete(yyDollar[6].node.GetNode().Tokens, token.Key)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php5/php5.y:1293
		{
			if yyDollar[6].node == nil {
				switch n := yyDollar[8].node.(type) {
				case *ast.StmtForeach:
					n.Expr = yyDollar[3].node
					n.Var = yyDollar[5].node
				case *ast.StmtAltForeach:
					n.Expr = yyDollar[3].node
					n.Var = yyDollar[5].node
				}
			} else {
				switch n := yyDollar[8].node.(type) {
				case *ast.StmtForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Var = yyDollar[6].node
				case *ast.StmtAltForeach:
					n.Expr = yyDollar[3].node
					n.Key = yyDollar[5].node
					n.Var = yyDollar[6].node
				}
			}

			// save position
			yyVAL.node = yyDollar[8].node

			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Foreach, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)
			if yyDollar[6].node != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Key, yyDollar[6].node.GetNode().Tokens[token.Key])
				delete(yyDollar[6].node.GetNode().Tokens, token.Key)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:1333
		{
			yyVAL.node = yyDollar[5].node
			yyVAL.node.(*ast.StmtDeclare).Consts = yyDollar[3].list

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Declare, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ConstList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1348
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:1361
		{
			yyVAL.node = &ast.StmtTry{ast.Node{}, yyDollar[3].list, yyDollar[5].list, yyDollar[6].node}

			// save position
			if yyDollar[6].node == nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Try, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1379
		{
			yyVAL.node = &ast.StmtThrow{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1393
		{
			label := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtGoto{ast.Node{}, label}

			// save position
			label.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(label, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Label, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1413
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php5/php5.y:1419
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[4].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			catchNode := &ast.StmtCatch{ast.Node{}, []ast.Vertex{yyDollar[3].node}, variable, yyDollar[7].list}
			yyVAL.list = append([]ast.Vertex{catchNode}, yyDollar[9].list...)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			catchNode.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token)

			// save comments
			yylex.(*Parser).setFreeFloating(catchNode, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(catchNode, token.Catch, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(catchNode, token.Var, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(catchNode, token.Cond, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(catchNode, token.Stmts, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1444
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:1450
		{
			yyVAL.node = &ast.StmtFinally{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Finally, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1467
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1473
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1482
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1488
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php5/php5.y:1497
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[4].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.StmtCatch{ast.Node{}, []ast.Vertex{yyDollar[3].node}, variable, yyDollar[7].list}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[8].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Catch, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1521
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1527
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1539
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1548
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1557
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1566
		{
			yyVAL.token = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1570
		{
			yyVAL.token = yyDollar[1].token
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1577
		{
			yyVAL.token = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1581
		{
			yyVAL.token = yyDollar[1].token
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php5/php5.y:1588
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtFunction{ast.Node{}, yyDollar[2].token != nil, name, yyDollar[5].list, nil, yyDollar[8].list}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[2].token.Tokens)
				yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[3].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParamList, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Params, yyDollar[7].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[9].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
// line internal/php5/php5.y:1615
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			switch n := yyDollar[1].node.(type) {
			case *ast.StmtClass:
				n.ClassName = name
				n.Stmts = yyDollar[6].list
				n.Extends = yyDollar[3].ClassExtends
				n.Implements = yyDollar[4].ClassImplements

			case *ast.StmtTrait:
				// TODO: is it possible that trait extend or implement
				n.TraitName = name
				n.Stmts = yyDollar[6].list
			}
			yyVAL.node = yyDollar[1].node

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[7].token)

			// save comments
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:1643
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtInterface{ast.Node{}, name, yyDollar[3].InterfaceExtends, yyDollar[5].list}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1664
		{
			yyVAL.node = &ast.StmtClass{ast.Node{}, nil, nil, nil, nil, nil, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1676
		{
			classModifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtClass{ast.Node{}, nil, []ast.Vertex{classModifier}, nil, nil, nil, nil}

			// save position
			classModifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1691
		{
			yyVAL.node = &ast.StmtTrait{ast.Node{}, nil, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1703
		{
			classModifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtClass{ast.Node{}, nil, []ast.Vertex{classModifier}, nil, nil, nil, nil}

			// save position
			classModifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1721
		{
			yyVAL.ClassExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1727
		{
			yyVAL.ClassExtends = &ast.StmtClassExtends{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.ClassExtends.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClassExtends, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1742
		{
			yyVAL.token = yyDollar[1].token
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1749
		{
			yyVAL.InterfaceExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1755
		{
			yyVAL.InterfaceExtends = &ast.StmtInterfaceExtends{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.InterfaceExtends.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.InterfaceExtends, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1770
		{
			yyVAL.ClassImplements = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1776
		{
			yyVAL.ClassImplements = &ast.StmtClassImplements{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.ClassImplements.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClassImplements, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1791
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1797
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:1809
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1815
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Key, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1827
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:1833
		{
			yyVAL.node = &ast.ExprReference{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:1845
		{
			yyVAL.node = &ast.ExprList{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1862
		{
			yyVAL.node = &ast.StmtFor{ast.Node{}, nil, nil, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:1871
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltFor{ast.Node{}, nil, nil, nil, stmtList}

			// save position
			stmtList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1891
		{
			yyVAL.node = &ast.StmtForeach{ast.Node{}, nil, nil, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:1900
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltForeach{ast.Node{}, nil, nil, nil, stmtList}

			// save position
			stmtList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:1921
		{
			yyVAL.node = &ast.StmtDeclare{ast.Node{}, false, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:1930
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtDeclare{ast.Node{}, true, nil, stmtList}

			// save position
			stmtList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1951
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{constant}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:1967
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[5].node}
			yyVAL.list = append(yyDollar[1].list, constant)

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:1988
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(caseList, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2003
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.StmtSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(caseList, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListStart, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2019
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:2036
		{

			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.StmtAltSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListStart, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[5].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2059
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:2065
		{
			_case := &ast.StmtCase{ast.Node{}, yyDollar[3].node, yyDollar[5].list}
			yyVAL.list = append(yyDollar[1].list, _case)

			// save position
			_case.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_case, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_case, token.Expr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(_case, token.CaseSeparator, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2080
		{
			_default := &ast.StmtDefault{ast.Node{}, yyDollar[4].list}
			yyVAL.list = append(yyDollar[1].list, _default)

			// save position
			_default.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_default, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_default, token.Default, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(_default, token.CaseSeparator, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2099
		{
			yyVAL.token = yyDollar[1].token
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2103
		{
			yyVAL.token = yyDollar[1].token
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2111
		{
			yyVAL.node = &ast.StmtWhile{ast.Node{}, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2120
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltWhile{ast.Node{}, nil, stmtList}

			// save position
			stmtList.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2142
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2148
		{
			_elseIf := &ast.StmtElseIf{ast.Node{}, yyDollar[3].node, yyDollar[4].node}
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			_elseIf.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(_elseIf, token.Start, yyDollar[2].token.Tokens)
			if len(yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(_elseIf, token.ElseIf, yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[3].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(_elseIf, token.Expr, yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[3].node.GetNode().Tokens, token.CloseParenthesisToken)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2171
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:2177
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[5].list}
			_elseIf := &ast.StmtAltElseIf{ast.Node{}, yyDollar[3].node, stmts}
			yyVAL.list = append(yyDollar[1].list, _elseIf)

			// save position
			stmts.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[5].list)
			_elseIf.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_elseIf, token.Start, yyDollar[2].token.Tokens)
			if len(yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(_elseIf, token.ElseIf, yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken][:len(yyDollar[3].node.GetNode().Tokens[token.OpenParenthesisToken])-1])
				delete(yyDollar[3].node.GetNode().Tokens, token.OpenParenthesisToken)
			}
			if len(yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(_elseIf, token.Expr, yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken][:len(yyDollar[3].node.GetNode().Tokens[token.CloseParenthesisToken])-1])
				delete(yyDollar[3].node.GetNode().Tokens, token.CloseParenthesisToken)
			}
			yylex.(*Parser).setFreeFloating(_elseIf, token.Cond, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2203
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2209
		{
			yyVAL.node = &ast.StmtElse{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2225
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2231
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.StmtAltElse{ast.Node{}, stmts}

			// save position
			stmts.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[3].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Else, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2250
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2256
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2265
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2271
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2283
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[4].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.Parameter{ast.Node{}, yyDollar[2].token != nil, yyDollar[3].token != nil, yyDollar[1].node, variable, nil}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			}

			// save comments
			if yyDollar[1].node != nil {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			}
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Variadic, yyDollar[4].token.Tokens)

			// normalize
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyVAL.node.GetNode().Tokens[token.Variadic])
				delete(yyVAL.node.GetNode().Tokens, token.Variadic)
			}
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyVAL.node.GetNode().Tokens[token.Ampersand])
				delete(yyVAL.node.GetNode().Tokens, token.Ampersand)
			}
			if yyDollar[1].node == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyVAL.node.GetNode().Tokens[token.OptionalType])
				delete(yyVAL.node.GetNode().Tokens, token.OptionalType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:2327
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[4].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.Parameter{ast.Node{}, yyDollar[2].token != nil, yyDollar[3].token != nil, yyDollar[1].node, variable, yyDollar[6].node}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			}

			// save comments
			if yyDollar[1].node != nil {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			}
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Variadic, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[5].token.Tokens)

			// normalize
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyVAL.node.GetNode().Tokens[token.Variadic])
				delete(yyVAL.node.GetNode().Tokens, token.Variadic)
			}
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyVAL.node.GetNode().Tokens[token.Ampersand])
				delete(yyVAL.node.GetNode().Tokens, token.Ampersand)
			}
			if yyDollar[1].node == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyVAL.node.GetNode().Tokens[token.OptionalType])
				delete(yyVAL.node.GetNode().Tokens, token.OptionalType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2376
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2382
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2394
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2406
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2416
		{
			yyVAL.node = &ast.ArgumentList{ast.Node{}, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2429
		{
			yyVAL.node = &ast.ArgumentList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2442
		{
			arg := &ast.Argument{ast.Node{}, false, false, yyDollar[2].node}
			yyVAL.node = &ast.ArgumentList{ast.Node{}, []ast.Vertex{arg}}

			// save position
			arg.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2461
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2467
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2479
		{
			yyVAL.node = &ast.Argument{ast.Node{}, false, false, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2491
		{
			yyVAL.node = &ast.Argument{ast.Node{}, false, false, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2503
		{
			yyVAL.node = &ast.Argument{ast.Node{}, false, true, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2515
		{
			yyVAL.node = &ast.Argument{ast.Node{}, true, false, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2530
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2539
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2549
		{
			name := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2563
		{
			yyVAL.node = &ast.ExprVariable{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Dollar, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2576
		{
			yyVAL.node = &ast.ExprVariable{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Dollar, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyDollar[3].node, token.Start, append(yyDollar[2].token.Tokens, append(yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token), yyDollar[3].node.GetNode().Tokens[token.Start]...)...))
			yylex.(*Parser).setFreeFloating(yyDollar[3].node, token.End, append(yyDollar[3].node.GetNode().Tokens[token.End], append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2595
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[3].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			staticVar := &ast.StmtStaticVar{ast.Node{}, variable, nil}
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			staticVar.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(staticVar, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:2613
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[3].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			staticVar := &ast.StmtStaticVar{ast.Node{}, variable, yyDollar[5].node}
			yyVAL.list = append(yyDollar[1].list, staticVar)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			staticVar.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(staticVar, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(staticVar, token.Var, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2632
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			staticVar := &ast.StmtStaticVar{ast.Node{}, variable, nil}
			yyVAL.list = []ast.Vertex{staticVar}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			staticVar.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(staticVar, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2649
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			staticVar := &ast.StmtStaticVar{ast.Node{}, variable, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{staticVar}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			staticVar.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(staticVar, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(staticVar, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2671
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2677
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2687
		{
			yyVAL.node = &ast.StmtPropertyList{ast.Node{}, yyDollar[1].list, nil, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.PropertyList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2701
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ConstList, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2714
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
// line internal/php5/php5.y:2720
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtClassMethod{ast.Node{}, yyDollar[3].token != nil, name, yyDollar[1].list, yyDollar[6].list, nil, yyDollar[8].node}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].list == nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[8].node)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListNodePosition(yyDollar[1].list, yyDollar[8].node)
			}

			// save comments
			if len(yyDollar[1].list) > 0 {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[4].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[3].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[4].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2754
		{
			yyVAL.node = &ast.StmtTraitUse{ast.Node{}, yyDollar[2].list, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2769
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2775
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2787
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2799
		{
			yyVAL.node = &ast.StmtTraitAdaptationList{ast.Node{}, yyDollar[2].list}

			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AdaptationList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2814
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2820
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2829
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2835
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2844
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.NameList, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:2854
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Alias, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2867
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{ast.Node{}, yyDollar[1].node, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2883
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2889
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2901
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtTraitMethodRef{ast.Node{}, nil, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2915
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2924
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtTraitMethodRef{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:2943
		{
			alias := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, yyDollar[3].node, alias}

			// save position
			alias.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:2959
		{
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, yyDollar[3].node, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:2975
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2981
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:2990
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.SemiColon, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3003
		{
			yyVAL.node = &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3019
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3025
		{
			modifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{modifier}

			// save position
			modifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(modifier, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:3041
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3047
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3056
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3062
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3071
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3083
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3095
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3107
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3119
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3131
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3146
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[3].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			property := &ast.StmtProperty{ast.Node{}, variable, nil}
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			property.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(property, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:3164
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[3].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			property := &ast.StmtProperty{ast.Node{}, variable, yyDollar[5].node}
			yyVAL.list = append(yyDollar[1].list, property)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			property.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(property, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(property, token.Var, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3183
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			property := &ast.StmtProperty{ast.Node{}, variable, nil}
			yyVAL.list = []ast.Vertex{property}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			property.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(property, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3200
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			property := &ast.StmtProperty{ast.Node{}, variable, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{property}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			property.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(property, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(property, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:3221
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[5].node}
			constList := yyDollar[1].node.(*ast.StmtClassConstList)
			lastConst := lastNode(constList.Consts)
			constList.Consts = append(constList.Consts, constant)
			yyVAL.node = yyDollar[1].node

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node)
			yyDollar[1].node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastConst, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:3242
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			constant := &ast.StmtConstant{ast.Node{}, name, yyDollar[4].node}
			yyVAL.node = &ast.StmtClassConstList{ast.Node{}, nil, []ast.Vertex{constant}}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			constant.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(constant, token.Name, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3263
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3272
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:3282
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3288
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3297
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3306
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3315
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3321
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:3330
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3344
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[2].node}
			yyVAL.list = []ast.Vertex{fetch}

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[1].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3361
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3367
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3373
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:3382
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:3388
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3397
		{

			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{ast.Node{}, yyDollar[2].node, yyDollar[3].node.(*ast.ArgumentList)}
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)
			} else {
				yyVAL.node = &ast.ExprNew{ast.Node{}, yyDollar[2].node, nil}
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:3416
		{
			listNode := &ast.ExprList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprAssign{ast.Node{}, listNode, yyDollar[6].node}

			// save position
			listNode.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.ArrayPairList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3433
		{
			yyVAL.node = &ast.ExprAssign{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:3446
		{
			yyVAL.node = &ast.ExprAssignReference{ast.Node{}, yyDollar[1].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Equal, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:3460
		{
			var _new *ast.ExprNew

			if yyDollar[6].node != nil {
				_new = &ast.ExprNew{ast.Node{}, yyDollar[5].node, yyDollar[6].node.(*ast.ArgumentList)}
			} else {
				_new = &ast.ExprNew{ast.Node{}, yyDollar[5].node, nil}
			}
			yyVAL.node = &ast.ExprAssignReference{ast.Node{}, yyDollar[1].node, _new}

			// save position
			if yyDollar[6].node != nil {
				_new.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			} else {
				_new.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node)
			}
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, _new)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Equal, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(_new, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3487
		{
			yyVAL.node = &ast.ExprClone{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3499
		{
			yyVAL.node = &ast.ExprAssignPlus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3511
		{
			yyVAL.node = &ast.ExprAssignMinus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3524
		{
			yyVAL.node = &ast.ExprAssignMul{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3537
		{
			yyVAL.node = &ast.ExprAssignPow{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3550
		{
			yyVAL.node = &ast.ExprAssignDiv{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3563
		{
			yyVAL.node = &ast.ExprAssignConcat{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3576
		{
			yyVAL.node = &ast.ExprAssignMod{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3589
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3602
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3615
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3628
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3641
		{
			yyVAL.node = &ast.ExprAssignShiftRight{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3654
		{
			yyVAL.node = &ast.ExprPostInc{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3667
		{
			yyVAL.node = &ast.ExprPreInc{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3679
		{
			yyVAL.node = &ast.ExprPostDec{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3692
		{
			yyVAL.node = &ast.ExprPreDec{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3704
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3717
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3730
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3743
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3756
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3769
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3782
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3795
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3808
		{
			yyVAL.node = &ast.ExprBinaryConcat{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3821
		{
			yyVAL.node = &ast.ExprBinaryPlus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3834
		{
			yyVAL.node = &ast.ExprBinaryMinus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3847
		{
			yyVAL.node = &ast.ExprBinaryMul{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3860
		{
			yyVAL.node = &ast.ExprBinaryPow{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3873
		{
			yyVAL.node = &ast.ExprBinaryDiv{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3886
		{
			yyVAL.node = &ast.ExprBinaryMod{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3899
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3912
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3925
		{
			yyVAL.node = &ast.ExprUnaryPlus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3937
		{
			yyVAL.node = &ast.ExprUnaryMinus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3949
		{
			yyVAL.node = &ast.ExprBooleanNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:3961
		{
			yyVAL.node = &ast.ExprBitwiseNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3973
		{
			yyVAL.node = &ast.ExprBinaryIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3986
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:3999
		{
			yyVAL.node = &ast.ExprBinaryEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4012
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Equal, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4026
		{
			yyVAL.node = &ast.ExprBinarySmaller{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4039
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4052
		{
			yyVAL.node = &ast.ExprBinaryGreater{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4065
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4078
		{
			yyVAL.node = &ast.ExprInstanceOf{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4091
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)

			yylex.(*Parser).setFreeFloating(yyDollar[1].node, token.Start, append(yyDollar[1].node.GetNode().Tokens[token.OpenParenthesisToken], yyDollar[1].node.GetNode().Tokens[token.Start]...))
			delete(yyDollar[1].node.GetNode().Tokens, token.OpenParenthesisToken)
			yylex.(*Parser).setFreeFloating(yyDollar[1].node, token.End, append(yyDollar[1].node.GetNode().Tokens[token.End], yyDollar[1].node.GetNode().Tokens[token.CloseParenthesisToken]...))
			delete(yyDollar[1].node.GetNode().Tokens, token.CloseParenthesisToken)
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4100
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4106
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, append(yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token), yyVAL.node.GetNode().Tokens[token.Start]...)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...)...))

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)
				}

				// save position
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, n)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:4138
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[5].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4152
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, nil, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4166
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4172
		{
			yyVAL.node = &ast.ExprCastInt{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4185
		{
			yyVAL.node = &ast.ExprCastDouble{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4198
		{
			yyVAL.node = &ast.ExprCastString{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4211
		{
			yyVAL.node = &ast.ExprCastArray{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4224
		{
			yyVAL.node = &ast.ExprCastObject{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4237
		{
			yyVAL.node = &ast.ExprCastBool{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4250
		{
			yyVAL.node = &ast.ExprCastUnset{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cast, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4263
		{
			e := yyDollar[2].node.(*ast.ExprExit)
			yyVAL.node = yyDollar[2].node

			if bytes.EqualFold(yyDollar[1].token.Value, []byte("die")) {
				e.Die = true
			}

			// save position
			if yyDollar[2].node.GetNode().Position == nil {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4284
		{
			yyVAL.node = &ast.ExprErrorSuppress{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4296
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4302
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4308
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4314
		{
			yyVAL.node = &ast.ExprShellExec{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4326
		{
			yyVAL.node = &ast.ExprPrint{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4338
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, nil, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
// line internal/php5/php5.y:4350
		{
			yyVAL.node = &ast.ExprClosure{ast.Node{}, yyDollar[2].token != nil, false, yyDollar[4].list, yyDollar[6].ClosureUse, nil, yyDollar[8].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[9].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[3].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[2].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.LexicalVars, yyDollar[7].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[9].token.Tokens)

			// normalize
			if yyDollar[6].ClosureUse == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Params, yyVAL.node.GetNode().Tokens[token.LexicalVars])
				delete(yyVAL.node.GetNode().Tokens, token.LexicalVars)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
// line internal/php5/php5.y:4376
		{
			yyVAL.node = &ast.ExprClosure{ast.Node{}, yyDollar[3].token != nil, true, yyDollar[5].list, yyDollar[7].ClosureUse, nil, yyDollar[9].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[10].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Static, yyDollar[2].token.Tokens)
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[4].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[3].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[4].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.LexicalVars, yyDollar[8].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[10].token.Tokens)

			// normalize
			if yyDollar[7].ClosureUse == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Params, yyVAL.node.GetNode().Tokens[token.LexicalVars])
				delete(yyVAL.node.GetNode().Tokens, token.LexicalVars)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4406
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, nil, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4418
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, nil, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4430
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, yyDollar[2].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4443
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, yyDollar[2].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4459
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4473
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4487
		{
			str := &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, str, yyDollar[3].node}

			// save position
			str.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(str, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4503
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4520
		{
			yyVAL.node = &ast.ExprArray{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Array, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4534
		{
			yyVAL.node = &ast.ExprShortArray{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4550
		{
			yyVAL.token = yyDollar[1].token
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:4557
		{
			yyVAL.ClosureUse = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4563
		{
			yyVAL.ClosureUse = &ast.ExprClosureUse{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.ClosureUse.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.Use, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.LexicalVarList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4580
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[3].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.list = append(yyDollar[1].list, variable)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4596
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[4].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			reference := &ast.ExprReference{ast.Node{}, variable}
			yyVAL.list = append(yyDollar[1].list, reference)

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[4].token)
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(reference, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4615
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.list = []ast.Vertex{variable}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4630
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[2].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			reference := &ast.ExprReference{ast.Node{}, variable}
			yyVAL.list = []ast.Vertex{reference}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(reference, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4651
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, name, yyDollar[2].node.(*ast.ArgumentList)}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(name, yyDollar[2].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4665
		{
			funcName := &ast.NameRelative{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, funcName, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			funcName.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(funcName, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4680
		{
			funcName := &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, funcName, yyDollar[3].node.(*ast.ArgumentList)}

			// save position
			funcName.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(funcName, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4694
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4707
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4720
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4733
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4746
		{
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, yyDollar[1].node, yyDollar[2].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4761
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4773
		{
			yyVAL.node = &ast.NameName{ast.Node{}, yyDollar[1].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4785
		{
			yyVAL.node = &ast.NameRelative{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4798
		{
			yyVAL.node = &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4813
		{
			yyVAL.node = &ast.NameName{ast.Node{}, yyDollar[1].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:4825
		{
			yyVAL.node = &ast.NameRelative{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4838
		{
			yyVAL.node = &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4853
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4859
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:4868
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyDollar[3].list[0], token.Var, yyDollar[2].token.Tokens)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)
				}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4909
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4919
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:4925
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4935
		{
			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).setFreeFloating(yyDollar[2].list[0], token.Var, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:4947
		{
			yyVAL.node = &ast.ExprExit{ast.Node{}, false, nil}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:4953
		{
			yyVAL.node = &ast.ExprExit{ast.Node{}, false, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Exit, append(yyDollar[1].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4966
		{
			yyVAL.node = &ast.ExprExit{ast.Node{}, false, yyDollar[1].node}

			// save position
			if bytes.Compare(yylex.(*Parser).currentToken.Value, []byte(")")) == 0 {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yylex.(*Parser).currentToken)
			} else {
				yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Exit, yyDollar[1].node.GetNode().Tokens[token.OpenParenthesisToken])
			delete(yyDollar[1].node.GetNode().Tokens, token.OpenParenthesisToken)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[1].node.GetNode().Tokens[token.CloseParenthesisToken])
			delete(yyDollar[1].node.GetNode().Tokens, token.CloseParenthesisToken)
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:4986
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:4992
		{
			part := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{part}

			// save position
			part.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5002
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:5011
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5017
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5026
		{
			yyVAL.node = &ast.ScalarLnumber{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5038
		{
			yyVAL.node = &ast.ScalarDnumber{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5050
		{
			yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5062
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5074
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5086
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5098
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5110
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5122
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5134
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5146
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, []ast.Vertex{encapsed}}

			// save position
			encapsed.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5160
		{
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, nil}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5175
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5194
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5203
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5209
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5215
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(name)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5229
		{
			name := &ast.NameRelative{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5244
		{
			name := &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:5258
		{
			yyVAL.node = &ast.ExprArray{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Array, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5272
		{
			yyVAL.node = &ast.ExprShortArray{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5285
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5291
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5303
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:5312
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5326
		{
			yyVAL.node = &ast.ExprBinaryPlus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5339
		{
			yyVAL.node = &ast.ExprBinaryMinus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5352
		{
			yyVAL.node = &ast.ExprBinaryMul{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5365
		{
			yyVAL.node = &ast.ExprBinaryPow{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5378
		{
			yyVAL.node = &ast.ExprBinaryDiv{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5391
		{
			yyVAL.node = &ast.ExprBinaryMod{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5404
		{
			yyVAL.node = &ast.ExprBooleanNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5416
		{
			yyVAL.node = &ast.ExprBitwiseNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5428
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5441
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5454
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5467
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5480
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5493
		{
			yyVAL.node = &ast.ExprBinaryConcat{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5506
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5519
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5532
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5545
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5558
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5571
		{
			yyVAL.node = &ast.ExprBinaryIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5584
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5597
		{
			yyVAL.node = &ast.ExprBinaryEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5610
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Equal, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5624
		{
			yyVAL.node = &ast.ExprBinarySmaller{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5637
		{
			yyVAL.node = &ast.ExprBinaryGreater{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5650
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5663
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:5676
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, nil, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:5690
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[5].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5704
		{
			yyVAL.node = &ast.ExprUnaryPlus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5716
		{
			yyVAL.node = &ast.ExprUnaryMinus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5728
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, append(yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token), yyVAL.node.GetNode().Tokens[token.Start]...)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5741
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5747
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(name)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5761
		{
			name := &ast.NameRelative{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(name)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5776
		{
			name := &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(name)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5793
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5807
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5813
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5819
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5825
		{
			yyVAL.node = &ast.ScalarEncapsed{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5837
		{
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5849
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:5864
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:5870
		{
			yyVAL.list = yyDollar[1].list

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:5884
		{
			yyVAL.token = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5888
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:5895
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[3].node, yyDollar[5].node}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[3].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5910
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[3].node, arrayItem)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5924
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5938
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[1].node}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, arrayItem)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5954
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:5960
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5969
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.Start, append(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken], yyDollar[2].node.GetNode().Tokens[token.Start]...))
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.End, append(yyDollar[2].node.GetNode().Tokens[token.End], yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]...))
			}
			yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.OpenParenthesisToken, append(yyDollar[1].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token)...))
			yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.CloseParenthesisToken, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:5985
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			if len(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.Start, append(yyDollar[2].node.GetNode().Tokens[token.OpenParenthesisToken], yyDollar[2].node.GetNode().Tokens[token.Start]...))
			}
			if len(yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]) > 0 {
				yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.End, append(yyDollar[2].node.GetNode().Tokens[token.End], yyDollar[2].node.GetNode().Tokens[token.CloseParenthesisToken]...))
			}
			yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.OpenParenthesisToken, append(yyDollar[1].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token)...))
			yylex.(*Parser).setFreeFloating(yyDollar[2].node, token.CloseParenthesisToken, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6005
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6015
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6024
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:6033
		{
			yyVAL.node = yyDollar[1].node

			if yyDollar[4].list != nil {
				yyDollar[4].list[0].(*ast.ExprMethodCall).Method = yyDollar[3].list[len(yyDollar[3].list)-1].(*ast.ExprPropertyFetch).Property
				yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyDollar[3].list[0], token.Var, yyDollar[2].token.Tokens)

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					nn.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
					yylex.(*Parser).MoveFreeFloating(nn.Var, yyVAL.node)
				}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6091
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6100
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:6106
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6116
		{
			if yyDollar[3].list != nil {
				yyDollar[3].list[0].(*ast.ExprMethodCall).Method = yyDollar[2].list[len(yyDollar[2].list)-1].(*ast.ExprPropertyFetch).Property
				yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
			}

			yyVAL.list = yyDollar[2].list

			// save comments
			yylex.(*Parser).setFreeFloating(yyDollar[2].list[0], token.Var, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6133
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6147
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{yyDollar[1].node, fetch}

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6164
		{
			yyVAL.node = &ast.ExprMethodCall{ast.Node{}, nil, nil, yyDollar[1].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6176
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6182
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:6188
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6197
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6203
		{
			yyDollar[1].simpleIndirectReference.last.VarName = yyDollar[2].node

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				n.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6218
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6231
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6247
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6256
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6270
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6287
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6293
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6299
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6309
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6315
		{
			yyDollar[1].simpleIndirectReference.last.VarName = yyDollar[2].node

			for _, n := range yyDollar[1].simpleIndirectReference.all {
				n.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(n, yyDollar[2].node)
			}

			yyVAL.node = yyDollar[1].simpleIndirectReference.all[0]

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6327
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6336
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6350
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6364
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6374
		{
			name := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6388
		{
			yyVAL.node = &ast.ExprVariable{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Dollar, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyDollar[3].node, token.Start, append(yyDollar[2].token.Tokens, append(yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token), yyDollar[3].node.GetNode().Tokens[token.Start]...)...))
			yylex.(*Parser).setFreeFloating(yyDollar[3].node, token.End, append(yyDollar[3].node.GetNode().Tokens[token.End], append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:6406
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6412
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6422
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6428
		{
			fetch := &ast.ExprPropertyFetch{ast.Node{}, nil, yyDollar[1].node}
			yyVAL.list = []ast.Vertex{fetch}

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6441
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6455
		{
			fetch := &ast.ExprArrayDimFetch{ast.Node{}, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, fetch)

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(fetch, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(fetch, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6469
		{
			fetch := &ast.ExprPropertyFetch{ast.Node{}, nil, yyDollar[1].node}
			yyVAL.list = []ast.Vertex{fetch}

			// save position
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6482
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6494
		{
			yyVAL.node = yyDollar[2].node

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, append(yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token), yyVAL.node.GetNode().Tokens[token.Start]...)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6510
		{
			n := &ast.ExprVariable{ast.Node{}, nil}
			yyVAL.simpleIndirectReference = simpleIndirectReference{[]*ast.ExprVariable{n}, n}

			// save position
			n.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(n, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(n, token.Dollar, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6524
		{
			n := &ast.ExprVariable{ast.Node{}, nil}

			yyDollar[1].simpleIndirectReference.last.VarName = n
			yyDollar[1].simpleIndirectReference.all = append(yyDollar[1].simpleIndirectReference.all, n)
			yyDollar[1].simpleIndirectReference.last = n
			yyVAL.simpleIndirectReference = yyDollar[1].simpleIndirectReference

			// save position
			n.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(n, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(n, token.Dollar, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6545
		{
			if len(yyDollar[1].list) == 0 {
				yyDollar[1].list = []ast.Vertex{&ast.ExprArrayItem{ast.Node{}, false, nil, nil}}
			}

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6558
		{
			if yyDollar[1].node.(*ast.ExprArrayItem).Key == nil && yyDollar[1].node.(*ast.ExprArrayItem).Val == nil {
				yyVAL.list = []ast.Vertex{}
			} else {
				yyVAL.list = []ast.Vertex{yyDollar[1].node}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6572
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6584
		{
			listNode := &ast.ExprList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, listNode}

			// save position
			listNode.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(listNode)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:6600
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, nil}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
// line internal/php5/php5.y:6610
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6616
		{
			yyVAL.list = yyDollar[1].list

			if yyDollar[2].token != nil {
				yyVAL.list = append(yyDollar[1].list, &ast.ExprArrayItem{ast.Node{}, false, nil, nil})
			}

			// save comments
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
// line internal/php5/php5.y:6634
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[3].node, yyDollar[5].node}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[3].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6649
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[3].node}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[3].node, arrayItem)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6663
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, yyDollar[3].node}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6677
		{
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[1].node}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, arrayItem)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:6690
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[6].node}
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[3].node, reference}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[5].token, yyDollar[6].node)
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[3].node, yyDollar[6].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[3].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(reference, token.Start, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6708
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[4].node}
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, reference}
			yyVAL.list = append(yyDollar[1].list, arrayItem)

			// save position
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node)
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6724
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[4].node}
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, reference}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node)
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, arrayItem)
			yylex.(*Parser).setFreeFloating(arrayItem, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(reference, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6741
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[2].node}
			arrayItem := &ast.ExprArrayItem{ast.Node{}, false, nil, reference}
			yyVAL.list = []ast.Vertex{arrayItem}

			// save position
			reference.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			arrayItem.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(arrayItem, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6759
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6765
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.list = append(yyDollar[1].list, encapsed)

			// save position
			encapsed.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(encapsed, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6778
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:6784
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{encapsed, yyDollar[2].node}

			// save position
			encapsed.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(encapsed, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6800
		{
			name := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6814
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, variable, yyDollar[3].node}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[2].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[2].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[4].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[4].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6831
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			fetch := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprPropertyFetch{ast.Node{}, variable, fetch}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			fetch.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(fetch, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6850
		{
			variable := &ast.ExprVariable{ast.Node{}, yyDollar[2].node}

			yyVAL.node = variable

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6865
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, name}

			yyVAL.node = variable

			// save position
			name.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
// line internal/php5/php5.y:6882
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, variable, yyDollar[4].node}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			variable.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, append(yyDollar[5].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[5].token)...))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyDollar[6].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[6].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:6901
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yylex.(*Parser).GetFreeFloatingToken(yyDollar[1].token))
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.End, append(yyDollar[3].token.Tokens, yylex.(*Parser).GetFreeFloatingToken(yyDollar[3].token)...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6914
		{
			yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6926
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{ast.Node{}, yyDollar[1].token.Value}
			} else {
				yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}
			}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:6943
		{
			identifier := &ast.Identifier{ast.Node{}, bytes.TrimLeftFunc(yyDollar[1].token.Value, isDollar)}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, identifier}

			// save position
			identifier.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6960
		{
			yyVAL.node = &ast.ExprIsset{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Isset, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6974
		{
			yyVAL.node = &ast.ExprEmpty{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Empty, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:6988
		{
			yyVAL.node = &ast.ExprEmpty{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Empty, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:7002
		{
			yyVAL.node = &ast.ExprInclude{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:7014
		{
			yyVAL.node = &ast.ExprIncludeOnce{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
// line internal/php5/php5.y:7026
		{
			yyVAL.node = &ast.ExprEval{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Eval, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:7040
		{
			yyVAL.node = &ast.ExprRequire{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
// line internal/php5/php5.y:7052
		{
			yyVAL.node = &ast.ExprRequireOnce{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:7067
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:7073
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:7085
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
// line internal/php5/php5.y:7091
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:7100
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:7116
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:7135
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
// line internal/php5/php5.y:7154
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = yylex.(*Parser).positionBuilder.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = yylex.(*Parser).positionBuilder.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	}
	goto yystack /* stack new state and value */
}

// Code generated by goyacc -o internal/php5/php5.go internal/php5/php5.y. DO NOT EDIT.

// line internal/php5/php5.y:2
package php5

import __yyfmt__ "fmt"

// line internal/php5/php5.y:2

import (
	"strconv"

	"github.com/z7zmey/php-parser/internal/position"
	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php5/php5.y:14
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex

	ClosureUse *ast.ExprClosureUse
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php5/php5.y:6522

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 51,
	105, 435,
	106, 435,
	-2, 433,
	-1, 102,
	79, 332,
	-2, 411,
	-1, 114,
	79, 451,
	148, 447,
	-2, 457,
	-1, 154,
	105, 435,
	106, 435,
	-2, 433,
	-1, 204,
	146, 306,
	149, 306,
	-2, 430,
	-1, 205,
	105, 435,
	106, 435,
	146, 307,
	149, 307,
	-2, 433,
	-1, 271,
	79, 451,
	-2, 457,
	-1, 298,
	79, 334,
	-2, 413,
	-1, 302,
	148, 448,
	-2, 458,
	-1, 311,
	79, 333,
	-2, 412,
	-1, 378,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 274,
	-1, 379,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 275,
	-1, 380,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 276,
	-1, 381,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 277,
	-1, 382,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 278,
	-1, 383,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 279,
	-1, 384,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 280,
	-1, 385,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 281,
	-1, 392,
	105, 435,
	106, 435,
	-2, 433,
	-1, 400,
	149, 142,
	-2, 147,
	-1, 462,
	105, 435,
	106, 435,
	149, 515,
	160, 515,
	-2, 433,
	-1, 463,
	149, 516,
	160, 516,
	-2, 430,
	-1, 464,
	105, 435,
	106, 435,
	-2, 433,
	-1, 486,
	149, 156,
	160, 156,
	-2, 430,
	-1, 487,
	105, 435,
	106, 435,
	149, 157,
	160, 157,
	-2, 433,
	-1, 493,
	148, 472,
	-2, 517,
	-1, 499,
	148, 472,
	-2, 518,
	-1, 521,
	79, 332,
	-2, 369,
	-1, 539,
	94, 135,
	95, 135,
	96, 135,
	-2, 0,
	-1, 551,
	149, 142,
	-2, 147,
	-1, 564,
	149, 142,
	-2, 147,
	-1, 581,
	146, 308,
	149, 308,
	-2, 430,
	-1, 582,
	105, 435,
	106, 435,
	146, 309,
	149, 309,
	-2, 433,
	-1, 682,
	79, 334,
	-2, 371,
	-1, 780,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 397,
	-1, 781,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 398,
	-1, 782,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 399,
	-1, 783,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 400,
	-1, 784,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 401,
	-1, 785,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 402,
	-1, 786,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 403,
	-1, 787,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 404,
	-1, 790,
	79, 333,
	-2, 370,
	-1, 840,
	37, 201,
	-2, 198,
	-1, 880,
	31, 128,
	32, 128,
	33, 128,
	145, 128,
	-2, 0,
	-1, 915,
	96, 140,
	-2, 0,
	-1, 917,
	31, 127,
	32, 127,
	33, 127,
	145, 127,
	-2, 0,
	-1, 944,
	94, 136,
	95, 136,
	96, 136,
	-2, 0,
	-1, 972,
	29, 189,
	-2, 4,
	-1, 981,
	149, 142,
	-2, 147,
	-1, 998,
	146, 193,
	-2, 195,
}

const yyPrivate = 57344

const yyLast = 8973

var yyAct = [...]int{
	102, 571, 1007, 565, 420, 966, 844, 715, 808, 607,
	123, 131, 919, 200, 827, 735, 567, 684, 452, 594,
	461, 816, 474, 592, 61, 579, 421, 319, 390, 142,
	340, 98, 39, 315, 517, 264, 114, 444, 447, 2,
	130, 289, 329, 138, 140, 5, 331, 145, 485, 7,
	158, 330, 544, 658, 6, 979, 228, 228, 162, 477,
	960, 192, 938, 141, 493, 935, 121, 942, 26, 941,
	654, 932, 44, 822, 738, 710, 562, 516, 450, 358,
	121, 267, 954, 940, 657, 659, 660, 325, 658, 664,
	665, 432, 933, 955, 898, 678, 679, 251, 153, 43,
	922, 1003, 854, 179, 298, 654, 934, 494, 899, 656,
	655, 586, 270, 586, 633, 204, 619, 271, 736, 657,
	659, 660, 676, 677, 666, 634, 311, 620, 794, 316,
	320, 258, 241, 323, 178, 180, 181, 585, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 729, 586, 510,
	543, 560, 302, 475, 121, 654, 339, 201, 662, 656,
	655, 228, 561, 511, 310, 121, 556, 39, 118, 657,
	659, 660, 676, 677, 666, 908, 357, 557, 506, 162,
	359, 333, 115, 336, 159, 1019, 907, 977, 355, 658,
	664, 665, 507, 267, 360, 228, 930, 905, 451, 499,
	51, 121, 356, 192, 350, 312, 654, 595, 241, 1002,
	656, 655, 451, 120, 862, 658, 133, 104, 351, 313,
	657, 659, 660, 228, 270, 666, 154, 120, 386, 271,
	134, 425, 654, 301, 126, 856, 121, 792, 126, 300,
	121, 746, 192, 205, 640, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 632, 631, 227, 227, 625, 624,
	352, 597, 228, 272, 604, 173, 177, 176, 393, 605,
	456, 596, 595, 231, 231, 174, 178, 180, 181, 188,
	190, 175, 473, 612, 179, 182, 183, 750, 718, 611,
	440, 749, 951, 228, 294, 126, 293, 121, 265, 741,
	448, 120, 287, 916, 229, 177, 176, 230, 229, 458,
	281, 230, 303, 254, 131, 178, 180, 181, 509, 241,
	175, 253, 513, 233, 914, 886, 521, 233, 978, 883,
	472, 160, 871, 451, 826, 815, 448, 931, 491, 728,
	39, 448, 295, 497, 694, 423, 434, 463, 120, 502,
	635, 626, 430, 5, 505, 428, 307, 7, 126, 521,
	121, 354, 6, 541, 593, 229, 484, 1014, 230, 981,
	486, 399, 126, 467, 121, 272, 1000, 893, 231, 471,
	877, 717, 439, 120, 233, 479, 480, 120, 436, 437,
	139, 137, 495, 552, 297, 391, 392, 825, 546, 819,
	683, 572, 548, 572, 577, 572, 580, 297, 228, 587,
	265, 564, 231, 551, 437, 436, 436, 658, 437, 810,
	809, 990, 400, 422, 537, 588, 39, 344, 229, 288,
	345, 230, 446, 135, 654, 278, 295, 275, 656, 655,
	231, 192, 229, 274, 120, 230, 449, 233, 657, 659,
	660, 250, 222, 666, 584, 126, 616, 121, 196, 195,
	194, 233, 443, 448, 448, 491, 497, 144, 492, 122,
	1011, 985, 1010, 498, 984, 462, 464, 924, 581, 231,
	704, 705, 449, 179, 913, 881, 613, 449, 812, 228,
	806, 448, 353, 478, 448, 617, 448, 309, 487, 308,
	805, 704, 705, 799, 177, 176, 713, 120, 316, 400,
	231, 700, 320, 547, 178, 180, 181, 521, 545, 175,
	542, 120, 501, 398, 682, 268, 521, 348, 269, 156,
	982, 906, 39, 521, 521, 521, 521, 521, 606, 649,
	1020, 646, 976, 531, 233, 5, 918, 892, 636, 7,
	891, 653, 572, 889, 6, 711, 733, 126, 228, 228,
	228, 578, 306, 521, 197, 572, 435, 719, 727, 39,
	39, 179, 875, 701, 831, 732, 531, 572, 580, 988,
	192, 651, 730, 224, 225, 267, 714, 228, 228, 396,
	803, 804, 740, 811, 295, 492, 498, 724, 706, 731,
	708, 681, 734, 721, 120, 455, 582, 424, 583, 449,
	449, 125, 743, 739, 703, 742, 270, 696, 697, 257,
	737, 271, 179, 615, 688, 231, 446, 126, 618, 228,
	125, 228, 448, 745, 459, 295, 454, 449, 648, 427,
	449, 755, 449, 210, 211, 212, 213, 214, 215, 216,
	217, 218, 219, 220, 221, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 521, 521, 521, 521, 521, 521, 521, 521,
	521, 521, 790, 759, 521, 744, 426, 209, 757, 478,
	758, 124, 295, 463, 848, 849, 850, 847, 846, 845,
	321, 791, 304, 751, 259, 299, 231, 486, 793, 438,
	126, 521, 282, 286, 469, 817, 865, 595, 228, 515,
	126, 800, 62, 687, 126, 512, 539, 508, 126, 540,
	572, 322, 832, 457, 531, 263, 576, 572, 851, 404,
	801, 820, 972, 531, 402, 814, 829, 208, 259, 833,
	531, 531, 531, 531, 531, 857, 852, 207, 391, 716,
	716, 986, 743, 824, 446, 126, 828, 272, 859, 260,
	261, 569, 570, 295, 796, 231, 231, 231, 449, 295,
	531, 295, 285, 317, 1008, 295, 239, 422, 422, 521,
	573, 726, 128, 574, 129, 521, 521, 132, 573, 45,
	842, 574, 265, 987, 231, 231, 843, 163, 559, 841,
	54, 338, 573, 260, 261, 574, 879, 797, 228, 1018,
	228, 462, 992, 521, 885, 884, 572, 890, 876, 478,
	882, 478, 45, 855, 468, 487, 958, 878, 132, 956,
	926, 860, 861, 874, 572, 904, 231, 901, 231, 897,
	894, 39, 813, 704, 705, 259, 599, 888, 601, 600,
	848, 849, 850, 847, 846, 845, 226, 234, 228, 900,
	550, 521, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 531,
	531, 531, 531, 531, 531, 531, 531, 531, 531, 923,
	1004, 531, 448, 909, 999, 961, 895, 707, 704, 705,
	39, 259, 936, 521, 937, 902, 438, 126, 818, 469,
	260, 261, 761, 1, 760, 259, 920, 910, 531, 920,
	284, 723, 259, 652, 650, 231, 521, 438, 647, 521,
	91, 572, 963, 572, 971, 39, 602, 39, 514, 481,
	395, 324, 203, 202, 199, 39, 136, 39, 39, 946,
	830, 521, 748, 754, 864, 445, 572, 971, 609, 589,
	959, 983, 590, 962, 39, 470, 260, 261, 39, 39,
	521, 259, 572, 591, 255, 994, 283, 572, 996, 285,
	260, 261, 840, 965, 998, 980, 964, 260, 261, 839,
	836, 1006, 1005, 39, 572, 1012, 531, 725, 698, 1013,
	538, 318, 531, 531, 993, 572, 1016, 518, 716, 314,
	422, 39, 658, 664, 665, 672, 673, 674, 675, 678,
	679, 127, 403, 259, 446, 231, 31, 231, 256, 654,
	531, 575, 296, 656, 655, 39, 260, 261, 449, 903,
	401, 39, 341, 657, 659, 660, 676, 677, 666, 460,
	147, 151, 155, 335, 945, 685, 165, 995, 478, 1009,
	929, 483, 343, 290, 198, 394, 389, 939, 896, 206,
	164, 157, 161, 528, 608, 231, 997, 970, 531, 969,
	223, 968, 967, 838, 235, 236, 237, 238, 260, 261,
	240, 837, 242, 243, 244, 245, 246, 247, 248, 835,
	252, 40, 568, 15, 821, 262, 14, 823, 566, 720,
	276, 277, 802, 279, 280, 695, 11, 249, 75, 76,
	531, 116, 266, 64, 291, 89, 671, 670, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 598, 90, 520,
	101, 74, 12, 531, 326, 654, 531, 680, 662, 656,
	655, 305, 100, 99, 79, 119, 661, 526, 663, 657,
	659, 660, 676, 677, 666, 3, 240, 41, 531, 117,
	842, 342, 0, 0, 0, 0, 843, 0, 0, 841,
	0, 0, 0, 0, 0, 0, 0, 531, 0, 0,
	880, 0, 0, 0, 361, 362, 363, 364, 365, 366,
	367, 368, 369, 370, 371, 372, 373, 374, 375, 376,
	377, 378, 379, 380, 381, 382, 383, 384, 385, 0,
	387, 0, 155, 0, 0, 232, 232, 0, 0, 0,
	848, 849, 850, 847, 846, 845, 406, 408, 409, 410,
	411, 412, 413, 414, 415, 416, 417, 418, 419, 0,
	273, 0, 0, 0, 0, 0, 519, 0, 0, 915,
	0, 917, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 925, 0, 927, 928, 0, 834, 240, 0, 0,
	433, 433, 0, 0, 0, 0, 0, 441, 0, 519,
	0, 0, 0, 0, 0, 0, 944, 453, 0, 0,
	948, 155, 465, 949, 0, 466, 0, 0, 433, 0,
	0, 0, 0, 0, 433, 291, 0, 0, 0, 0,
	433, 433, 0, 0, 155, 0, 0, 433, 496, 973,
	232, 490, 0, 500, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 504, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 0, 662, 656, 655, 991, 0,
	0, 0, 273, 661, 232, 663, 657, 659, 660, 676,
	677, 666, 0, 669, 667, 668, 0, 0, 0, 0,
	549, 0, 0, 0, 0, 0, 0, 553, 0, 0,
	0, 0, 232, 1015, 0, 0, 0, 0, 0, 0,
	0, 0, 1021, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 555, 671, 670, 658, 664,
	665, 672, 673, 674, 675, 678, 679, 0, 0, 0,
	0, 232, 155, 0, 0, 654, 868, 680, 662, 656,
	655, 0, 0, 0, 0, 0, 661, 519, 663, 657,
	659, 660, 676, 677, 666, 0, 519, 0, 490, 0,
	0, 0, 232, 519, 519, 519, 519, 519, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 610, 614, 658,
	664, 665, 672, 673, 674, 675, 678, 679, 0, 0,
	0, 0, 0, 519, 0, 0, 654, 0, 0, 662,
	656, 655, 627, 629, 0, 0, 0, 661, 0, 663,
	657, 659, 660, 676, 677, 666, 637, 0, 0, 0,
	0, 0, 0, 0, 638, 639, 0, 0, 0, 0,
	642, 643, 0, 686, 0, 0, 0, 0, 0, 0,
	689, 690, 691, 692, 693, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 342,
	702, 0, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 712, 0, 0, 0, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 519, 519, 519, 519, 519, 519, 519, 519,
	519, 519, 0, 0, 519, 0, 0, 0, 0, 0,
	433, 504, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 747, 0, 0, 0, 0, 0, 433, 752,
	0, 519, 0, 0, 0, 0, 0, 155, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 232, 170,
	192, 155, 762, 763, 764, 765, 766, 767, 768, 769,
	770, 771, 772, 773, 774, 775, 776, 777, 778, 779,
	780, 781, 782, 783, 784, 785, 786, 787, 789, 0,
	0, 686, 0, 0, 0, 0, 0, 0, 0, 0,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 0, 0, 0, 0, 0, 519,
	0, 193, 173, 177, 176, 519, 519, 232, 232, 232,
	172, 807, 174, 178, 180, 181, 188, 190, 175, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 519, 273, 0, 232, 232, 0, 0,
	0, 169, 171, 170, 192, 853, 0, 0, 433, 0,
	453, 621, 0, 0, 0, 0, 433, 433, 610, 0,
	0, 0, 0, 866, 209, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 869, 0, 232, 0,
	232, 519, 872, 873, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 0, 810,
	809, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 342, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 519, 0, 0, 0, 0, 0, 0,
	658, 664, 665, 672, 673, 674, 675, 678, 679, 0,
	0, 0, 0, 0, 0, 0, 519, 654, 0, 519,
	662, 656, 655, 0, 0, 0, 0, 0, 911, 0,
	663, 657, 659, 660, 676, 677, 666, 232, 0, 0,
	0, 519, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	519, 0, 0, 0, 0, 0, 0, 0, 0, 4,
	943, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 558, 16, 25, 36, 957,
	0, 37, 10, 0, 27, 0, 32, 81, 82, 8,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 232, 0, 232,
	0, 0, 93, 0, 0, 0, 0, 9, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 232, 0, 0,
	0, 0, 0, 0, 210, 211, 212, 213, 214, 215,
	216, 217, 218, 219, 220, 221, 0, 0, 0, 92,
	77, 17, 645, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 4, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 209, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 16, 25, 36, 0, 0, 37,
	10, 0, 27, 0, 32, 81, 82, 8, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 9, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	503, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 4, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 16, 25, 36, 0, 0, 37, 10, 0,
	27, 0, 32, 81, 82, 8, 46, 48, 50, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 9, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 47, 49, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	210, 211, 212, 213, 214, 215, 216, 217, 218, 219,
	220, 221, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 349, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 209, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 332, 46, 48, 50, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 47, 49, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 1022, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 332, 46, 48, 50, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 47,
	49, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 1017, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 332,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 1001, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 989,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 0, 25, 36, 0, 0, 37,
	0, 0, 27, 0, 32, 81, 82, 332, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 975,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 0, 25, 36, 0, 0, 37, 0, 0,
	27, 0, 32, 81, 82, 332, 46, 48, 50, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 47, 49, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 332, 46, 48, 50, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 47, 49, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 974, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 332, 46, 48, 50, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 47,
	49, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 953, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 332,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 952, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 0, 25, 36, 0, 0, 37,
	0, 0, 27, 0, 32, 81, 82, 332, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	950, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 328, 0, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 887, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 0, 25, 36, 0, 0, 37, 0, 0,
	27, 0, 32, 81, 82, 332, 46, 48, 50, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 47, 49, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	0, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 328, 0, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 699, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 332, 46, 48, 50, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 47, 49, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 328, 0, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 332, 46, 48, 50, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 47,
	49, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 563, 35, 0, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 328,
	0, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 332,
	46, 48, 50, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 47, 49, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 327, 35, 0, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 328, 0, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 0, 25, 36, 0, 0, 37,
	0, 0, 27, 0, 32, 81, 82, 332, 46, 48,
	50, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 47, 49, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 192, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 179, 182, 183, 78, 42,
	28, 0, 189, 191, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 177, 176, 0, 0,
	0, 0, 0, 0, 0, 0, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 947, 63,
	0, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 83, 84, 72, 18, 105, 106, 13, 88, 121,
	0, 30, 0, 0, 0, 95, 29, 20, 19, 0,
	21, 0, 33, 0, 34, 0, 0, 22, 0, 0,
	0, 23, 24, 38, 45, 0, 0, 25, 36, 0,
	0, 37, 0, 0, 27, 0, 32, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 28, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 17, 0, 35, 921, 63, 0, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 83, 84, 72,
	18, 105, 106, 13, 88, 121, 0, 30, 0, 0,
	0, 95, 29, 20, 19, 0, 21, 0, 33, 0,
	34, 0, 0, 22, 0, 0, 0, 23, 24, 38,
	45, 0, 0, 25, 36, 0, 0, 37, 0, 0,
	27, 0, 32, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 28, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 17, 0, 35,
	722, 63, 0, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 83, 84, 72, 18, 105, 106, 13,
	88, 121, 0, 30, 0, 0, 0, 95, 29, 20,
	19, 0, 21, 0, 33, 0, 34, 0, 0, 22,
	0, 0, 0, 23, 24, 38, 45, 0, 0, 25,
	36, 0, 0, 37, 0, 0, 27, 0, 32, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 42, 28, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 17, 0, 35, 337, 63, 0, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 83,
	84, 72, 18, 105, 106, 13, 88, 121, 0, 30,
	0, 0, 0, 95, 29, 20, 19, 0, 21, 0,
	33, 0, 34, 0, 0, 22, 0, 0, 0, 23,
	24, 38, 45, 0, 0, 25, 36, 0, 0, 37,
	0, 0, 27, 0, 32, 81, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 28, 0, 0, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 17,
	0, 35, 334, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 83, 84, 72, 18, 105,
	106, 13, 88, 121, 0, 30, 0, 0, 0, 95,
	29, 20, 19, 0, 21, 0, 33, 0, 34, 0,
	0, 22, 0, 0, 0, 23, 24, 38, 45, 0,
	0, 25, 36, 0, 0, 37, 0, 0, 27, 0,
	32, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 42,
	28, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 17, 0, 35, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 0, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 489, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 42, 149, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 0,
	0, 83, 84, 72, 0, 105, 106, 126, 88, 121,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 482, 97, 45, 0, 488, 58, 57, 59,
	60, 73, 120, 0, 0, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 489, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 148, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 83, 84, 72, 0, 105, 106, 126,
	88, 121, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 0, 0, 0, 0, 63, 45, 97, 0, 0,
	488, 58, 57, 59, 60, 73, 120, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 148, 149, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 0, 0, 63, 45, 97,
	0, 0, 867, 58, 57, 59, 60, 73, 120, 0,
	0, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 148,
	149, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 630, 58, 57, 59, 60, 73,
	120, 0, 0, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 148, 149, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 45, 97, 0, 0, 628, 58, 57, 59,
	60, 73, 120, 0, 0, 81, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 148, 149, 0, 0, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 83, 84, 72, 0, 105, 106, 126, 88, 121,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 0,
	0, 0, 0, 63, 45, 97, 0, 0, 292, 58,
	57, 59, 60, 73, 120, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 42, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 0, 0, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 0, 0, 0, 0, 63, 431, 97, 45, 0,
	0, 58, 57, 59, 60, 73, 120, 0, 0, 0,
	0, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 148,
	149, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 83, 84, 72,
	0, 105, 106, 126, 88, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 407, 58, 57, 59, 60, 73,
	120, 0, 0, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 148, 149, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	388, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 0, 81, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 0, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 148, 149, 0, 0, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 83, 84, 72, 0, 105, 106, 126, 88, 121,
	0, 0, 0, 0, 0, 95, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 0,
	0, 152, 0, 63, 45, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 0, 0, 81, 82, 0,
	0, 0, 0, 0, 0, 0, 0, 52, 96, 0,
	94, 110, 111, 112, 107, 108, 0, 0, 0, 0,
	0, 0, 93, 0, 0, 0, 0, 143, 113, 109,
	103, 0, 85, 86, 87, 0, 0, 0, 0, 80,
	53, 0, 0, 0, 78, 148, 149, 0, 0, 0,
	0, 0, 55, 56, 0, 65, 66, 67, 68, 69,
	70, 71, 0, 83, 84, 72, 0, 105, 106, 126,
	88, 121, 0, 0, 0, 0, 0, 95, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 92,
	77, 0, 0, 150, 0, 63, 45, 97, 0, 0,
	0, 58, 57, 59, 60, 73, 120, 0, 0, 81,
	82, 0, 0, 0, 0, 0, 0, 0, 0, 52,
	96, 0, 94, 110, 111, 112, 107, 108, 0, 0,
	0, 0, 0, 0, 93, 0, 0, 0, 0, 143,
	113, 109, 103, 0, 85, 86, 87, 0, 0, 0,
	0, 80, 53, 0, 0, 0, 78, 148, 149, 0,
	0, 0, 0, 0, 55, 56, 0, 65, 66, 67,
	68, 69, 70, 71, 0, 83, 84, 72, 0, 105,
	106, 126, 88, 121, 0, 0, 0, 0, 0, 95,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 92, 77, 0, 0, 146, 0, 63, 45, 97,
	0, 0, 0, 58, 57, 59, 60, 73, 120, 0,
	0, 81, 82, 0, 0, 0, 0, 0, 0, 0,
	0, 52, 96, 0, 94, 110, 111, 112, 107, 108,
	0, 0, 0, 0, 0, 0, 93, 0, 0, 0,
	0, 143, 113, 109, 103, 0, 85, 86, 87, 0,
	0, 0, 0, 80, 53, 0, 0, 0, 78, 148,
	149, 0, 0, 0, 0, 0, 55, 56, 0, 65,
	66, 67, 68, 69, 70, 71, 0, 83, 84, 72,
	0, 105, 106, 126, 442, 121, 0, 0, 0, 0,
	0, 95, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 92, 77, 0, 0, 0, 0, 63,
	45, 97, 0, 0, 0, 58, 57, 59, 60, 73,
	120, 0, 0, 81, 82, 0, 0, 0, 0, 0,
	0, 0, 0, 52, 96, 0, 94, 110, 111, 112,
	107, 108, 0, 0, 0, 0, 0, 0, 93, 0,
	0, 0, 0, 143, 113, 109, 103, 0, 85, 86,
	87, 0, 0, 0, 0, 80, 53, 0, 0, 0,
	78, 148, 149, 0, 0, 0, 0, 0, 55, 56,
	0, 65, 66, 67, 68, 69, 70, 71, 0, 83,
	84, 72, 0, 105, 106, 126, 88, 121, 0, 0,
	0, 0, 0, 95, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 92, 77, 0, 0, 0,
	0, 63, 45, 97, 0, 0, 0, 58, 57, 59,
	60, 73, 120, 0, 0, 81, 82, 0, 0, 0,
	0, 0, 0, 0, 0, 52, 96, 0, 94, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	93, 0, 0, 0, 0, 143, 113, 109, 103, 0,
	85, 86, 87, 912, 0, 0, 0, 80, 53, 0,
	0, 0, 78, 42, 149, 0, 0, 0, 0, 0,
	55, 56, 0, 65, 66, 67, 68, 69, 70, 71,
	0, 0, 669, 667, 668, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 92, 77, 0,
	0, 0, 0, 63, 0, 97, 0, 0, 0, 58,
	57, 59, 60, 73, 120, 671, 670, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 669, 667, 668, 0,
	0, 0, 0, 0, 654, 0, 680, 662, 656, 655,
	0, 0, 0, 0, 0, 661, 0, 663, 657, 659,
	660, 676, 677, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 169, 171, 170, 192, 671,
	670, 658, 664, 665, 672, 673, 674, 675, 678, 679,
	0, 0, 0, 0, 0, 870, 0, 0, 654, 0,
	680, 662, 656, 655, 0, 0, 0, 0, 0, 661,
	0, 663, 657, 659, 660, 676, 677, 666, 167, 168,
	179, 182, 183, 184, 185, 186, 187, 189, 191, 0,
	0, 0, 863, 169, 171, 170, 192, 0, 0, 193,
	173, 177, 176, 0, 0, 0, 0, 0, 172, 0,
	174, 178, 180, 181, 188, 190, 175, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 669, 667, 668, 0, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 858, 193, 173, 177,
	176, 795, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 671, 670, 658, 664, 665,
	672, 673, 674, 675, 678, 679, 0, 0, 0, 0,
	669, 667, 668, 798, 654, 0, 680, 662, 656, 655,
	756, 0, 0, 0, 0, 661, 0, 663, 657, 659,
	660, 676, 677, 666, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	171, 170, 192, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 680, 662, 656, 655, 0, 0,
	0, 0, 0, 661, 0, 663, 657, 659, 660, 676,
	677, 666, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 169, 171, 170, 192, 0, 0, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 169, 171, 170, 192, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 0, 0, 0,
	753, 0, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 709,
	169, 171, 170, 192, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	171, 170, 192, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 644, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 641, 169, 171, 170,
	192, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 171, 170, 192,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 0, 0, 0, 0, 623, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 167,
	168, 179, 182, 183, 184, 185, 186, 187, 189, 191,
	169, 171, 170, 192, 0, 0, 0, 622, 0, 0,
	193, 173, 177, 176, 0, 0, 0, 0, 0, 172,
	0, 174, 178, 180, 181, 188, 190, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 169,
	171, 170, 192, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 0, 0, 0, 603, 0, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	476, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 0, 0, 554, 169,
	171, 170, 192, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 169, 171,
	170, 192, 167, 168, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 193, 173, 177, 176, 0, 0, 0,
	0, 0, 172, 0, 174, 178, 180, 181, 188, 190,
	175, 167, 168, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 405, 0, 0, 0, 0, 0, 0, 429,
	0, 0, 193, 173, 177, 176, 0, 0, 0, 0,
	0, 172, 0, 174, 178, 180, 181, 188, 190, 175,
	0, 169, 171, 170, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	169, 171, 170, 192, 167, 168, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 193, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 167, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 169, 171, 170, 192, 397, 0,
	0, 0, 0, 0, 193, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 169, 171, 170, 192, 167, 168, 179,
	182, 183, 184, 185, 186, 187, 189, 191, 0, 0,
	0, 0, 347, 0, 0, 0, 0, 0, 193, 173,
	177, 176, 0, 0, 0, 0, 0, 172, 0, 174,
	178, 180, 181, 188, 190, 175, 167, 168, 179, 182,
	183, 184, 185, 186, 187, 189, 191, 169, 171, 170,
	192, 346, 0, 0, 0, 0, 0, 193, 173, 177,
	176, 0, 0, 0, 0, 0, 172, 0, 174, 178,
	180, 181, 188, 190, 175, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 169, 171, 170, 192,
	167, 168, 179, 182, 183, 184, 185, 186, 187, 189,
	191, 0, 0, 0, 0, 166, 0, 0, 0, 0,
	0, 193, 173, 177, 176, 0, 0, 0, 0, 0,
	172, 0, 174, 178, 180, 181, 188, 190, 175, 167,
	168, 179, 182, 183, 184, 185, 186, 187, 189, 191,
	669, 667, 668, 0, 0, 0, 0, 0, 0, 0,
	193, 173, 177, 176, 0, 0, 0, 0, 0, 172,
	0, 174, 178, 180, 181, 188, 190, 175, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	667, 668, 0, 671, 670, 658, 664, 665, 672, 673,
	674, 675, 678, 679, 0, 0, 0, 0, 0, 0,
	0, 0, 654, 0, 680, 662, 656, 655, 0, 0,
	0, 0, 0, 661, 0, 663, 657, 659, 660, 676,
	677, 666, 671, 670, 658, 664, 665, 672, 673, 674,
	675, 678, 679, 171, 170, 192, 0, 0, 0, 0,
	0, 654, 0, 680, 662, 656, 655, 0, 0, 0,
	0, 0, 661, 0, 663, 657, 659, 660, 676, 677,
	666, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 668, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 671, 670, 658, 664, 665, 672,
	673, 674, 675, 678, 679, 192, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 680, 662, 656, 655, 0,
	0, 0, 0, 0, 661, 0, 663, 657, 659, 660,
	676, 677, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 193, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 671, 670, 658, 664, 665, 672,
	673, 674, 675, 678, 679, 192, 0, 0, 0, 0,
	0, 0, 0, 654, 0, 0, 662, 656, 655, 0,
	0, 0, 0, 0, 661, 0, 663, 657, 659, 660,
	676, 677, 666, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 192, 0, 167, 168, 179, 182, 183,
	184, 185, 186, 187, 189, 191, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 173, 177, 176,
	0, 0, 0, 0, 0, 172, 0, 174, 178, 180,
	181, 188, 190, 175, 168, 179, 182, 183, 184, 185,
	186, 187, 189, 191, 192, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 173, 177, 176, 0, 0,
	0, 0, 0, 172, 0, 174, 178, 180, 181, 188,
	190, 175, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 192, 0, 0, 0, 0, 179, 182, 183, 184,
	185, 186, 187, 189, 191, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 173, 177, 176, 0,
	0, 0, 0, 0, 172, 0, 174, 178, 180, 181,
	188, 190, 175, 179, 182, 183, 184, 185, 186, 187,
	189, 191, 192, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 173, 177, 176, 0, 0, 0, 0,
	0, 0, 0, 0, 178, 180, 181, 188, 190, 175,
	105, 106, 126, 0, 0, 0, 0, 0, 0, 0,
	529, 0, 0, 0, 179, 182, 183, 184, 185, 186,
	187, 189, 191, 105, 106, 126, 0, 0, 0, 0,
	0, 0, 0, 529, 0, 177, 176, 0, 0, 0,
	0, 0, 0, 0, 0, 178, 180, 181, 188, 190,
	175, 0, 0, 524, 0, 527, 110, 111, 112, 107,
	108, 0, 0, 0, 0, 0, 0, 530, 0, 0,
	0, 0, 522, 113, 109, 523, 524, 0, 527, 110,
	111, 112, 107, 108, 0, 0, 0, 0, 0, 0,
	530, 233, 0, 0, 0, 522, 113, 109, 523, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 233, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 788,
	536, 0, 525, 0, 0, 0, 535, 534, 532, 533,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 536, 0, 525, 0, 0, 0, 535,
	534, 532, 533,
}

var yyPact = [...]int{
	-1000, -1000, 2243, -1000, -1000, -1000, -1000, -1000, 321, 547,
	755, 70, -1000, 286, -1000, -1000, 946, -1000, 242, 242,
	5391, 319, 242, 6739, 6627, 6515, 383, 172, 795, 6851,
	-1000, 8139, 312, 311, 310, -1000, 420, 6851, 944, 4,
	943, 942, 6851, -1000, -1000, -1000, -1000, 704, -1000, 694,
	-1000, 525, 304, 6851, 478, 224, 224, 6851, 6851, 6851,
	6851, -1000, -1000, 7075, -1000, 6851, 6851, 6851, 6851, 6851,
	6851, 6851, 303, 6851, -1000, 171, 163, 1021, 6851, 677,
	445, 295, 289, 6851, 6851, 287, 6851, 6851, -1000, 160,
	-1000, -1000, 969, 913, -1000, 152, 281, 6065, -1000, 146,
	144, -1000, 259, 907, 626, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 89, 153, -1000, 623, 246, -1000,
	418, -1000, 207, 353, -1000, 907, -1000, 59, 700, 617,
	-1000, 702, 907, -1000, 941, -1000, -75, 4297, 5235, 7075,
	5079, 790, 4, 528, 6851, 283, -1000, 8085, -1000, 762,
	-1000, 8046, -1000, 381, 2242, 8178, -1000, 58, -1000, -1000,
	348, 42, 4, -83, 34, 8178, -1000, 6851, 6851, 6851,
	6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851,
	6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851,
	6851, 6851, 445, 6403, 224, 6851, 940, -1000, 7992, 377,
	361, -1000, 688, 683, -1000, 525, 7953, -1000, -1000, 6291,
	6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851, 6851,
	6851, 6851, 285, -1000, -1000, -1000, -1000, -1000, 259, 524,
	907, 607, 560, -1000, -1000, 438, 438, 489, 438, 206,
	7870, 203, 438, 438, 438, 438, 438, 438, 438, -1000,
	6177, -1000, 438, 6851, 6851, 423, 736, 920, -1000, 232,
	6963, 224, 8414, 68, 246, 557, -1000, 511, 522, 907,
	675, 89, 153, 555, 6851, 6851, 8178, 8178, 6851, 8178,
	8178, 6851, 692, 736, 843, -1000, 899, 6851, 6065, 131,
	-7, 7831, 224, 6851, 6851, 939, -1000, 5503, 259, 54,
	6851, 6851, 89, 418, 189, -1000, 6851, 376, -1000, -1000,
	2085, 259, -1000, 714, 32, -1000, 698, 907, 3, -1000,
	696, 907, 938, 690, -85, 8815, -1000, -1000, -1000, -1000,
	-1000, -1000, 276, -1000, -1000, -1000, -1000, -1000, 242, 274,
	374, -10, 8178, -1000, 372, 367, -1000, -1000, -1000, -1000,
	-1000, 172, -1000, 6851, -1000, -1000, 858, 265, 8815, -1000,
	6851, 8542, 8593, 8324, 8414, 1579, 112, 8681, 8630, -30,
	-30, -30, 489, 438, 489, 489, 350, 350, 4572, 4572,
	4572, 4572, 151, 151, 151, 151, -1000, 7771, 6851, 17,
	-1000, -1000, 1936, 779, 2, -86, 4139, -1000, -1000, 263,
	710, 679, 718, 417, 718, 6851, 8414, 362, 8414, 8414,
	8414, 8414, 8414, 8414, 8414, 8414, 8414, 8414, 8414, 8414,
	-12, -1000, -1000, 261, 907, 259, 68, 68, 214, -1000,
	-1000, -1000, 120, 8178, 110, -1000, -1000, -1000, -1000, 846,
	936, 7732, 119, 393, 246, 139, -1000, -1000, 89, 153,
	-1000, 6851, -1000, -1000, 142, 907, 511, 68, 89, 142,
	-33, -1000, 525, -1000, 1632, 7678, 7639, 108, -1000, -1000,
	-1000, 107, 202, -1000, -1000, 5953, 5841, -1000, -1000, 104,
	103, -1000, -1000, -35, 201, -1000, -1000, 525, 224, 6851,
	-1000, 246, 246, -1000, -1000, 93, 7581, 246, 246, -1000,
	7542, -1000, 1927, -1000, -1000, -1000, -1000, 700, 928, 609,
	-1000, 617, 924, 552, -1000, 923, 8815, -1000, 8232, -1000,
	-1000, 511, 518, 907, 252, 8815, -1000, -1000, -1000, -1000,
	706, 545, 8815, 8815, 8815, 8815, 8815, 195, 523, 4455,
	3981, 365, 6851, 6851, 469, -1000, 876, -1000, -1000, 7484,
	-87, 710, -1000, 8178, 6851, 8504, 360, 224, 228, 228,
	4923, 921, 8815, 749, 710, 190, -13, -1000, 4, -1000,
	-1000, -1000, 511, 516, 907, 412, 718, -1000, -1000, -42,
	-1000, -1000, 525, -1000, 445, -88, 285, 285, 259, -1000,
	-1000, 149, 659, 6851, -1000, 68, -1000, -1000, 90, -1000,
	-1000, -1000, -1000, -1000, -1000, 6851, -1000, -1000, 141, 137,
	-1000, 6851, 6851, 89, 7445, -1000, 511, -1000, -1000, -1000,
	6851, -1000, -1000, -1000, -1000, -1000, -1000, 7391, 224, 8178,
	224, -1000, -1000, -1000, 5617, -1000, -1000, 8178, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, 914, -1000,
	-1000, 912, -1000, -1000, 8815, 8815, 8815, 8815, 8815, 8815,
	8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815,
	8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815, 8815,
	8792, 907, 511, 8815, 86, -32, 7352, 638, 764, 82,
	82, -80, -80, 7294, 357, -1000, 242, 5391, 496, 354,
	-1000, 344, 8178, -1000, 6851, 273, 448, 342, 821, -1000,
	8815, 186, 8504, -1000, -1000, 656, -1000, 224, 251, 656,
	-1000, -1000, -1000, -89, -1000, 720, 249, 185, 721, 710,
	490, 907, 511, -1000, -42, 1141, 718, 246, 6851, -1000,
	-47, 6851, 659, -1000, 84, 246, -1000, 7255, 659, 6851,
	6851, 63, 7197, -1000, 658, -1000, 5729, -1000, -1000, -1000,
	-1000, -1000, 1295, -80, -80, 82, 82, 82, 82, 1727,
	889, 5, 284, 284, -80, 8363, 1005, 8271, 1356, 1212,
	-45, -45, -45, -45, 56, 56, 56, 56, 8815, 7158,
	511, 183, -1000, -1000, 8815, 8815, -1000, -1000, -1000, -1000,
	5391, -1000, 476, 242, 233, -1000, 6851, 1683, -1000, -1000,
	-1000, -1000, -1000, 339, -1000, 721, 180, 228, -1000, 285,
	176, 3823, 8815, -1000, 409, 718, 406, 403, 229, -1000,
	838, -1000, 511, 761, -1000, -1000, 837, -52, -1000, 762,
	595, -1000, 905, 718, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 8414, -1000, 46, -1000, -1000, 386, -1000,
	35, 24, -1000, -1000, -1000, 68, 8178, 224, -1000, 8453,
	8815, -1000, 7104, 8232, -1000, 338, 177, -1000, 154, -1000,
	4455, -1000, 402, 4767, -1000, -49, 4767, 331, -1000, -1000,
	828, -1000, -1000, 184, -91, -1000, -54, -97, -1000, 902,
	4, -1000, -100, -77, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 8453, 8815, -1000, -1000, 4455, 4611, 4455, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 3665, 143, 3507, 3349, -67,
	-1000, 827, 6851, -1000, 824, 8815, -102, 895, 8815, -1000,
	718, -1000, 732, 8232, 4455, -1000, -1000, -1000, 3191, 3033,
	-1000, 398, -1000, -1000, -1000, 175, -1000, 8178, -107, -1000,
	8815, 221, -1000, -1000, 385, 732, -1000, 328, 325, 715,
	774, 500, -1000, 2875, -1000, 275, -1000, -1000, 810, 8815,
	-1000, 710, -1000, -1000, -1000, -1000, 718, 595, 894, 230,
	-1000, 2717, -1000, -1000, 60, -59, -1000, 890, -1000, -1000,
	-1000, 742, 326, 718, -1000, -1000, 742, -1000, 219, -1000,
	-1000, -1000, -1000, -1000, 718, 2559, 807, -1000, 36, 396,
	-1000, 2401, -1000,
}

var yyPgo = [...]int{
	0, 29, 1177, 22, 8, 1175, 40, 33, 27, 940,
	1167, 1165, 36, 217, 1179, 91, 1036, 72, 99, 59,
	810, 200, 1164, 31, 1163, 1162, 1154, 42, 1152, 50,
	34, 1151, 1150, 1149, 1148, 131, 1147, 1135, 20, 1133,
	26, 38, 168, 1132, 722, 35, 1131, 1, 1129, 1128,
	24, 1127, 68, 51, 46, 1126, 1125, 1122, 28, 1119,
	3, 1118, 1117, 2, 1116, 1113, 1112, 16, 1111, 1109,
	1101, 1093, 48, 5, 1092, 1091, 1089, 1087, 1086, 6,
	1084, 1017, 1083, 1082, 1081, 18, 1042, 1080, 1078, 1077,
	1076, 1075, 1073, 41, 1072, 1071, 4, 1070, 1069, 1067,
	17, 1065, 12, 1064, 1063, 1059, 7, 21, 30, 1052,
	1050, 25, 1049, 1041, 1032, 14, 39, 0, 1031, 1019,
	1011, 391, 619, 1010, 1008, 52, 1007, 1002, 1001, 15,
	1000, 999, 996, 993, 992, 984, 983, 972, 23, 969,
	19, 9, 968, 37, 965, 964, 963, 962, 182, 13,
	960, 923,
}

var yyR1 = [...]int{
	0, 151, 116, 116, 117, 117, 5, 5, 5, 5,
	5, 5, 5, 5, 5, 5, 5, 5, 118, 118,
	6, 6, 6, 6, 119, 119, 7, 7, 7, 7,
	120, 120, 8, 8, 8, 8, 55, 55, 121, 121,
	26, 26, 26, 26, 26, 27, 27, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 28, 28, 28, 28, 28,
	28, 28, 28, 28, 28, 126, 126, 62, 62, 127,
	127, 128, 128, 63, 90, 90, 58, 53, 54, 149,
	149, 150, 150, 64, 65, 65, 68, 68, 68, 68,
	110, 110, 2, 114, 114, 113, 113, 111, 111, 107,
	107, 106, 106, 106, 103, 103, 102, 102, 59, 59,
	91, 91, 94, 94, 94, 94, 125, 125, 125, 4,
	4, 104, 104, 123, 123, 124, 124, 56, 56, 57,
	57, 60, 60, 61, 61, 67, 67, 66, 66, 66,
	66, 86, 86, 86, 95, 95, 72, 72, 72, 72,
	84, 84, 29, 29, 29, 83, 83, 83, 83, 129,
	129, 69, 69, 69, 69, 71, 112, 112, 89, 89,
	132, 132, 133, 133, 73, 73, 74, 99, 99, 77,
	77, 76, 75, 75, 78, 78, 98, 98, 130, 130,
	131, 131, 134, 134, 79, 79, 79, 79, 79, 79,
	88, 88, 88, 88, 70, 70, 87, 87, 108, 108,
	109, 109, 138, 138, 136, 136, 137, 137, 137, 139,
	139, 44, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 17, 17, 17, 17,
	17, 17, 17, 17, 17, 17, 52, 52, 52, 52,
	49, 49, 49, 49, 48, 48, 1, 115, 115, 97,
	97, 97, 97, 25, 25, 25, 25, 25, 25, 25,
	25, 13, 13, 13, 13, 47, 47, 47, 45, 45,
	43, 43, 146, 146, 145, 51, 51, 51, 135, 135,
	135, 85, 85, 9, 9, 9, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 10, 30, 81, 81, 81,
	81, 81, 81, 81, 81, 81, 81, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	82, 82, 82, 82, 82, 82, 82, 82, 82, 82,
	37, 37, 37, 37, 31, 31, 31, 31, 31, 31,
	31, 100, 100, 3, 3, 101, 101, 101, 101, 16,
	16, 50, 50, 18, 19, 20, 21, 21, 147, 147,
	140, 142, 142, 80, 141, 141, 141, 42, 42, 46,
	46, 14, 24, 24, 22, 22, 22, 23, 23, 23,
	12, 12, 12, 11, 11, 15, 15, 143, 143, 144,
	144, 144, 41, 41, 148, 148, 96, 96, 40, 40,
	40, 93, 93, 92, 92, 92, 92, 92, 92, 92,
	92, 122, 122, 122, 122, 35, 35, 35, 35, 35,
	35, 35, 36, 36, 36, 39, 39, 39, 39, 39,
	39, 39, 39, 105, 105, 38, 38, 32, 32, 33,
	34,
}

var yyR2 = [...]int{
	0, 1, 2, 0, 1, 3, 1, 1, 1, 1,
	4, 3, 5, 4, 3, 4, 4, 2, 3, 1,
	1, 3, 2, 4, 3, 1, 1, 3, 2, 4,
	3, 1, 1, 3, 2, 4, 5, 4, 2, 0,
	1, 1, 1, 1, 4, 1, 2, 3, 5, 8,
	3, 5, 9, 3, 2, 3, 2, 3, 2, 3,
	3, 2, 3, 3, 3, 1, 2, 5, 8, 8,
	5, 1, 6, 3, 3, 0, 9, 0, 4, 1,
	0, 1, 2, 8, 1, 3, 1, 1, 1, 0,
	1, 0, 1, 9, 7, 6, 1, 2, 1, 2,
	0, 2, 1, 0, 2, 0, 2, 1, 3, 0,
	2, 1, 2, 4, 1, 4, 1, 4, 1, 4,
	3, 5, 3, 4, 4, 5, 0, 5, 4, 1,
	1, 1, 4, 0, 4, 0, 5, 0, 2, 0,
	3, 1, 0, 1, 3, 4, 6, 0, 1, 1,
	1, 2, 3, 3, 1, 3, 1, 1, 2, 2,
	3, 1, 1, 2, 4, 3, 5, 1, 3, 2,
	0, 3, 2, 1, 8, 3, 1, 3, 1, 3,
	0, 1, 1, 2, 2, 2, 3, 1, 3, 1,
	1, 3, 4, 3, 0, 1, 1, 3, 1, 1,
	0, 1, 1, 2, 1, 1, 1, 1, 1, 1,
	3, 5, 1, 3, 5, 4, 3, 1, 0, 1,
	3, 1, 2, 1, 4, 3, 2, 1, 1, 0,
	1, 3, 6, 3, 4, 6, 2, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 2,
	2, 2, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	2, 2, 2, 2, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 4, 5, 4, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 1,
	1, 3, 2, 1, 9, 10, 2, 2, 4, 4,
	4, 4, 4, 4, 4, 3, 1, 0, 4, 3,
	4, 1, 2, 2, 4, 3, 4, 4, 4, 4,
	2, 1, 1, 3, 2, 1, 3, 2, 1, 1,
	4, 1, 2, 0, 2, 0, 2, 1, 0, 1,
	1, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 3, 2, 3, 1, 1, 1, 1,
	3, 2, 4, 3, 1, 1, 1, 4, 3, 3,
	3, 3, 3, 3, 2, 2, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 4, 5, 2, 2, 3,
	1, 1, 3, 2, 1, 1, 1, 1, 3, 3,
	1, 0, 2, 0, 1, 5, 3, 3, 1, 1,
	1, 3, 3, 1, 1, 1, 5, 1, 2, 0,
	3, 4, 4, 1, 1, 1, 0, 1, 2, 3,
	3, 1, 4, 4, 1, 1, 1, 1, 2, 1,
	4, 4, 1, 1, 4, 0, 1, 1, 1, 4,
	4, 1, 1, 3, 1, 2, 3, 1, 1, 4,
	0, 0, 2, 5, 3, 3, 1, 6, 4, 4,
	2, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	6, 3, 1, 1, 1, 4, 4, 4, 2, 2,
	4, 2, 2, 1, 3, 1, 1, 3, 3, 3,
	3,
}

var yyChk = [...]int{
	-1000, -151, -116, -5, 2, -27, -53, -54, 52, 80,
	45, -55, -28, 10, -64, -65, 39, 144, 7, 21,
	20, 23, 30, 34, 35, 40, -52, 47, 99, 19,
	14, -16, 49, 25, 27, 146, 41, 44, 36, -1,
	-68, -2, 98, -18, -17, 37, 53, 100, 54, 101,
	55, -21, 60, 93, -20, 105, 106, 155, 154, 156,
	157, -50, -44, 148, -39, 108, 109, 110, 111, 112,
	113, 114, 6, 158, -31, -49, -48, 143, 97, -22,
	92, 50, 51, 4, 5, 85, 86, 87, 11, -37,
	-34, -9, 142, 75, 63, 18, 61, 150, -23, -24,
	-25, -32, -117, 83, -13, 8, 9, 67, 68, 82,
	64, 65, 66, 81, -12, -148, -46, -14, -42, -11,
	159, 12, 148, -117, 144, 83, 10, -118, 37, 39,
	-6, -117, 83, 146, 160, 147, 10, -121, -50, 148,
	-50, -27, -1, 80, 148, -50, 146, -16, 98, 99,
	146, -16, 146, -17, -21, -16, 146, -84, -29, 12,
	159, -83, -1, 12, -87, -16, 146, 131, 132, 88,
	90, 89, 161, 153, 163, 169, 155, 154, 164, 133,
	165, 166, 134, 135, 136, 137, 138, 139, 167, 140,
	168, 141, 91, 152, 148, 148, 148, 144, -16, 10,
	-149, 153, 10, 10, -17, -21, -16, 53, 53, 162,
	118, 119, 120, 121, 122, 123, 124, 125, 126, 127,
	128, 129, 148, -16, 105, 106, -20, -21, -117, 80,
	83, -13, -14, 99, -20, -16, -16, -16, -16, -44,
	-16, -52, -16, -16, -16, -16, -16, -16, -16, -51,
	148, -50, -16, 150, 150, -135, 17, -122, -35, 12,
	77, 78, -16, 58, -45, -13, -43, -117, 80, 83,
	-23, -12, -148, -14, 148, 148, -16, -16, 148, -16,
	-16, 150, -122, 17, 17, 76, -122, 150, 148, -93,
	-92, -16, 153, 150, 150, 83, -86, 148, -117, 79,
	150, 144, -12, 159, 79, -86, 144, 149, 146, 144,
	-116, -117, 146, 160, -119, -7, -117, 83, -120, -8,
	-117, 83, 29, -117, 10, 162, -26, 145, 2, -27,
	-53, -54, 52, -27, 147, -104, -27, 147, 21, -149,
	-108, -109, -16, -94, 144, 147, 146, 146, 146, 146,
	146, 160, -18, 144, -21, 146, 160, -149, 162, 146,
	160, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-16, -16, -16, -16, -16, -16, -45, -16, 147, -90,
	-58, -21, -21, -17, -91, 10, -121, 146, 146, 10,
	148, -110, 56, -114, 56, 59, -16, 153, -16, -16,
	-16, -16, -16, -16, -16, -16, -16, -16, -16, -16,
	-96, -40, -21, 60, 83, -117, 79, 79, 149, 149,
	149, 149, -15, -16, -15, 143, -35, -35, 17, 150,
	58, -16, 11, -21, -143, -144, -42, -41, -12, -148,
	10, 144, -85, -86, 79, 83, -117, 58, -12, 79,
	-105, -38, -21, -17, -21, -16, -16, -15, 142, 76,
	76, -15, -93, 151, -3, 160, 59, -19, -21, -15,
	-15, 10, 149, -95, -52, -72, -17, -21, 153, 84,
	-86, -41, -42, 10, 53, -15, -16, -41, -42, 10,
	-16, 146, -116, 145, -86, -6, 146, 160, 29, -117,
	146, 160, 29, -117, 10, 29, 162, -30, -81, -9,
	-33, -117, 80, 83, 61, 150, -10, 63, -82, 18,
	75, -13, 156, 157, 155, 154, 148, 148, -123, -121,
	-121, -50, 146, 160, -125, 146, -125, 146, -29, -16,
	12, 148, -30, -16, 147, -16, 149, 160, 29, 29,
	149, 160, 162, 145, 148, -60, -61, -67, -66, 61,
	62, -47, -117, 80, 83, -113, 57, -47, 144, -111,
	-47, -17, -21, -21, 92, 149, 160, 148, -117, -139,
	-137, -136, -138, 150, -140, 58, 151, 151, -36, 10,
	13, 12, 10, 145, 145, 150, 145, -141, -80, -142,
	-86, 150, 144, -12, -16, -42, -117, -143, -42, 149,
	160, 149, 149, 149, 151, 151, 149, -16, 153, -16,
	153, 151, 151, 149, 160, 149, -19, -16, -86, -86,
	151, 145, -86, -86, 145, 145, -7, 10, 29, -8,
	10, 29, 10, -30, 150, 155, 154, 164, 133, 165,
	166, 161, 153, 163, 134, 135, 169, 89, 90, 88,
	132, 131, 136, 137, 138, 139, 167, 168, 140, 141,
	152, 83, -117, 148, -100, -101, -81, 17, 79, -81,
	-81, -81, -81, -81, 149, -56, 94, 95, -124, 22,
	146, -108, -16, 145, 32, 33, -125, 31, -125, 145,
	162, -60, -16, 146, -58, -106, -21, 153, 60, -106,
	-59, -27, 147, 10, -30, -126, 42, -60, 149, 160,
	-149, 83, -117, 144, -111, -129, 160, -45, 162, -40,
	-96, 150, -138, -140, -15, -143, 151, -16, -147, 150,
	150, -15, -16, 145, -146, -38, 59, -19, -19, -72,
	10, 10, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -81, -81, -81, -81, -81, -81,
	-81, -81, -81, -81, -81, -81, -81, -81, 147, -81,
	-117, -100, 151, -3, 160, 59, 10, 53, 149, 146,
	-50, -27, -57, 94, 95, 146, 146, -16, -4, 147,
	146, 145, 146, 31, -30, 149, -107, 59, -21, 148,
	-107, -121, 162, -62, 43, 148, 149, -115, 45, -67,
	-150, 84, -117, -129, 145, -69, -130, -70, -71, -131,
	-134, 48, 39, 45, -79, 104, 103, 102, 99, 100,
	101, -47, -85, -16, 149, -15, 151, -141, 151, -140,
	-15, -15, 151, 145, -145, 58, -16, 153, 151, -81,
	147, 149, -81, -81, -27, 96, -50, 147, -108, -4,
	-121, 146, -115, 149, -106, -96, 149, 28, -30, 144,
	-47, 144, 144, 148, 12, 145, -88, 12, 146, 160,
	-1, -79, 10, -112, -47, 151, 145, 151, 151, -143,
	-19, -81, 59, 146, 147, -121, 149, -121, 144, -102,
	-27, 147, 149, -102, 146, -121, 12, -121, -121, -97,
	12, 153, 162, 146, 160, 162, 10, -149, 162, -89,
	160, 146, 144, -81, -121, -103, -27, 147, -121, -121,
	145, 149, 145, 145, 149, 160, 12, -16, 12, -30,
	162, 10, -30, -47, -132, -133, -73, -74, -75, -76,
	-77, -47, 10, -121, 145, 26, 144, 12, 153, 162,
	-30, 148, 145, -73, 146, 146, 46, 29, 79, 24,
	146, -121, 12, -30, -60, -99, -47, -78, -79, 10,
	146, 145, 149, 160, 10, -127, -128, -63, 42, -98,
	146, 144, -47, -63, 148, -121, -47, 145, 12, 149,
	144, -121, 145,
}

var yyDef = [...]int{
	3, -2, -2, 2, 6, 7, 8, 9, 0, 0,
	0, 0, 45, 4, 87, 88, 0, 39, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 331, 0,
	65, 0, 0, 0, 0, 71, 0, 0, 0, 89,
	0, 0, 303, 429, 430, 316, 96, 0, 98, 0,
	102, -2, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 283, 284, 0, 288, 0, 0, 0, 0, 0,
	0, 0, 345, 0, 298, 299, 300, 348, 0, 437,
	0, 0, 0, 0, 0, 0, 0, 0, 414, 415,
	416, 417, 0, 0, 420, 355, 0, 481, 454, 455,
	456, 410, -2, 0, 0, 353, 354, 356, 357, 358,
	359, 360, 361, 362, -2, 0, 459, 0, 0, 462,
	474, 463, 0, 0, 3, 0, 4, 0, 0, 0,
	19, 20, 0, 17, 0, 46, 0, 0, 0, 0,
	0, 0, 89, 0, 218, 0, 54, 0, 303, 331,
	56, 0, 58, 430, -2, 0, 61, 0, 161, 162,
	0, 0, 89, 167, 0, 217, 66, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 39, 0, 0,
	0, 90, 100, 103, -2, -2, 0, 97, 99, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 480, 236, 249, 251, 250, 435, 332, 0,
	0, 0, 0, 331, 252, 270, 271, 272, 273, 284,
	0, 0, 289, 290, 291, 292, 293, 294, 295, 296,
	0, 347, 297, 465, 465, 0, 349, 350, 493, 495,
	0, 0, 302, 0, 351, 338, 339, 332, 0, 0,
	341, -2, 0, 0, 0, 0, 508, 509, 0, 511,
	512, 465, 0, 0, 0, 364, 0, 465, 481, 0,
	423, 486, 0, 465, 465, 0, 323, 0, -2, 0,
	465, 0, -2, 475, 0, 330, 0, 0, 11, 3,
	0, -2, 14, 0, 0, 25, 26, 0, 0, 31,
	32, 0, 0, 22, 0, 0, 38, 47, 40, 41,
	42, 43, 0, 133, 39, 50, 131, 39, 0, 0,
	0, 219, 221, 53, 126, 126, 55, 57, 59, 60,
	62, 0, 163, 0, 433, 63, 0, 0, 0, 64,
	0, 253, 254, 255, 256, 257, 258, 259, 260, 261,
	262, 263, 264, 265, 266, 267, 268, 269, -2, -2,
	-2, -2, -2, -2, -2, -2, 282, 0, 0, 0,
	84, 86, -2, 430, 0, 0, 0, 73, 74, 0,
	-2, 105, 0, 0, 0, 0, 233, 0, 237, 238,
	239, 240, 241, 242, 243, 244, 245, 246, 247, 248,
	0, 477, 478, 0, 0, 334, 0, 0, 229, 431,
	432, 346, 0, 466, 0, 301, 494, 491, 492, 0,
	0, 0, 414, 0, 446, 467, 468, 471, 447, 0,
	472, 0, 231, 352, 0, 0, 334, 0, 458, 0,
	0, 513, -2, -2, -2, 0, 0, 0, 418, 363,
	419, 0, 0, 315, 482, 424, 0, 490, 434, 0,
	0, 5, 151, 0, 0, 154, -2, -2, 0, 0,
	325, 0, 449, -2, 520, 0, 0, 0, 450, -2,
	0, 10, 0, 13, 324, 18, 15, 0, 0, 28,
	16, 0, 0, 34, 21, 0, 0, 37, 366, 367,
	368, -2, 0, 0, 0, 421, 374, 375, 376, 355,
	0, 0, 0, 0, 0, 0, 0, 0, 137, -2,
	0, 0, 218, 0, 0, 126, 0, 126, 160, 0,
	165, -2, 168, 216, 0, 287, 0, 0, 0, 0,
	0, 0, 0, 75, -2, 0, 141, 143, 89, 148,
	149, 150, 335, 0, 0, 0, 0, 101, 170, 104,
	107, -2, -2, 234, 0, 0, 480, 480, 333, 285,
	230, 227, 228, 465, 223, 0, 311, 310, 0, 502,
	503, 504, 497, 498, 499, 0, 501, 439, 444, 445,
	443, 465, 0, 448, 0, 449, 333, 343, 450, 505,
	0, 506, 507, 510, 313, 312, 314, 484, 0, 485,
	0, 452, 453, 152, 0, 153, 158, 159, 326, 327,
	460, 461, 328, 329, 464, 12, 24, 27, 0, 30,
	33, 0, 23, 36, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, -2, 421, 0, 423, 428, 0, 0, 384,
	385, 407, 408, 0, 0, 48, 0, 0, 139, 0,
	51, 0, 220, 122, 0, 0, 0, 0, 0, 164,
	0, 0, 286, 67, 85, 109, 111, 0, 0, 109,
	70, 118, 39, 0, 120, 77, 0, 0, 317, 147,
	91, 0, 337, 170, 106, 200, 0, 351, 0, 476,
	0, 465, 226, 222, 0, 446, 496, 0, 436, 465,
	465, 0, 0, 473, 340, 514, 0, 488, 489, 155,
	29, 35, 0, 378, 379, 380, 381, 382, 383, 386,
	387, 388, 389, 390, 391, 392, 393, 394, 395, 396,
	-2, -2, -2, -2, -2, -2, -2, -2, 0, 0,
	-2, 0, 373, 422, 424, 0, 365, 519, 409, 44,
	0, 138, 0, 0, 0, 132, 218, 0, 39, 129,
	130, 123, 124, 0, 166, 317, 0, 0, 112, 480,
	0, 0, 0, 72, 0, 0, 0, 0, 0, 144,
	0, 92, 336, 200, 95, 169, 0, 0, 173, 0,
	-2, 199, 0, 0, 202, 204, 205, 206, 207, 208,
	209, 108, 235, 232, 479, 0, 225, 440, 0, 438,
	0, 0, 469, 470, 342, 0, 483, 0, 377, 405,
	0, 372, 426, 427, 134, 0, 0, 39, 0, 39,
	-2, 125, 0, 0, 110, 0, 0, 0, 121, 39,
	0, 39, 39, 0, 145, 94, 0, 212, 172, 0,
	89, 203, 0, 0, 176, 224, 500, 442, 441, 344,
	487, 406, 0, 49, 39, -2, 0, -2, 39, 68,
	116, 39, 113, 69, 119, 0, 0, 0, 0, 0,
	321, 0, 0, 171, 0, 0, 0, 0, 0, 175,
	0, 178, 180, 425, -2, 52, 114, 39, 0, 0,
	78, 0, 93, 304, 318, 0, 322, 146, 210, 213,
	0, 0, 215, 177, 0, 181, 182, 0, 0, 190,
	0, 0, -2, 0, 305, 0, 39, 319, 0, 0,
	214, -2, 179, 183, 184, 185, 0, 194, 0, 0,
	117, 0, 320, 211, 0, 186, 187, 0, -2, 191,
	115, 80, 0, 0, 192, 76, 79, 81, 0, 174,
	196, 39, 188, 82, 0, 0, 0, 197, 0, 0,
	39, 0, 83,
}

var yyTok1 = [...]int{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 156, 142, 3, 159, 166, 153, 3,
	148, 149, 164, 155, 160, 154, 169, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 147, 146,
	167, 162, 168, 152, 158, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 150, 3, 151, 163, 3, 143, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 161, 145, 157,
}

var yyTok2 = [...]int{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
}

var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:269
		{
			yylex.(*Parser).rootNode = &ast.Root{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Stmts:  yyDollar[1].list,
				EndTkn: yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:282
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 3:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:288
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:295
		{
			yyVAL.list = []ast.Vertex{
				&ast.NameNamePart{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				},
			}
		}
	case 5:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:307
		{
			yyVAL.list = append(yyDollar[1].list, &ast.NameNamePart{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[3].token),
				},
				NsSeparatorTkn: yyDollar[2].token,
				StringTkn:      yyDollar[3].token,
				Value:          yyDollar[3].token.Value,
			})
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:321
		{
			// error
			yyVAL.node = nil
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:326
		{
			yyVAL.node = yyDollar[1].node
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:330
		{
			yyVAL.node = yyDollar[1].node
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:334
		{
			yyVAL.node = yyDollar[1].node
		}
	case 10:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:338
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 11:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:350
		{
			yyVAL.node = &ast.StmtNamespace{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				NsTkn: yyDollar[1].token,
				Name: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 12:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:366
		{
			yyVAL.node = &ast.StmtNamespace{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				},
				NsTkn: yyDollar[1].token,
				Name: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
				OpenCurlyBracket:  yyDollar[3].token,
				Stmts:             yyDollar[4].list,
				CloseCurlyBracket: yyDollar[5].token,
			}
		}
	case 13:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:384
		{
			yyVAL.node = &ast.StmtNamespace{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				NsTkn:             yyDollar[1].token,
				OpenCurlyBracket:  yyDollar[2].token,
				Stmts:             yyDollar[3].list,
				CloseCurlyBracket: yyDollar[4].token,
			}
		}
	case 14:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:396
		{
			yyVAL.node = &ast.StmtUse{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				UseTkn:          yyDollar[1].token,
				UseDeclarations: yyDollar[2].list,
				SemiColonTkn:    yyDollar[3].token,
			}
		}
	case 15:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:407
		{
			yyVAL.node = &ast.StmtUse{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				UseTkn: yyDollar[1].token,
				Type: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				UseDeclarations: yyDollar[3].list,
				SemiColonTkn:    yyDollar[4].token,
			}
		}
	case 16:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:425
		{
			yyVAL.node = &ast.StmtUse{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				UseTkn: yyDollar[1].token,
				Type: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				UseDeclarations: yyDollar[3].list,
				SemiColonTkn:    yyDollar[4].token,
			}
		}
	case 17:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:443
		{
			yyDollar[1].node.(*ast.StmtConstList).SemiColonTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtConstList).Node.Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)
			yyVAL.node = yyDollar[1].node
		}
	case 18:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:452
		{
			yyDollar[1].list[len(yyDollar[1].list)-1].(*ast.StmtUseDeclaration).CommaTkn = yyDollar[2].token

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:458
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:465
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
			}
		}
	case 21:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:479
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 22:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:501
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
			}
		}
	case 23:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:516
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
				AsTkn: yyDollar[3].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 24:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:542
		{
			yyDollar[1].list[len(yyDollar[1].list)-1].(*ast.StmtUseDeclaration).CommaTkn = yyDollar[2].token

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:548
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:555
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
			}
		}
	case 27:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:569
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 28:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:591
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
			}
		}
	case 29:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:606
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
				AsTkn: yyDollar[3].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 30:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:632
		{
			yyDollar[1].list[len(yyDollar[1].list)-1].(*ast.StmtUseDeclaration).CommaTkn = yyDollar[2].token

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:638
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:645
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
			}
		}
	case 33:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:659
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token),
				},
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
				AsTkn: yyDollar[2].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 34:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:681
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
			}
		}
	case 35:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:696
		{
			yyVAL.node = &ast.StmtUseDeclaration{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Use: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Parts: yyDollar[2].list,
				},
				AsTkn: yyDollar[3].token,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 36:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:722
		{
			constList := yyDollar[1].node.(*ast.StmtConstList)
			constList.Node.Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)
			constList.SeparatorTkns = append(constList.SeparatorTkns, yyDollar[2].token)
			constList.Consts = append(constList.Consts, &ast.StmtConstant{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node),
				},
				Name: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			})

			yyVAL.node = yyDollar[1].node
		}
	case 37:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:744
		{
			yyVAL.node = &ast.StmtConstList{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				},
				ConstTkn: yyDollar[1].token,
				Consts: []ast.Vertex{
					&ast.StmtConstant{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node),
						},
						Name: &ast.Identifier{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[2].token),
							},
							IdentifierTkn: yyDollar[2].token,
							Value:         yyDollar[2].token.Value,
						},
						EqualTkn: yyDollar[3].token,
						Expr:     yyDollar[4].node,
					},
				},
			}
		}
	case 38:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:772
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 39:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:778
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:786
		{
			// error
			yyVAL.node = nil
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:791
		{
			yyVAL.node = yyDollar[1].node
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:795
		{
			yyVAL.node = yyDollar[1].node
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:799
		{
			yyVAL.node = yyDollar[1].node
		}
	case 44:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:803
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:819
		{
			yyVAL.node = yyDollar[1].node
		}
	case 46:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:823
		{
			yyVAL.node = &ast.StmtLabel{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				LabelName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 47:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:842
		{
			yyVAL.node = &ast.StmtStmtList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenCurlyBracket:  yyDollar[1].token,
				Stmts:             yyDollar[2].list,
				CloseCurlyBracket: yyDollar[3].token,
			}
		}
	case 48:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:853
		{
			pos := position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)
			if yyDollar[5].node != nil {
				pos = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)
			} else if len(yyDollar[4].list) > 0 {
				pos = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[4].list)
			}

			yyVAL.node = &ast.StmtIf{
				Node: ast.Node{
					Position: pos,
				},
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].node.(*ast.ParserBrackets).OpenBracketTkn,
				Cond:                yyDollar[2].node.(*ast.ParserBrackets).Child,
				CloseParenthesisTkn: yyDollar[2].node.(*ast.ParserBrackets).CloseBracketTkn,
				Stmt:                yyDollar[3].node,
				ElseIf:              yyDollar[4].list,
				Else:                yyDollar[5].node,
			}
		}
	case 49:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php5/php5.y:875
		{
			yyVAL.node = &ast.StmtIf{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				},
				Alt:                 true,
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].node.(*ast.ParserBrackets).OpenBracketTkn,
				Cond:                yyDollar[2].node.(*ast.ParserBrackets).Child,
				CloseParenthesisTkn: yyDollar[2].node.(*ast.ParserBrackets).CloseBracketTkn,
				ColonTkn:            yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[4].list),
					},
					Stmts: yyDollar[4].list,
				},
				ElseIf:       yyDollar[5].list,
				Else:         yyDollar[6].node,
				EndIfTkn:     yyDollar[7].token,
				SemiColonTkn: yyDollar[8].token,
			}
		}
	case 50:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:899
		{
			yyDollar[3].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).OpenBracketTkn
			yyDollar[3].node.(*ast.StmtWhile).Cond = yyDollar[2].node.(*ast.ParserBrackets).Child
			yyDollar[3].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).CloseBracketTkn
			yyDollar[3].node.(*ast.StmtWhile).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			yyVAL.node = yyDollar[3].node
		}
	case 51:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:909
		{
			yyVAL.node = &ast.StmtDo{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				},
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ParserBrackets).OpenBracketTkn,
				Cond:                yyDollar[4].node.(*ast.ParserBrackets).Child,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ParserBrackets).CloseBracketTkn,
				SemiColonTkn:        yyDollar[5].token,
			}
		}
	case 52:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php5/php5.y:924
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ast.ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ast.ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ast.ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ast.ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ast.ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 53:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:941
		{
			yyDollar[3].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).OpenBracketTkn
			yyDollar[3].node.(*ast.StmtSwitch).Cond = yyDollar[2].node.(*ast.ParserBrackets).Child
			yyDollar[3].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).CloseBracketTkn
			yyDollar[3].node.(*ast.StmtSwitch).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			yyVAL.node = yyDollar[3].node
		}
	case 54:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:951
		{
			yyVAL.node = &ast.StmtBreak{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				BreakTkn:     yyDollar[1].token,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 55:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:961
		{
			yyVAL.node = &ast.StmtBreak{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 56:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:972
		{
			yyVAL.node = &ast.StmtContinue{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				ContinueTkn:  yyDollar[1].token,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 57:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:982
		{
			yyVAL.node = &ast.StmtContinue{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 58:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:993
		{
			yyVAL.node = &ast.StmtReturn{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				ReturnTkn:    yyDollar[1].token,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 59:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1003
		{
			yyVAL.node = &ast.StmtReturn{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 60:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1014
		{
			yyVAL.node = &ast.StmtReturn{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 61:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1025
		{
			yyVAL.node = &ast.StmtExpression{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				},
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 62:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1035
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[2].node.(*ast.StmtGlobal).SeparatorTkns, nil)
			yyDollar[2].node.(*ast.StmtGlobal).Node.Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 63:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1044
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[2].node.(*ast.StmtStatic).SeparatorTkns, nil)
			yyDollar[2].node.(*ast.StmtStatic).Node.Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 64:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1053
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Node.Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1061
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 66:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1071
		{
			yyVAL.node = &ast.StmtExpression{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				},
				Expr:         yyDollar[1].node,
				SemiColonTkn: yyDollar[2].token,
			}
		}
	case 67:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1081
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).Node.Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			yyVAL.node = yyDollar[3].node
		}
	case 68:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php5/php5.y:1091
		{
			yyDollar[8].node.(*ast.StmtForeach).ForeachTkn = yyDollar[1].token
			yyDollar[8].node.(*ast.StmtForeach).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[8].node.(*ast.StmtForeach).Expr = yyDollar[3].node
			yyDollar[8].node.(*ast.StmtForeach).AsTkn = yyDollar[4].token
			if yyDollar[6].node == nil {
				yyDollar[8].node.(*ast.StmtForeach).Var = yyDollar[5].node
			} else {
				yyDollar[8].node.(*ast.StmtForeach).Key = yyDollar[5].node
				yyDollar[8].node.(*ast.StmtForeach).DoubleArrowTkn = yyDollar[6].node.(*ast.StmtForeach).DoubleArrowTkn
				yyDollar[8].node.(*ast.StmtForeach).Var = yyDollar[6].node.(*ast.StmtForeach).Var
			}
			yyDollar[8].node.(*ast.StmtForeach).CloseParenthesisTkn = yyDollar[7].token
			yyDollar[8].node.(*ast.StmtForeach).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node)

			yyVAL.node = yyDollar[8].node
		}
	case 69:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php5/php5.y:1109
		{
			yyDollar[8].node.(*ast.StmtForeach).ForeachTkn = yyDollar[1].token
			yyDollar[8].node.(*ast.StmtForeach).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[8].node.(*ast.StmtForeach).Expr = yyDollar[3].node
			yyDollar[8].node.(*ast.StmtForeach).AsTkn = yyDollar[4].token
			if yyDollar[6].node == nil {
				yyDollar[8].node.(*ast.StmtForeach).Var = yyDollar[5].node
			} else {
				yyDollar[8].node.(*ast.StmtForeach).Key = yyDollar[5].node
				yyDollar[8].node.(*ast.StmtForeach).DoubleArrowTkn = yyDollar[6].node.(*ast.StmtForeach).DoubleArrowTkn
				yyDollar[8].node.(*ast.StmtForeach).Var = yyDollar[6].node.(*ast.StmtForeach).Var
			}
			yyDollar[8].node.(*ast.StmtForeach).CloseParenthesisTkn = yyDollar[7].token
			yyDollar[8].node.(*ast.StmtForeach).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[8].node)

			yyVAL.node = yyDollar[8].node
		}
	case 70:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1127
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ast.ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1138
		{
			yyVAL.node = &ast.StmtNop{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 72:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:1147
		{
			yyVAL.node = &ast.StmtTry{
				TryTkn:            yyDollar[1].token,
				OpenCurlyBracket:  yyDollar[2].token,
				Stmts:             yyDollar[3].list,
				CloseCurlyBracket: yyDollar[4].token,
				Catches:           yyDollar[5].list,
				Finally:           yyDollar[6].node,
			}

			if yyDollar[6].node == nil {
				yyVAL.node.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			} else {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}
		}
	case 73:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1164
		{
			yyVAL.node = &ast.StmtThrow{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				ThrowTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 74:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1175
		{
			yyVAL.node = &ast.StmtGoto{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				GotoTkn: yyDollar[1].token,
				Label: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 75:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1195
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 76:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php5/php5.y:1199
		{
			catch := &ast.StmtCatch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				},
				CatchTkn:           yyDollar[1].token,
				OpenParenthesisTkn: yyDollar[2].token,
				Types:              []ast.Vertex{yyDollar[3].node},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[4].token),
						},
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				CloseParenthesisTkn:  yyDollar[5].token,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}
			yyVAL.list = append([]ast.Vertex{catch}, yyDollar[9].list...)
		}
	case 77:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1230
		{
			yyVAL.node = nil
		}
	case 78:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1234
		{
			yyVAL.node = &ast.StmtFinally{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1249
		{
			yyVAL.list = yyDollar[1].list
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1253
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1260
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 82:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1264
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 83:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php5/php5.y:1271
		{
			yyVAL.node = &ast.StmtCatch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[8].token),
				},
				CatchTkn:           yyDollar[1].token,
				OpenParenthesisTkn: yyDollar[2].token,
				Types:              []ast.Vertex{yyDollar[3].node},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[4].token),
						},
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				CloseParenthesisTkn:  yyDollar[5].token,
				OpenCurlyBracketTkn:  yyDollar[6].token,
				Stmts:                yyDollar[7].list,
				CloseCurlyBracketTkn: yyDollar[8].token,
			}
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1301
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 85:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1307
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1317
		{
			yyVAL.node = yyDollar[1].node
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1324
		{
			yyVAL.node = yyDollar[1].node
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1331
		{
			yyVAL.node = yyDollar[1].node
		}
	case 89:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1338
		{
			yyVAL.token = nil
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1342
		{
			yyVAL.token = yyDollar[1].token
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1349
		{
			yyVAL.token = nil
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1353
		{
			yyVAL.token = yyDollar[1].token
		}
	case 93:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php5/php5.y:1360
		{
			yyVAL.node = &ast.StmtFunction{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[9].token),
				},
				FunctionTkn:  yyDollar[1].token,
				AmpersandTkn: yyDollar[2].token,
				FunctionName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				OpenParenthesisTkn:   yyDollar[4].token,
				Params:               yyDollar[5].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[6].token,
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}
		}
	case 94:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php5/php5.y:1387
		{
			switch n := yyDollar[1].node.(type) {
			case *ast.StmtClass:
				n.Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[7].token)
				n.ClassName = &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				}
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].node
				n.OpenCurlyBracket = yyDollar[5].token
				n.Stmts = yyDollar[6].list
				n.CloseCurlyBracket = yyDollar[7].token
			case *ast.StmtTrait:
				n.Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[7].token)
				n.TraitName = &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				}
				n.Extends = yyDollar[3].node
				n.Implements = yyDollar[4].node
				n.OpenCurlyBracket = yyDollar[5].token
				n.Stmts = yyDollar[6].list
				n.CloseCurlyBracket = yyDollar[7].token
			}

			yyVAL.node = yyDollar[1].node
		}
	case 95:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:1422
		{
			yyVAL.node = &ast.StmtInterface{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				},
				InterfaceTkn: yyDollar[1].token,
				InterfaceName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				Extends:              yyDollar[3].node,
				OpenCurlyBracketTkn:  yyDollar[4].token,
				Stmts:                yyDollar[5].list,
				CloseCurlyBracketTkn: yyDollar[6].token,
			}
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1446
		{
			yyVAL.node = &ast.StmtClass{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				ClassTkn: yyDollar[1].token,
			}
		}
	case 97:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1455
		{
			yyVAL.node = &ast.StmtClass{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				Modifiers: []ast.Vertex{
					&ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				ClassTkn: yyDollar[2].token,
			}
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1473
		{
			yyVAL.node = &ast.StmtTrait{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				TraitTkn: yyDollar[1].token,
			}
		}
	case 99:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1482
		{
			yyVAL.node = &ast.StmtClass{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				Modifiers: []ast.Vertex{
					&ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				ClassTkn: yyDollar[2].token,
			}
		}
	case 100:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1503
		{
			yyVAL.node = nil
		}
	case 101:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1507
		{
			yyVAL.node = &ast.StmtClassExtends{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				ExtendTkn: yyDollar[1].token,
				ClassName: yyDollar[2].node,
			}
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1520
		{
			yyVAL.token = yyDollar[1].token
		}
	case 103:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1527
		{
			yyVAL.node = nil
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1531
		{
			yyVAL.node = &ast.StmtInterfaceExtends{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ast.ParserSeparatedList).Items),
				},
				ExtendsTkn:     yyDollar[1].token,
				InterfaceNames: yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
			}
		}
	case 105:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1545
		{
			yyVAL.node = nil
		}
	case 106:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1549
		{
			yyVAL.node = &ast.StmtClassImplements{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ast.ParserSeparatedList).Items),
				},
				ImplementsTkn:  yyDollar[1].token,
				InterfaceNames: yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
			}
		}
	case 107:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1563
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 108:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1569
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 109:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1579
		{
			yyVAL.node = nil
		}
	case 110:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1583
		{
			yyVAL.node = &ast.StmtForeach{
				DoubleArrowTkn: yyDollar[1].token,
				Var:            yyDollar[2].node,
			}
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1593
		{
			yyVAL.node = yyDollar[1].node
		}
	case 112:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1597
		{
			yyVAL.node = &ast.ExprReference{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 113:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1607
		{
			pairList := yyDollar[3].node.(*ast.ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = &ast.ExprList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1630
		{
			yyVAL.node = &ast.StmtFor{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Stmt: yyDollar[1].node,
			}
		}
	case 115:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1639
		{
			yyVAL.node = &ast.StmtFor{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Alt:      true,
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Stmts: yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1660
		{
			yyVAL.node = &ast.StmtForeach{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Stmt: yyDollar[1].node,
			}
		}
	case 117:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1669
		{
			yyVAL.node = &ast.StmtForeach{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Alt:      true,
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Stmts: yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1691
		{
			yyVAL.node = &ast.StmtDeclare{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Stmt: yyDollar[1].node,
			}
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1700
		{
			yyVAL.node = &ast.StmtDeclare{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Alt:      true,
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Stmts: yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1722
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.StmtConstant{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
						},
						Name: &ast.Identifier{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							IdentifierTkn: yyDollar[1].token,
							Value:         yyDollar[1].token.Value,
						},
						EqualTkn: yyDollar[2].token,
						Expr:     yyDollar[3].node,
					},
				},
			}
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1743
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(
				yyDollar[1].node.(*ast.ParserSeparatedList).Items,
				&ast.StmtConstant{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node),
					},
					Name: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[3].token),
						},
						IdentifierTkn: yyDollar[3].token,
						Value:         yyDollar[3].token.Value,
					},
					EqualTkn: yyDollar[4].token,
					Expr:     yyDollar[5].node,
				},
			)

			yyVAL.node = yyDollar[1].node
		}
	case 122:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1770
		{
			yyVAL.node = &ast.StmtSwitch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseList:             yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 123:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1781
		{
			yyVAL.node = &ast.StmtSwitch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				CaseList:             yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1793
		{
			yyVAL.node = &ast.StmtSwitch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Alt:          true,
				ColonTkn:     yyDollar[1].token,
				CaseList:     yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 125:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1806
		{
			yyVAL.node = &ast.StmtSwitch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				},
				Alt:              true,
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				CaseList:         yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 126:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1824
		{
			yyVAL.list = nil
		}
	case 127:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1828
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				},
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 128:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1840
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				},
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1855
		{
			yyVAL.token = yyDollar[1].token
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1859
		{
			yyVAL.token = yyDollar[1].token
		}
	case 131:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1867
		{
			yyVAL.node = &ast.StmtWhile{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Stmt: yyDollar[1].node,
			}
		}
	case 132:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1876
		{
			yyVAL.node = &ast.StmtWhile{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Alt:      true,
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[2].list),
					},
					Stmts: yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 133:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1899
		{
			yyVAL.list = nil
		}
	case 134:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:1903
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtElseIf{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node),
				},
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].node.(*ast.ParserBrackets).OpenBracketTkn,
				Cond:                yyDollar[3].node.(*ast.ParserBrackets).Child,
				CloseParenthesisTkn: yyDollar[3].node.(*ast.ParserBrackets).CloseBracketTkn,
				Stmt:                yyDollar[4].node,
			})
		}
	case 135:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1920
		{
			yyVAL.list = nil
		}
	case 136:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:1924
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtElseIf{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				},
				Alt:                 true,
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].node.(*ast.ParserBrackets).OpenBracketTkn,
				Cond:                yyDollar[3].node.(*ast.ParserBrackets).Child,
				CloseParenthesisTkn: yyDollar[3].node.(*ast.ParserBrackets).CloseBracketTkn,
				ColonTkn:            yyDollar[4].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[5].list),
					},
					Stmts: yyDollar[5].list,
				},
			})
		}
	case 137:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1948
		{
			yyVAL.node = nil
		}
	case 138:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:1952
		{
			yyVAL.node = &ast.StmtElse{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				ElseTkn: yyDollar[1].token,
				Stmt:    yyDollar[2].node,
			}
		}
	case 139:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1966
		{
			yyVAL.node = nil
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:1970
		{
			yyVAL.node = &ast.StmtElse{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
				},
				Alt:      true,
				ElseTkn:  yyDollar[1].token,
				ColonTkn: yyDollar[2].token,
				Stmt: &ast.StmtStmtList{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[3].list),
					},
					Stmts: yyDollar[3].list,
				},
			}
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:1991
		{
			yyVAL.node = yyDollar[1].node
		}
	case 142:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:1995
		{
			yyVAL.node = &ast.ParserSeparatedList{}
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2002
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2008
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 145:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:2018
		{
			pos := position.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				pos = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				pos = position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				pos = position.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			}

			yyVAL.node = &ast.Parameter{
				Node: ast.Node{
					Position: pos,
				},
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[4].token),
						},
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}
		}
	case 146:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:2050
		{
			pos := position.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			if yyDollar[1].node != nil {
				pos = position.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				pos = position.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				pos = position.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			}

			yyVAL.node = &ast.Parameter{
				Node: ast.Node{
					Position: pos,
				},
				Type:         yyDollar[1].node,
				AmpersandTkn: yyDollar[2].token,
				VariadicTkn:  yyDollar[3].token,
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[4].token),
						},
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
				EqualTkn:     yyDollar[5].token,
				DefaultValue: yyDollar[6].node,
			}
		}
	case 147:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2088
		{
			yyVAL.node = nil
		}
	case 148:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2092
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2102
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2112
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2120
		{
			yyVAL.node = &ast.ArgumentList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				OpenParenthesisTkn:  yyDollar[1].token,
				CloseParenthesisTkn: yyDollar[2].token,
			}
		}
	case 152:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2130
		{
			argumentList := yyDollar[2].node.(*ast.ArgumentList)
			argumentList.Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			argumentList.OpenParenthesisTkn = yyDollar[1].token
			argumentList.CloseParenthesisTkn = yyDollar[3].token

			yyVAL.node = argumentList
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2139
		{
			yyVAL.node = &ast.ArgumentList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenParenthesisTkn: yyDollar[1].token,
				Arguments: []ast.Vertex{
					&ast.Argument{
						Node: ast.Node{
							Position: position.NewNodePosition(yyDollar[2].node),
						},
						Expr: yyDollar[2].node,
					},
				},
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2161
		{
			yyVAL.node = &ast.ArgumentList{
				Arguments: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 155:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2167
		{
			yyDollar[1].node.(*ast.ArgumentList).SeparatorTkns = append(yyDollar[1].node.(*ast.ArgumentList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ArgumentList).Arguments = append(yyDollar[1].node.(*ast.ArgumentList).Arguments, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 156:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2177
		{
			yyVAL.node = &ast.Argument{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Expr: yyDollar[1].node,
			}
		}
	case 157:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2186
		{
			yyVAL.node = &ast.Argument{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Expr: yyDollar[1].node,
			}
		}
	case 158:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2195
		{
			yyVAL.node = &ast.Argument{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				AmpersandTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 159:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2205
		{
			yyVAL.node = &ast.Argument{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				VariadicTkn: yyDollar[1].token,
				Expr:        yyDollar[2].node,
			}
		}
	case 160:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2218
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 161:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2225
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2235
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 163:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2250
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				DollarTkn: yyDollar[1].token,
				VarName:   yyDollar[2].node,
			}
		}
	case 164:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:2260
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				DollarTkn: yyDollar[1].token,
				VarName: &ast.ParserBrackets{
					Node: ast.Node{
						Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
					},
					OpenBracketTkn:  yyDollar[2].token,
					Child:           yyDollar[3].node,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2281
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, &ast.StmtStaticVar{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[3].token),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[3].token),
						},
						IdentifierTkn: yyDollar[3].token,
						Value:         yyDollar[3].token.Value,
					},
				},
			})
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 166:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:2304
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, &ast.StmtStaticVar{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[3].token),
						},
						IdentifierTkn: yyDollar[3].token,
						Value:         yyDollar[3].token.Value,
					},
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			})
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2329
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{
					&ast.StmtStaticVar{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						Var: &ast.ExprVariable{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							VarName: &ast.Identifier{
								Node: ast.Node{
									Position: position.NewTokenPosition(yyDollar[1].token),
								},
								IdentifierTkn: yyDollar[1].token,
								Value:         yyDollar[1].token.Value,
							},
						},
					},
				},
			}
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2353
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{
					&ast.StmtStaticVar{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
						},
						Var: &ast.ExprVariable{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							VarName: &ast.Identifier{
								Node: ast.Node{
									Position: position.NewTokenPosition(yyDollar[1].token),
								},
								IdentifierTkn: yyDollar[1].token,
								Value:         yyDollar[1].token.Value,
							},
						},
						EqualTkn: yyDollar[2].token,
						Expr:     yyDollar[3].node,
					},
				},
			}
		}
	case 169:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2383
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 170:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2387
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 171:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2395
		{
			yyVAL.node = &ast.StmtPropertyList{
				Node: ast.Node{
					Position: position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token),
				},
				Modifiers:     yyDollar[1].list,
				Properties:    yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 172:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2407
		{
			yyDollar[1].node.(*ast.StmtClassConstList).SemiColonTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtClassConstList).Node.Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)
			yyVAL.node = yyDollar[1].node
		}
	case 173:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2413
		{
			yyVAL.node = yyDollar[1].node
		}
	case 174:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php5/php5.y:2417
		{
			pos := position.NewTokenNodePosition(yyDollar[2].token, yyDollar[8].node)
			if yyDollar[1].list != nil {
				yyVAL.node.GetNode().Position = position.NewNodeListNodePosition(yyDollar[1].list, yyDollar[8].node)
			}

			yyVAL.node = &ast.StmtClassMethod{
				Node: ast.Node{
					Position: pos,
				},
				Modifiers:    yyDollar[1].list,
				FunctionTkn:  yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				MethodName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
				OpenParenthesisTkn:  yyDollar[5].token,
				Params:              yyDollar[6].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[6].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[7].token,
				Stmt:                yyDollar[8].node,
			}
		}
	case 175:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2448
		{
			yyVAL.node = &ast.StmtTraitUse{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				},
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
				Adaptations:   yyDollar[3].node,
			}
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2463
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 177:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2469
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 178:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2479
		{
			yyVAL.node = &ast.StmtNop{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2488
		{
			yyVAL.node = &ast.StmtTraitAdaptationList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenParenthesisTkn:  yyDollar[1].token,
				Adaptations:         yyDollar[2].list,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2502
		{
			yyVAL.list = nil
		}
	case 181:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2506
		{
			yyVAL.list = yyDollar[1].list
		}
	case 182:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2513
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2517
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 184:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2524
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2530
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 186:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2539
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Node: ast.Node{
					Position: position.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ast.ParserSeparatedList).Items),
				},
				Ref:           yyDollar[1].node,
				InsteadofTkn:  yyDollar[2].token,
				Insteadof:     yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2554
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2560
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2570
		{
			yyVAL.node = &ast.StmtTraitMethodRef{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				Method: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2585
		{
			yyVAL.node = yyDollar[1].node
		}
	case 191:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2592
		{
			yyVAL.node = &ast.StmtTraitMethodRef{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 192:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:2612
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Ref:      yyDollar[1].node,
				AsTkn:    yyDollar[2].token,
				Modifier: yyDollar[3].node,
				Alias: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 193:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2630
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Ref:      yyDollar[1].node,
				AsTkn:    yyDollar[2].token,
				Modifier: yyDollar[3].node,
			}
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2644
		{
			yyVAL.node = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2648
		{
			yyVAL.node = yyDollar[1].node
		}
	case 196:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2655
		{
			yyVAL.node = &ast.StmtNop{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 197:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2664
		{
			yyVAL.node = &ast.StmtStmtList{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenCurlyBracket:  yyDollar[1].token,
				Stmts:             yyDollar[2].list,
				CloseCurlyBracket: yyDollar[3].token,
			}
		}
	case 198:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2678
		{
			yyVAL.list = yyDollar[1].list
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2682
		{
			yyVAL.list = []ast.Vertex{
				&ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 200:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2697
		{
			yyVAL.list = nil
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2701
		{
			yyVAL.list = yyDollar[1].list
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2708
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 203:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2712
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2719
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 205:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2729
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 206:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2739
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2749
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 208:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2759
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 209:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2769
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 210:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2782
		{
			item := &ast.StmtProperty{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[3].token),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[3].token),
						},
						IdentifierTkn: yyDollar[3].token,
						Value:         yyDollar[3].token.Value,
					},
				},
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, item)

			yyVAL.node = yyDollar[1].node
		}
	case 211:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:2807
		{
			item := &ast.StmtProperty{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[3].token),
						},
						IdentifierTkn: yyDollar[3].token,
						Value:         yyDollar[3].token.Value,
					},
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, item)

			yyVAL.node = yyDollar[1].node
		}
	case 212:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2834
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.StmtProperty{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						Var: &ast.ExprVariable{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							VarName: &ast.Identifier{
								Node: ast.Node{
									Position: position.NewTokenPosition(yyDollar[1].token),
								},
								IdentifierTkn: yyDollar[1].token,
								Value:         yyDollar[1].token.Value,
							},
						},
						Expr: nil,
					},
				},
			}
		}
	case 213:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2859
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.StmtProperty{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
						},
						Var: &ast.ExprVariable{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							VarName: &ast.Identifier{
								Node: ast.Node{
									Position: position.NewTokenPosition(yyDollar[1].token),
								},
								IdentifierTkn: yyDollar[1].token,
								Value:         yyDollar[1].token.Value,
							},
						},
						EqualTkn: yyDollar[2].token,
						Expr:     yyDollar[3].node,
					},
				},
			}
		}
	case 214:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:2888
		{
			constList := yyDollar[1].node.(*ast.StmtClassConstList)
			constList.Node.Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)
			lastNode(yyVAL.node.(*ast.StmtClassConstList).Consts).(*ast.StmtConstant).CommaTkn = yyDollar[2].token
			constList.Consts = append(constList.Consts, &ast.StmtConstant{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[5].node),
				},
				Name: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			})

			yyVAL.node = yyDollar[1].node
		}
	case 215:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:2910
		{
			yyVAL.node = &ast.StmtClassConstList{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				},
				ConstTkn: yyDollar[1].token,
				Consts: []ast.Vertex{
					&ast.StmtConstant{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[2].token, yyDollar[4].node),
						},
						Name: &ast.Identifier{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[2].token),
							},
							IdentifierTkn: yyDollar[2].token,
							Value:         yyDollar[2].token.Value,
						},
						EqualTkn: yyDollar[3].token,
						Expr:     yyDollar[4].node,
					},
				},
			}
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2938
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 217:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2945
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 218:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:2955
		{
			yyVAL.node = &ast.ParserSeparatedList{}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2959
		{
			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:2966
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2973
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:2982
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:2986
		{
			yyVAL.list = yyDollar[1].list
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:2993
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 225:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3007
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[1].token,
				Dim:             yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}

			yyVAL.list = []ast.Vertex{fetch}
		}
	case 226:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3024
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3028
		{
			yyVAL.list = yyDollar[1].list
		}
	case 228:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3032
		{
			yyVAL.list = yyDollar[1].list
		}
	case 229:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:3039
		{
			yyVAL.list = nil
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3043
		{
			yyVAL.list = yyDollar[1].list
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3050
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					},
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ast.ArgumentList).OpenParenthesisTkn,
					Arguments:           yyDollar[3].node.(*ast.ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ast.ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ast.ArgumentList).OpenParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					},
					Class: yyDollar[2].node,
				}
			}
		}
	case 232:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:3076
		{
			yyVAL.node = &ast.ExprAssign{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				},
				Var: &ast.ExprList{
					Node: ast.Node{
						Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					},
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ast.ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 233:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3096
		{
			yyVAL.node = &ast.ExprAssign{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 234:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3107
		{
			yyVAL.node = &ast.ExprAssignReference{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 235:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:3119
		{
			var _new *ast.ExprNew
			if yyDollar[3].token != nil {
				_new = &ast.ExprNew{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node),
					},
					NewTkn:              yyDollar[4].token,
					Class:               yyDollar[5].node,
					OpenParenthesisTkn:  yyDollar[6].node.(*ast.ArgumentList).OpenParenthesisTkn,
					Arguments:           yyDollar[6].node.(*ast.ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[6].node.(*ast.ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[6].node.(*ast.ArgumentList).OpenParenthesisTkn,
				}
			} else {
				_new = &ast.ExprNew{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[4].token, yyDollar[5].node),
					},
					NewTkn: yyDollar[4].token,
					Class:  yyDollar[5].node,
				}
			}

			yyVAL.node = &ast.ExprAssignReference{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, _new),
				},
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         _new,
			}
		}
	case 236:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3154
		{
			yyVAL.node = &ast.ExprClone{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3164
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 238:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3175
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 239:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3186
		{
			yyVAL.node = &ast.ExprAssignMul{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3197
		{
			yyVAL.node = &ast.ExprAssignPow{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 241:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3208
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 242:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3219
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3230
		{
			yyVAL.node = &ast.ExprAssignMod{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 244:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3241
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3252
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3263
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 247:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3274
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3285
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 249:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3296
		{
			yyVAL.node = &ast.ExprPostInc{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				},
				Var:    yyDollar[1].node,
				IncTkn: yyDollar[2].token,
			}
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3306
		{
			yyVAL.node = &ast.ExprPreInc{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				IncTkn: yyDollar[1].token,
				Var:    yyDollar[2].node,
			}
		}
	case 251:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3316
		{
			yyVAL.node = &ast.ExprPostDec{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				},
				Var:    yyDollar[1].node,
				DecTkn: yyDollar[2].token,
			}
		}
	case 252:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3326
		{
			yyVAL.node = &ast.ExprPreDec{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				DecTkn: yyDollar[1].token,
				Var:    yyDollar[2].node,
			}
		}
	case 253:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3336
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 254:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3347
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 255:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3358
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3369
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3380
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3391
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 259:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3402
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3413
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 261:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3424
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 262:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3435
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3446
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 264:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3457
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3468
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 266:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3479
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 267:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3490
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 268:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3501
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3512
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 270:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3523
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				PlusTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3533
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 272:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3543
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 273:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3553
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3563
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3574
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3585
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 277:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3596
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3607
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 279:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3618
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 280:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3629
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 281:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3640
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3651
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3662
		{
			yyVAL.node = yyDollar[1].node
		}
	case 284:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3666
		{
			yyVAL.node = yyDollar[1].node
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3670
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *ast.ExprFunctionCall:
					nn.Function = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
				}
			}
		}
	case 286:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:3705
		{
			yyVAL.node = &ast.ExprTernary{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				},
				Condition:   yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 287:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3718
		{
			yyVAL.node = &ast.ExprTernary{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Condition:   yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3730
		{
			yyVAL.node = yyDollar[1].node
		}
	case 289:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3734
		{
			yyVAL.node = &ast.ExprCastInt{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 290:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3744
		{
			yyVAL.node = &ast.ExprCastDouble{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3754
		{
			yyVAL.node = &ast.ExprCastString{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 292:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3764
		{
			yyVAL.node = &ast.ExprCastArray{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 293:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3774
		{
			yyVAL.node = &ast.ExprCastObject{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 294:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3784
		{
			yyVAL.node = &ast.ExprCastBool{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3794
		{
			yyVAL.node = &ast.ExprCastUnset{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				CastTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 296:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3804
		{
			exit := &ast.ExprExit{
				DieTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Node.Position = position.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Node.Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).OpenBracketTkn
				exit.Expr = yyDollar[2].node.(*ast.ParserBrackets).Child
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ParserBrackets).CloseBracketTkn
			}

			yyVAL.node = exit
		}
	case 297:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3821
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				AtTkn: yyDollar[1].token,
				Expr:  yyDollar[2].node,
			}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3831
		{
			yyVAL.node = yyDollar[1].node
		}
	case 299:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3835
		{
			yyVAL.node = yyDollar[1].node
		}
	case 300:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3839
		{
			yyVAL.node = yyDollar[1].node
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:3843
		{
			yyVAL.node = &ast.ExprShellExec{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 302:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3854
		{
			yyVAL.node = &ast.ExprPrint{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 303:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:3864
		{
			yyVAL.node = &ast.ExprYield{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				YieldTkn: yyDollar[1].token,
			}
		}
	case 304:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php5/php5.y:3873
		{
			yyVAL.node = &ast.ExprClosure{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[9].token),
				},
				FunctionTkn:          yyDollar[1].token,
				AmpersandTkn:         yyDollar[2].token,
				OpenParenthesisTkn:   yyDollar[3].token,
				Params:               yyDollar[4].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[4].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[5].token,
				ClosureUse:           yyDollar[6].ClosureUse,
				OpenCurlyBracketTkn:  yyDollar[7].token,
				Stmts:                yyDollar[8].list,
				CloseCurlyBracketTkn: yyDollar[9].token,
			}
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php5/php5.y:3891
		{
			yyVAL.node = &ast.ExprClosure{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[10].token),
				},
				StaticTkn:            yyDollar[1].token,
				FunctionTkn:          yyDollar[2].token,
				AmpersandTkn:         yyDollar[3].token,
				OpenParenthesisTkn:   yyDollar[4].token,
				Params:               yyDollar[5].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:        yyDollar[5].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn:  yyDollar[6].token,
				ClosureUse:           yyDollar[7].ClosureUse,
				OpenCurlyBracketTkn:  yyDollar[8].token,
				Stmts:                yyDollar[9].list,
				CloseCurlyBracketTkn: yyDollar[10].token,
			}
		}
	case 306:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3913
		{
			yyVAL.node = &ast.ExprYield{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				YieldTkn: yyDollar[1].token,
				Value:    yyDollar[2].node,
			}
		}
	case 307:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:3923
		{
			yyVAL.node = &ast.ExprYield{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				YieldTkn: yyDollar[1].token,
				Value:    yyDollar[2].node,
			}
		}
	case 308:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3933
		{
			yyVAL.node = &ast.ExprYield{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				},
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Value:          yyDollar[4].node,
			}
		}
	case 309:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3945
		{
			yyVAL.node = &ast.ExprYield{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				},
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Value:          yyDollar[4].node,
			}
		}
	case 310:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3960
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 311:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3972
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 312:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:3984
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Var: &ast.ScalarString{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 313:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4002
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 314:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4017
		{
			yyVAL.node = &ast.ExprArray{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 315:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4030
		{
			yyVAL.node = &ast.ExprArray{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 316:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4045
		{
			yyVAL.token = yyDollar[1].token
		}
	case 317:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:4052
		{
			yyVAL.ClosureUse = nil
		}
	case 318:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4056
		{
			yyVAL.ClosureUse = &ast.ExprClosureUse{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				UseTkn:              yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Uses:                yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4072
		{
			variable := &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[3].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, variable)

			yyVAL.node = yyDollar[1].node
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4092
		{
			reference := &ast.ExprReference{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[3].token, yyDollar[4].token),
				},
				AmpersandTkn: yyDollar[3].token,
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[4].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[4].token),
						},
						IdentifierTkn: yyDollar[4].token,
						Value:         yyDollar[4].token.Value,
					},
				},
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, reference)

			yyVAL.node = yyDollar[1].node
		}
	case 321:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4118
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprVariable{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						VarName: &ast.Identifier{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[1].token),
							},
							IdentifierTkn: yyDollar[1].token,
							Value:         yyDollar[1].token.Value,
						},
					},
				},
			}
		}
	case 322:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4137
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprReference{
						Node: ast.Node{
							Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
						},
						AmpersandTkn: yyDollar[1].token,
						Var: &ast.ExprVariable{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[2].token),
							},
							VarName: &ast.Identifier{
								Node: ast.Node{
									Position: position.NewTokenPosition(yyDollar[2].token),
								},
								IdentifierTkn: yyDollar[2].token,
								Value:         yyDollar[2].token.Value,
							},
						},
					},
				},
			}
		}
	case 323:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4165
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Node: ast.Node{
					Position: position.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node),
				},
				Function: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
				OpenParenthesisTkn:  yyDollar[2].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[2].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 324:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4183
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				},
				Function: &ast.NameRelative{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
					},
					NsTkn:          yyDollar[1].token,
					NsSeparatorTkn: yyDollar[2].token,
					Parts:          yyDollar[3].list,
				},
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[4].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4203
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				},
				Function: &ast.NameFullyQualified{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
					},
					NsSeparatorTkn: yyDollar[1].token,
					Parts:          yyDollar[2].list,
				},
				OpenParenthesisTkn:  yyDollar[3].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[3].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[3].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[3].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 326:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4222
		{
			yyVAL.node = &ast.ExprStaticCall{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[4].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 327:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4237
		{
			yyVAL.node = &ast.ExprStaticCall{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[4].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 328:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4252
		{
			yyVAL.node = &ast.ExprStaticCall{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[4].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 329:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4267
		{
			yyVAL.node = &ast.ExprStaticCall{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[4].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 330:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4282
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				},
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[2].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[2].node.(*ast.ArgumentList).OpenParenthesisTkn,
			}
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4298
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 332:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4308
		{
			yyVAL.node = &ast.NameName{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Parts: yyDollar[1].list,
			}
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4317
		{
			yyVAL.node = &ast.NameRelative{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
				},
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].list,
			}
		}
	case 334:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4328
		{
			yyVAL.node = &ast.NameFullyQualified{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].list,
			}
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4341
		{
			yyVAL.node = &ast.NameName{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Parts: yyDollar[1].list,
			}
		}
	case 336:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4350
		{
			yyVAL.node = &ast.NameRelative{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
				},
				NsTkn:          yyDollar[1].token,
				NsSeparatorTkn: yyDollar[2].token,
				Parts:          yyDollar[3].list,
			}
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4361
		{
			yyVAL.node = &ast.NameFullyQualified{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				NsSeparatorTkn: yyDollar[1].token,
				Parts:          yyDollar[2].list,
			}
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4374
		{
			yyVAL.node = yyDollar[1].node
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4378
		{
			yyVAL.node = yyDollar[1].node
		}
	case 340:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4385
		{
			yyVAL.node = yyDollar[1].node

			yyDollar[3].list[0].(*ast.ExprPropertyFetch).ObjectOperatorTkn = yyDollar[2].token

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[4].list {
				switch nn := n.(type) {
				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					yyVAL.node.GetNode().Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
				}
			}
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4419
		{
			yyVAL.node = yyDollar[1].node
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4427
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 343:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:4431
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 344:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4439
		{
			yyDollar[2].list[0].(*ast.ExprPropertyFetch).ObjectOperatorTkn = yyDollar[1].token

			yyVAL.list = yyDollar[2].list
		}
	case 345:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:4448
		{
			yyVAL.node = nil
		}
	case 346:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4452
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				CloseBracketTkn: yyDollar[2].token,
			}
		}
	case 347:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4462
		{
			yyVAL.node = yyDollar[1].node
		}
	case 348:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:4469
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4473
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4485
		{
			yyVAL.list = yyDollar[1].list
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:4492
		{
			yyVAL.node = nil
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4496
		{
			yyVAL.node = yyDollar[1].node
		}
	case 353:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4503
		{
			yyVAL.node = &ast.ScalarLnumber{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4513
		{
			yyVAL.node = &ast.ScalarDnumber{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 355:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4523
		{
			yyVAL.node = &ast.ScalarString{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 356:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4533
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 357:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4543
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 358:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4553
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 359:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4563
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4573
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 361:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4583
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 362:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4593
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 363:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4603
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[2].token),
						},
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 364:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4622
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				},
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4635
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				ConstantName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 366:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4655
		{
			yyVAL.node = yyDollar[1].node
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4662
		{
			yyVAL.node = yyDollar[1].node
		}
	case 368:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4666
		{
			yyVAL.node = yyDollar[1].node
		}
	case 369:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4670
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Const: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4684
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
				},
				Const: &ast.NameRelative{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
					},
					NsTkn:          yyDollar[1].token,
					NsSeparatorTkn: yyDollar[2].token,
					Parts:          yyDollar[3].list,
				},
			}
		}
	case 371:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4700
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				Const: &ast.NameFullyQualified{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
					},
					NsSeparatorTkn: yyDollar[1].token,
					Parts:          yyDollar[2].list,
				},
			}
		}
	case 372:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4715
		{
			yyVAL.node = &ast.ExprArray{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4728
		{
			yyVAL.node = &ast.ExprArray{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 374:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4740
		{
			yyVAL.node = yyDollar[1].node
		}
	case 375:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4744
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 376:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:4754
		{
			yyVAL.node = yyDollar[1].node
		}
	case 377:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:4761
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4773
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4784
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4795
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4806
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4817
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4828
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4839
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:4849
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4859
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 387:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4870
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4881
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 389:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4892
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4903
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4914
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4925
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4936
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4947
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4958
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4969
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4980
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:4991
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5002
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5013
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5024
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5035
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5046
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5057
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Left:  yyDollar[1].node,
				OpTkn: yyDollar[2].token,
				Right: yyDollar[3].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5068
		{
			yyVAL.node = &ast.ExprTernary{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				},
				Condition:   yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:5080
		{
			yyVAL.node = &ast.ExprTernary{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				},
				Condition:   yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5093
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				PlusTkn: yyDollar[1].token,
				Expr:    yyDollar[2].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5103
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5113
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5127
		{
			yyVAL.node = yyDollar[1].node
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5131
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewNodeListPosition(yyDollar[1].list),
				},
				Const: &ast.NameName{
					Node: ast.Node{
						Position: position.NewNodeListPosition(yyDollar[1].list),
					},
					Parts: yyDollar[1].list,
				},
			}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5145
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
				},
				Const: &ast.NameRelative{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list),
					},
					NsTkn:          yyDollar[1].token,
					NsSeparatorTkn: yyDollar[2].token,
					Parts:          yyDollar[3].list,
				},
			}
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5161
		{
			yyVAL.node = &ast.ExprConstFetch{
				Node: ast.Node{
					Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
				},
				Const: &ast.NameFullyQualified{
					Node: ast.Node{
						Position: position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list),
					},
					NsSeparatorTkn: yyDollar[1].token,
					Parts:          yyDollar[2].list,
				},
			}
		}
	case 414:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5179
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 415:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5194
		{
			yyVAL.node = yyDollar[1].node
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5198
		{
			yyVAL.node = yyDollar[1].node
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5202
		{
			yyVAL.node = yyDollar[1].node
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5206
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenQoteTkn:  yyDollar[1].token,
				Parts:        yyDollar[2].list,
				CloseQoteTkn: yyDollar[1].token,
			}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5217
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 420:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5228
		{
			yyVAL.node = &ast.ScalarMagicConstant{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				MagicConstTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 421:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5241
		{
			yyVAL.node = &ast.ParserSeparatedList{}
		}
	case 422:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5245
		{
			if yyDollar[2].token != nil {
				yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
				yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, &ast.ExprArrayItem{})
			}

			yyVAL.node = yyDollar[1].node
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5257
		{
			yyVAL.token = nil
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5261
		{
			yyVAL.token = yyDollar[1].token
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:5268
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[3].node, yyDollar[5].node),
				},
				Key:            yyDollar[3].node,
				DoubleArrowTkn: yyDollar[4].token,
				Val:            yyDollar[5].node,
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 426:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5284
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[3].node),
				},
				Val: yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5298
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
						},
						Key:            yyDollar[1].node,
						DoubleArrowTkn: yyDollar[2].token,
						Val:            yyDollar[3].node,
					},
				},
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5313
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewNodePosition(yyDollar[1].node),
						},
						Val: yyDollar[1].node,
					},
				},
			}
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5329
		{
			yyVAL.node = yyDollar[1].node
		}
	case 430:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5333
		{
			yyVAL.node = yyDollar[1].node
		}
	case 431:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5340
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 432:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5351
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 433:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5366
		{
			yyVAL.node = yyDollar[1].node
		}
	case 434:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5374
		{
			yyVAL.node = yyDollar[1].node
		}
	case 435:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5381
		{
			yyVAL.node = yyDollar[1].node
		}
	case 436:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:5388
		{
			yyVAL.node = yyDollar[1].node

			yyDollar[3].list[0].(*ast.ExprPropertyFetch).ObjectOperatorTkn = yyDollar[2].token

			if yyDollar[4].list != nil {
				last := yyDollar[3].list[len(yyDollar[3].list)-1]
				switch l := last.(type) {
				case *ast.ExprArrayDimFetch:
					mc := yyDollar[4].list[0].(*ast.ExprMethodCall)
					yyDollar[3].list = append(yyDollar[3].list, &ast.ExprFunctionCall{
						Node: ast.Node{
							Position: position.NewNodePosition(mc),
						},
						OpenParenthesisTkn:  mc.OpenParenthesisTkn,
						Arguments:           mc.Arguments,
						SeparatorTkns:       mc.SeparatorTkns,
						CloseParenthesisTkn: mc.OpenParenthesisTkn,
					},
					)
					yyDollar[3].list = append(yyDollar[3].list, yyDollar[4].list[1:len(yyDollar[4].list)]...)
				case *ast.ExprPropertyFetch:
					yyDollar[4].list[0].(*ast.ExprMethodCall).Method = l.Property
					yyDollar[4].list[0].(*ast.ExprMethodCall).ObjectOperatorTkn = l.ObjectOperatorTkn
					yyDollar[3].list = append(yyDollar[3].list[:len(yyDollar[3].list)-1], yyDollar[4].list...)
				}
			}

			for _, n := range yyDollar[3].list {
				switch nn := n.(type) {
				case *ast.ExprFunctionCall:
					nn.Function = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
				}
			}

			for _, n := range yyDollar[5].list {
				switch nn := n.(type) {
				case *ast.ExprFunctionCall:
					nn.Function = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprArrayDimFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprPropertyFetch:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn

				case *ast.ExprMethodCall:
					nn.Var = yyVAL.node
					nn.Node.Position = position.NewNodesPosition(yyVAL.node, nn)
					yyVAL.node = nn
				}
			}
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5465
		{
			yyVAL.node = yyDollar[1].node
		}
	case 438:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5472
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].list...)
		}
	case 439:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5476
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5484
		{
			println("FOOFOOFOOFOOFOOFOOFOOFOOFOO")
			yyDollar[2].list[0].(*ast.ExprPropertyFetch).ObjectOperatorTkn = yyDollar[1].token

			if yyDollar[3].list != nil {
				last := yyDollar[2].list[len(yyDollar[2].list)-1]
				switch l := last.(type) {
				case *ast.ExprArrayDimFetch:
					mc := yyDollar[3].list[0].(*ast.ExprMethodCall)
					yyDollar[2].list = append(yyDollar[2].list, &ast.ExprFunctionCall{
						Node: ast.Node{
							Position: position.NewNodePosition(mc),
						},
						OpenParenthesisTkn:  mc.OpenParenthesisTkn,
						Arguments:           mc.Arguments,
						SeparatorTkns:       mc.SeparatorTkns,
						CloseParenthesisTkn: mc.OpenParenthesisTkn,
					},
					)
					yyDollar[2].list = append(yyDollar[2].list, yyDollar[3].list[1:len(yyDollar[3].list)]...)
				case *ast.ExprPropertyFetch:
					yyDollar[3].list[0].(*ast.ExprMethodCall).Method = l.Property
					yyDollar[3].list[0].(*ast.ExprMethodCall).ObjectOperatorTkn = l.ObjectOperatorTkn
					yyDollar[2].list = append(yyDollar[2].list[:len(yyDollar[2].list)-1], yyDollar[3].list...)
				}
			}

			yyVAL.list = yyDollar[2].list
		}
	case 441:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5516
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5530
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}

			yyVAL.list = []ast.Vertex{yyDollar[1].node, fetch}
		}
	case 443:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5547
		{
			yyVAL.node = &ast.ExprMethodCall{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				OpenParenthesisTkn:  yyDollar[1].node.(*ast.ArgumentList).OpenParenthesisTkn,
				Arguments:           yyDollar[1].node.(*ast.ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[1].node.(*ast.ArgumentList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[1].node.(*ast.ArgumentList).CloseParenthesisTkn,
			}
		}
	case 444:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5562
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 445:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5566
		{
			yyVAL.list = yyDollar[1].list
		}
	case 446:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5570
		{
			yyVAL.list = nil
		}
	case 447:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5577
		{
			yyVAL.node = yyDollar[1].node
		}
	case 448:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5581
		{
			for i := len(yyDollar[1].list) - 1; i >= 0; i-- {
				yyDollar[1].list[i].(*ast.ExprVariable).VarName = yyDollar[2].node
				yyDollar[1].list[i].(*ast.ExprVariable).Node.Position = position.NewNodesPosition(yyDollar[1].list[i], yyDollar[2].node)
				yyDollar[2].node = yyDollar[1].list[i]
			}

			yyVAL.node = yyDollar[1].list[0]
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5594
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Property:       yyDollar[3].node,
			}
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5605
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Property:       yyDollar[3].node,
			}
		}
	case 451:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5619
		{
			yyVAL.node = yyDollar[1].node
		}
	case 452:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5626
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 453:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5638
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5653
		{
			yyVAL.node = yyDollar[1].node
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5657
		{
			yyVAL.node = yyDollar[1].node
		}
	case 456:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5661
		{
			yyVAL.node = yyDollar[1].node
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5669
		{
			yyVAL.node = yyDollar[1].node
		}
	case 458:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5673
		{
			for i := len(yyDollar[1].list) - 1; i >= 0; i-- {
				yyDollar[1].list[i].(*ast.ExprVariable).VarName = yyDollar[2].node
				yyDollar[1].list[i].(*ast.ExprVariable).Node.Position = position.NewNodesPosition(yyDollar[1].list[i], yyDollar[2].node)
				yyDollar[2].node = yyDollar[1].list[i]
			}

			yyVAL.node = yyDollar[1].list[0]
		}
	case 459:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5683
		{
			yyVAL.node = yyDollar[1].node
		}
	case 460:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5690
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5702
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				},
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5714
		{
			yyVAL.node = yyDollar[1].node
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5722
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 464:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5737
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				DollarTkn: yyDollar[1].token,
				VarName: &ast.ParserBrackets{
					Node: ast.Node{
						Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
					},
					OpenBracketTkn:  yyDollar[2].token,
					Child:           yyDollar[3].node,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 465:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5757
		{
			yyVAL.node = nil
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5761
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5769
		{
			yyVAL.list = yyDollar[1].list
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5773
		{
			yyVAL.list = []ast.Vertex{
				&ast.ExprPropertyFetch{
					Node: ast.Node{
						Position: position.NewNodePosition(yyDollar[1].node),
					},
					Property: yyDollar[1].node,
				},
			}
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5787
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 470:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5801
		{
			fetch := &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token),
				},
				Var:             nil,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}

			yyVAL.list = append(yyDollar[1].list, fetch)
		}
	case 471:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5815
		{
			yyVAL.list = []ast.Vertex{
				&ast.ExprPropertyFetch{
					Node: ast.Node{
						Position: position.NewNodePosition(yyDollar[1].node),
					},
					Property: yyDollar[1].node,
				},
			}
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5829
		{
			yyVAL.node = &ast.Identifier{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				IdentifierTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 473:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5839
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5853
		{
			yyVAL.list = []ast.Vertex{
				&ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					DollarTkn: yyDollar[1].token,
				},
			}
		}
	case 475:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5864
		{
			yyVAL.list = append(yyDollar[1].list, &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[2].token),
				},
				DollarTkn: yyDollar[2].token,
			})
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5876
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5883
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 478:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5893
		{
			yyVAL.node = &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[1].node),
				},
				Val: yyDollar[1].node,
			}
		}
	case 479:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:5902
		{
			pairList := yyDollar[3].node.(*ast.ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Val: &ast.ExprList{
					Node: ast.Node{
						Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					},
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ast.ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 480:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5927
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 481:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php5/php5.y:5935
		{
			yyVAL.node = &ast.ParserSeparatedList{}
		}
	case 482:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:5939
		{
			if yyDollar[2].token != nil {
				yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
				yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, &ast.ExprArrayItem{})
			}

			yyVAL.node = yyDollar[1].node
		}
	case 483:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php5/php5.y:5951
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[3].node, yyDollar[5].node),
				},
				Key:            yyDollar[3].node,
				DoubleArrowTkn: yyDollar[4].token,
				Val:            yyDollar[5].node,
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 484:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5967
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodePosition(yyDollar[3].node),
				},
				Val: yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:5981
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
						},
						Key:            yyDollar[1].node,
						DoubleArrowTkn: yyDollar[2].token,
						Val:            yyDollar[3].node,
					},
				},
			}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:5996
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewNodePosition(yyDollar[1].node),
						},
						Val: yyDollar[1].node,
					},
				},
			}
		}
	case 487:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:6009
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewNodesPosition(yyDollar[3].node, yyDollar[6].node),
				},
				Key:            yyDollar[3].node,
				DoubleArrowTkn: yyDollar[4].token,
				Val: &ast.ExprReference{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[5].token, yyDollar[6].node),
					},
					AmpersandTkn: yyDollar[5].token,
					Var:          yyDollar[6].node,
				},
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 488:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6031
		{
			arrayItem := &ast.ExprArrayItem{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node),
				},
				Val: &ast.ExprReference{
					Node: ast.Node{
						Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node),
					},
					AmpersandTkn: yyDollar[3].token,
					Var:          yyDollar[4].node,
				},
			}

			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, arrayItem)

			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6051
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
						},
						Key:            yyDollar[1].node,
						DoubleArrowTkn: yyDollar[2].token,
						Val: &ast.ExprReference{
							Node: ast.Node{
								Position: position.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node),
							},
							AmpersandTkn: yyDollar[3].token,
							Var:          yyDollar[4].node,
						},
					},
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6072
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{
					&ast.ExprArrayItem{
						Node: ast.Node{
							Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
						},
						Val: &ast.ExprReference{
							Node: ast.Node{
								Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
							},
							AmpersandTkn: yyDollar[1].token,
							Var:          yyDollar[2].node,
						},
					},
				},
			}
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6094
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 492:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6098
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6111
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 494:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6115
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6131
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 496:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6146
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 497:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6169
		{
			yyVAL.node = &ast.ExprPropertyFetch{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				Var: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[1].token),
						},
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				ObjectOperatorTkn: yyDollar[2].token,
				Property: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 498:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6197
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn: yyDollar[1].token,
				Child: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewNodePosition(yyDollar[2].node),
					},
					VarName: yyDollar[2].node,
				},
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 499:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6213
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn: yyDollar[1].token,
				Child: &ast.ExprVariable{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[2].token),
					},
					VarName: &ast.Identifier{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[2].token),
						},
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 500:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php5/php5.y:6235
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[6].token),
				},
				OpenBracketTkn: yyDollar[1].token,
				Child: &ast.ExprArrayDimFetch{
					Node: ast.Node{
						Position: position.NewTokensPosition(yyDollar[2].token, yyDollar[5].token),
					},
					Var: &ast.ExprVariable{
						Node: ast.Node{
							Position: position.NewTokenPosition(yyDollar[2].token),
						},
						VarName: &ast.Identifier{
							Node: ast.Node{
								Position: position.NewTokenPosition(yyDollar[2].token),
							},
							IdentifierTkn: yyDollar[2].token,
							Value:         yyDollar[2].token.Value,
						},
					},
					OpenBracketTkn:  yyDollar[3].token,
					Dim:             yyDollar[4].node,
					CloseBracketTkn: yyDollar[5].token,
				},
				CloseBracketTkn: yyDollar[6].token,
			}
		}
	case 501:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6265
		{
			yyVAL.node = &ast.ParserBrackets{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				},
				OpenBracketTkn:  yyDollar[1].token,
				Child:           yyDollar[2].node,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6279
		{
			yyVAL.node = &ast.ScalarString{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6289
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 504:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6310
		{
			yyVAL.node = &ast.ExprVariable{
				Node: ast.Node{
					Position: position.NewTokenPosition(yyDollar[1].token),
				},
				VarName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[1].token),
					},
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 505:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6328
		{
			yyVAL.node = &ast.ExprIsset{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ast.ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ast.ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 506:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6341
		{
			yyVAL.node = &ast.ExprEmpty{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 507:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6353
		{
			yyVAL.node = &ast.ExprEmpty{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 508:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6365
		{
			yyVAL.node = &ast.ExprInclude{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 509:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6375
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 510:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php5/php5.y:6385
		{
			yyVAL.node = &ast.ExprEval{
				Node: ast.Node{
					Position: position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				},
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 511:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6397
		{
			yyVAL.node = &ast.ExprRequire{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 512:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php5/php5.y:6407
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Node: ast.Node{
					Position: position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				},
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 513:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6420
		{
			yyVAL.node = &ast.ParserSeparatedList{
				Items: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 514:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6426
		{
			yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns = append(yyDollar[1].node.(*ast.ParserSeparatedList).SeparatorTkns, yyDollar[2].token)
			yyDollar[1].node.(*ast.ParserSeparatedList).Items = append(yyDollar[1].node.(*ast.ParserSeparatedList).Items, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 515:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6436
		{
			yyVAL.node = yyDollar[1].node
		}
	case 516:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php5/php5.y:6440
		{
			yyVAL.node = yyDollar[1].node
		}
	case 517:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6447
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				ConstantName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 518:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6464
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				ConstantName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 519:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6484
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				ConstantName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php5/php5.y:6504
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Node: ast.Node{
					Position: position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				},
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				ConstantName: &ast.Identifier{
					Node: ast.Node{
						Position: position.NewTokenPosition(yyDollar[3].token),
					},
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	}
	goto yystack /* stack new state and value */
}

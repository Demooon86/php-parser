// Code generated by goyacc -o internal/php7/php7.go internal/php7/php7.y. DO NOT EDIT.

// line internal/php7/php7.y:2
package php7

import __yyfmt__ "fmt"

// line internal/php7/php7.y:2

import (
	"bytes"
	"strconv"

	"github.com/z7zmey/php-parser/internal/position"
	"github.com/z7zmey/php-parser/internal/scanner"
	"github.com/z7zmey/php-parser/pkg/ast"
	"github.com/z7zmey/php-parser/pkg/token"
)

// line internal/php7/php7.y:16
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *scanner.Token
	list  []ast.Vertex

	ClassExtends     *ast.StmtClassExtends
	ClassImplements  *ast.StmtClassImplements
	InterfaceExtends *ast.StmtInterfaceExtends
	ClosureUse       *ast.ExprClosureUse
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}
var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php7/php7.y:5644

// line yacctab:1
var yyExca = [...]int{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	-2, 0,
	-1, 44,
	58, 426,
	79, 426,
	144, 426,
	150, 426,
	-2, 421,
	-1, 48,
	148, 429,
	-2, 438,
	-1, 85,
	58, 428,
	79, 428,
	144, 428,
	148, 431,
	150, 428,
	-2, 416,
	-1, 109,
	79, 389,
	-2, 418,
	-1, 233,
	58, 426,
	79, 426,
	144, 426,
	150, 426,
	-2, 315,
	-1, 236,
	148, 431,
	-2, 428,
	-1, 239,
	58, 426,
	79, 426,
	144, 426,
	150, 426,
	-2, 317,
	-1, 358,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 339,
	-1, 359,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 340,
	-1, 360,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 341,
	-1, 361,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 342,
	-1, 362,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 343,
	-1, 363,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 344,
	-1, 364,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 345,
	-1, 365,
	140, 0,
	141, 0,
	167, 0,
	168, 0,
	-2, 346,
	-1, 366,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 347,
	-1, 373,
	149, 164,
	160, 164,
	-2, 426,
	-1, 418,
	149, 466,
	151, 466,
	160, 466,
	-2, 426,
	-1, 423,
	58, 427,
	79, 427,
	144, 427,
	148, 430,
	150, 427,
	-2, 349,
	-1, 437,
	148, 452,
	-2, 419,
	-1, 438,
	148, 454,
	-2, 444,
	-1, 518,
	148, 452,
	-2, 420,
	-1, 519,
	148, 454,
	-2, 445,
	-1, 536,
	149, 214,
	-2, 219,
	-1, 578,
	149, 214,
	-2, 219,
	-1, 603,
	148, 430,
	-2, 427,
	-1, 669,
	149, 184,
	-2, 426,
	-1, 677,
	149, 214,
	-2, 219,
	-1, 693,
	149, 465,
	151, 465,
	160, 465,
	-2, 426,
	-1, 730,
	149, 185,
	-2, 426,
	-1, 746,
	37, 269,
	39, 269,
	-2, 266,
	-1, 760,
	94, 209,
	95, 209,
	96, 209,
	-2, 0,
	-1, 789,
	149, 184,
	-2, 426,
	-1, 791,
	149, 187,
	-2, 400,
	-1, 806,
	94, 210,
	95, 210,
	96, 210,
	-2, 0,
	-1, 856,
	31, 200,
	32, 200,
	33, 200,
	145, 200,
	-2, 0,
	-1, 888,
	29, 77,
	-2, 81,
	-1, 893,
	31, 199,
	32, 199,
	33, 199,
	145, 199,
	-2, 0,
	-1, 921,
	149, 214,
	-2, 219,
}

const yyPrivate = 57344

const yyLast = 7766

var yyAct = [...]int{

	28, 132, 765, 631, 843, 880, 866, 585, 442, 748,
	842, 109, 785, 820, 191, 839, 635, 682, 113, 634,
	668, 128, 140, 140, 140, 712, 650, 153, 380, 572,
	117, 123, 633, 649, 224, 188, 327, 580, 540, 529,
	636, 410, 372, 521, 318, 723, 226, 5, 322, 81,
	382, 9, 321, 228, 232, 8, 85, 240, 241, 242,
	243, 244, 152, 134, 245, 246, 247, 248, 249, 250,
	251, 320, 254, 149, 7, 262, 263, 264, 319, 145,
	2, 6, 130, 127, 139, 520, 436, 268, 129, 876,
	277, 278, 873, 280, 281, 850, 691, 597, 273, 258,
	83, 860, 338, 314, 234, 234, 899, 142, 143, 874,
	870, 236, 236, 847, 411, 846, 107, 900, 549, 575,
	684, 287, 339, 875, 871, 771, 716, 336, 334, 684,
	313, 312, 307, 295, 324, 297, 340, 306, 329, 330,
	304, 337, 335, 310, 706, 313, 311, 643, 628, 573,
	326, 307, 564, 290, 292, 181, 341, 342, 343, 344,
	345, 346, 347, 348, 349, 350, 351, 352, 353, 354,
	355, 356, 357, 358, 359, 360, 361, 362, 363, 364,
	365, 366, 416, 368, 370, 192, 374, 270, 708, 376,
	44, 791, 222, 273, 119, 107, 107, 167, 700, 300,
	607, 696, 610, 608, 392, 394, 395, 396, 397, 398,
	399, 400, 401, 402, 403, 404, 405, 406, 165, 164,
	407, 140, 409, 181, 228, 384, 867, 107, 166, 168,
	169, 419, 617, 163, 234, 604, 421, 272, 613, 228,
	119, 236, 107, 614, 388, 233, 239, 592, 412, 415,
	861, 265, 932, 921, 140, 895, 430, 828, 414, 181,
	827, 431, 818, 108, 136, 167, 140, 114, 807, 367,
	795, 437, 518, 422, 80, 375, 530, 531, 221, 234,
	532, 835, 270, 237, 220, 525, 236, 738, 728, 537,
	710, 705, 541, 703, 228, 119, 166, 168, 169, 146,
	695, 167, 170, 171, 666, 408, 526, 655, 177, 179,
	136, 234, 645, 114, 605, 559, 596, 793, 236, 296,
	822, 821, 165, 164, 551, 731, 554, 311, 543, 237,
	694, 927, 166, 168, 169, 176, 178, 163, 424, 568,
	677, 153, 108, 108, 609, 5, 638, 639, 429, 9,
	435, 291, 663, 8, 517, 664, 426, 427, 527, 288,
	578, 274, 425, 910, 562, 136, 560, 868, 114, 536,
	571, 524, 7, 420, 108, 373, 389, 523, 294, 6,
	546, 387, 426, 289, 427, 427, 426, 293, 587, 108,
	588, 552, 279, 589, 590, 582, 558, 276, 586, 275,
	253, 223, 219, 569, 186, 185, 184, 138, 577, 137,
	133, 567, 115, 595, 584, 566, 766, 228, 599, 758,
	418, 228, 391, 157, 159, 158, 181, 936, 190, 935,
	909, 851, 579, 780, 781, 616, 894, 637, 857, 299,
	619, 298, 181, 780, 781, 829, 824, 817, 777, 759,
	183, 180, 433, 727, 594, 602, 274, 726, 724, 722,
	719, 563, 548, 598, 545, 390, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 378, 333, 332,
	618, 822, 821, 331, 167, 170, 171, 182, 161, 165,
	164, 301, 816, 119, 813, 808, 160, 413, 162, 166,
	168, 169, 176, 178, 163, 165, 164, 773, 615, 544,
	915, 544, 544, 217, 218, 166, 168, 169, 864, 863,
	163, 544, 809, 798, 140, 623, 204, 205, 206, 207,
	208, 209, 210, 211, 212, 213, 214, 215, 216, 794,
	740, 438, 519, 644, 683, 167, 823, 583, 640, 187,
	198, 199, 181, 257, 122, 77, 779, 193, 627, 769,
	116, 620, 119, 659, 329, 661, 116, 624, 309, 642,
	203, 665, 554, 294, 554, 311, 913, 651, 626, 309,
	309, 148, 678, 745, 522, 267, 747, 259, 654, 681,
	640, 5, 428, 586, 167, 9, 266, 119, 692, 8,
	660, 200, 202, 201, 78, 79, 657, 119, 622, 680,
	146, 309, 119, 638, 639, 698, 667, 679, 7, 849,
	674, 729, 294, 234, 234, 6, 581, 118, 259, 530,
	236, 236, 136, 648, 557, 114, 688, 752, 753, 754,
	751, 750, 749, 714, 541, 653, 647, 383, 309, 640,
	234, 386, 260, 261, 911, 555, 797, 236, 284, 285,
	720, 119, 735, 736, 702, 550, 554, 136, 704, 713,
	114, 554, 554, 228, 717, 651, 303, 733, 709, 715,
	553, 737, 711, 889, 802, 305, 801, 718, 125, 640,
	126, 760, 761, 260, 261, 228, 756, 148, 119, 119,
	107, 755, 308, 135, 106, 46, 112, 732, 739, 912,
	725, 752, 753, 754, 751, 750, 749, 535, 640, 259,
	234, 325, 697, 329, 428, 840, 125, 236, 126, 762,
	757, 764, 228, 554, 124, 554, 713, 901, 651, 767,
	772, 812, 770, 774, 194, 150, 259, 119, 775, 111,
	788, 428, 1, 803, 259, 640, 804, 586, 799, 778,
	806, 611, 652, 800, 373, 669, 790, 38, 136, 259,
	782, 114, 784, 786, 286, 121, 131, 259, 640, 234,
	556, 819, 282, 811, 260, 261, 236, 237, 150, 826,
	554, 693, 544, 814, 810, 381, 832, 621, 833, 834,
	413, 625, 815, 746, 379, 831, 825, 780, 781, 197,
	534, 260, 261, 135, 106, 196, 836, 844, 533, 260,
	261, 743, 856, 259, 783, 780, 781, 848, 256, 195,
	189, 744, 632, 855, 260, 261, 235, 539, 238, 225,
	859, 283, 260, 261, 528, 865, 371, 108, 879, 877,
	890, 891, 886, 147, 838, 144, 892, 893, 328, 885,
	151, 730, 841, 853, 676, 897, 898, 830, 255, 872,
	796, 385, 786, 896, 903, 656, 852, 905, 934, 662,
	845, 227, 43, 42, 886, 908, 904, 902, 260, 261,
	16, 885, 15, 606, 271, 49, 48, 110, 50, 84,
	82, 72, 252, 62, 269, 61, 906, 918, 884, 883,
	882, 881, 742, 45, 734, 673, 315, 928, 926, 922,
	789, 924, 925, 586, 120, 929, 302, 3, 441, 768,
	930, 707, 919, 640, 920, 933, 0, 4, 937, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 13, 23, 33, 0, 0, 34,
	12, 0, 24, 0, 29, 87, 88, 10, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 745, 0, 0, 747, 0, 0,
	104, 0, 0, 0, 0, 11, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 752, 753,
	754, 751, 750, 749, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	646, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 4, 0, 89, 90, 70,
	47, 94, 95, 36, 869, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 13, 23, 33, 0, 0, 34, 12, 0,
	24, 0, 29, 87, 88, 10, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 745, 0, 0, 747, 0, 0, 104, 0,
	0, 0, 0, 11, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 752, 753, 754, 751,
	750, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 547, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 4, 0, 89, 90, 70, 47, 94,
	95, 36, 837, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	13, 23, 33, 0, 0, 34, 12, 0, 24, 0,
	29, 87, 88, 10, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	745, 0, 0, 747, 0, 0, 104, 0, 0, 0,
	0, 11, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 752, 753, 754, 751, 750, 749,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 0, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 317, 0, 89, 90, 70, 47, 94, 95, 36,
	805, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 323, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 745, 0,
	0, 747, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 752, 753, 754, 751, 750, 749, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 938, 32, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 317,
	0, 89, 90, 70, 47, 94, 95, 36, 741, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 323,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 931, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 317, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 323, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	917, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 317, 0, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 0, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 323, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 916, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 317, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 914, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 323, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 0, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 317, 0, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 323, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 862, 32, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 317,
	0, 89, 90, 70, 47, 94, 95, 36, 0, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 858, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 323,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 0, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 317, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 792, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 323, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 317, 0, 89, 90, 70,
	47, 94, 95, 36, 0, 107, 0, 27, 0, 0,
	0, 112, 26, 18, 17, 776, 19, 0, 30, 0,
	31, 0, 0, 20, 0, 0, 0, 21, 22, 35,
	37, 106, 0, 23, 33, 0, 0, 34, 0, 0,
	24, 0, 29, 87, 88, 323, 39, 40, 41, 0,
	0, 0, 0, 51, 111, 0, 103, 99, 100, 101,
	96, 97, 0, 0, 0, 0, 0, 0, 104, 0,
	0, 0, 0, 136, 102, 98, 114, 0, 91, 92,
	93, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	74, 75, 25, 78, 79, 0, 0, 0, 54, 55,
	76, 63, 64, 65, 66, 67, 68, 69, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 105, 73, 14, 0, 32,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 71, 108, 317, 0, 89, 90, 70, 47, 94,
	95, 36, 0, 107, 0, 27, 0, 0, 0, 112,
	26, 18, 17, 0, 19, 0, 30, 0, 31, 0,
	0, 20, 0, 0, 0, 21, 22, 35, 37, 106,
	0, 23, 33, 0, 0, 34, 0, 0, 24, 0,
	29, 87, 88, 323, 39, 40, 41, 0, 0, 0,
	0, 51, 111, 0, 103, 99, 100, 101, 96, 97,
	0, 0, 0, 0, 0, 0, 104, 0, 0, 0,
	0, 136, 102, 98, 114, 0, 91, 92, 93, 0,
	0, 0, 0, 86, 53, 0, 0, 687, 74, 75,
	25, 78, 79, 0, 0, 0, 54, 55, 76, 63,
	64, 65, 66, 67, 68, 69, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 105, 73, 14, 0, 32, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 71,
	108, 317, 0, 89, 90, 70, 47, 94, 95, 36,
	0, 107, 0, 27, 0, 0, 0, 112, 26, 18,
	17, 0, 19, 0, 30, 0, 31, 0, 0, 20,
	0, 0, 0, 21, 22, 35, 37, 106, 0, 23,
	33, 0, 0, 34, 0, 0, 24, 0, 29, 87,
	88, 323, 39, 40, 41, 0, 0, 0, 0, 51,
	111, 0, 103, 99, 100, 101, 96, 97, 0, 0,
	0, 0, 0, 0, 104, 0, 0, 0, 0, 136,
	102, 98, 114, 0, 91, 92, 93, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 74, 75, 25, 78,
	79, 0, 0, 0, 54, 55, 76, 63, 64, 65,
	66, 67, 68, 69, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 105, 73, 14, 576, 32, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 71, 108, 317,
	0, 89, 90, 70, 47, 94, 95, 36, 0, 107,
	0, 27, 0, 0, 0, 112, 26, 18, 17, 0,
	19, 0, 30, 0, 31, 0, 0, 20, 0, 0,
	0, 21, 22, 35, 37, 106, 0, 23, 33, 0,
	0, 34, 0, 0, 24, 0, 29, 87, 88, 323,
	39, 40, 41, 0, 0, 0, 0, 51, 111, 0,
	103, 99, 100, 101, 96, 97, 0, 0, 0, 0,
	0, 0, 104, 0, 0, 0, 0, 136, 102, 98,
	114, 0, 91, 92, 93, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 74, 75, 25, 78, 79, 0,
	0, 0, 54, 55, 76, 63, 64, 65, 66, 67,
	68, 69, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 105,
	73, 14, 316, 32, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 71, 108, 317, 0, 89,
	90, 70, 47, 94, 95, 36, 0, 107, 0, 27,
	0, 0, 0, 112, 26, 18, 17, 0, 19, 0,
	30, 0, 31, 0, 0, 20, 0, 0, 0, 21,
	22, 35, 37, 106, 0, 23, 33, 0, 0, 34,
	0, 0, 24, 0, 29, 87, 88, 323, 39, 40,
	41, 0, 0, 0, 0, 51, 111, 0, 103, 99,
	100, 101, 96, 97, 0, 0, 0, 0, 0, 0,
	104, 0, 0, 0, 0, 136, 102, 98, 114, 0,
	91, 92, 93, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 74, 75, 25, 78, 79, 0, 0, 0,
	54, 55, 76, 63, 64, 65, 66, 67, 68, 69,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 105, 73, 14,
	0, 32, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 71, 108, 449, 450, 460, 461, 0,
	0, 440, 0, 107, 0, 0, 0, 0, 0, 0,
	465, 466, 467, 468, 469, 470, 471, 472, 473, 474,
	475, 495, 496, 497, 498, 499, 487, 488, 489, 516,
	490, 491, 476, 477, 478, 479, 480, 481, 482, 483,
	484, 485, 486, 0, 507, 505, 506, 502, 503, 0,
	0, 494, 500, 501, 508, 509, 511, 510, 512, 513,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 504, 515, 514, 0, 0, 451, 452, 453, 454,
	455, 456, 457, 458, 459, 462, 463, 464, 492, 493,
	443, 444, 445, 446, 447, 448, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 135,
	106, 0, 23, 33, 0, 439, 34, 0, 0, 24,
	0, 29, 87, 88, 0, 0, 0, 0, 0, 0,
	108, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 0, 32, 787,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 89, 90, 70, 47, 94, 95, 36, 0,
	107, 0, 27, 0, 0, 0, 112, 26, 18, 17,
	0, 19, 0, 30, 0, 31, 0, 0, 20, 0,
	0, 0, 21, 22, 35, 135, 106, 0, 23, 33,
	0, 0, 34, 0, 0, 24, 0, 29, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 51, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 25, 0, 0,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 14, 0, 32, 854, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 71, 108, 89, 90,
	70, 47, 94, 95, 36, 0, 107, 0, 27, 0,
	0, 0, 112, 26, 18, 17, 0, 19, 0, 30,
	0, 31, 0, 0, 20, 0, 0, 0, 21, 22,
	35, 135, 106, 0, 23, 33, 0, 0, 34, 0,
	0, 24, 0, 29, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 25, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 14, 0,
	32, 689, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 89, 90, 70, 47, 94, 95,
	36, 0, 107, 0, 27, 0, 0, 0, 112, 26,
	18, 17, 0, 19, 0, 30, 0, 31, 0, 0,
	20, 0, 0, 0, 21, 22, 35, 135, 106, 0,
	23, 33, 0, 0, 34, 0, 0, 24, 0, 29,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 25,
	0, 0, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 14, 0, 32, 675, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 71, 108,
	89, 90, 70, 47, 94, 95, 36, 0, 107, 0,
	27, 0, 0, 0, 112, 26, 18, 17, 0, 19,
	0, 30, 0, 31, 0, 0, 20, 0, 0, 0,
	21, 22, 35, 135, 106, 0, 23, 33, 0, 0,
	34, 0, 0, 24, 0, 29, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 25, 0, 0, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	14, 0, 32, 658, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 71, 108, 89, 90, 70, 47,
	94, 95, 36, 0, 107, 0, 27, 0, 0, 0,
	112, 26, 18, 17, 0, 19, 0, 30, 0, 31,
	0, 0, 20, 0, 0, 0, 21, 22, 35, 135,
	106, 0, 23, 33, 0, 0, 34, 0, 0, 24,
	0, 29, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 25, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 14, 0, 32, 0,
	60, 0, 52, 0, 0, 0, 57, 56, 58, 59,
	71, 108, 449, 450, 460, 461, 0, 0, 888, 0,
	0, 0, 0, 0, 0, 0, 0, 465, 466, 467,
	468, 469, 470, 471, 472, 473, 474, 475, 495, 496,
	497, 498, 499, 487, 488, 489, 516, 490, 491, 476,
	477, 478, 479, 480, 481, 482, 483, 484, 485, 486,
	0, 507, 505, 506, 502, 503, 0, 0, 494, 500,
	501, 508, 509, 511, 510, 512, 513, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 887, 515,
	514, 114, 0, 451, 452, 453, 454, 455, 456, 457,
	458, 459, 462, 463, 464, 492, 493, 443, 444, 445,
	446, 447, 448, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 449,
	450, 460, 461, 0, 0, 888, 0, 0, 0, 0,
	0, 0, 0, 907, 465, 466, 467, 468, 469, 470,
	471, 472, 473, 474, 475, 495, 496, 497, 498, 499,
	487, 488, 489, 516, 490, 491, 476, 477, 478, 479,
	480, 481, 482, 483, 484, 485, 486, 0, 507, 505,
	506, 502, 503, 0, 0, 494, 500, 501, 508, 509,
	511, 510, 512, 513, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 887, 515, 514, 114, 0,
	451, 452, 453, 454, 455, 456, 457, 458, 459, 462,
	463, 464, 492, 493, 443, 444, 445, 446, 447, 448,
	89, 90, 70, 0, 94, 95, 119, 0, 107, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 135, 106, 0, 0, 0, 0, 0,
	878, 0, 0, 0, 0, 0, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 231, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	230, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 141, 0, 0, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 89, 90, 70, 0, 94, 95,
	119, 0, 107, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	0, 0, 0, 0, 60, 0, 52, 135, 106, 229,
	57, 56, 58, 59, 71, 108, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 542, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 141,
	0, 0, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 89, 90,
	70, 0, 94, 95, 119, 0, 107, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 0, 0, 0, 0, 60, 538,
	52, 135, 106, 0, 57, 56, 58, 59, 71, 108,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 542, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 141, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 0, 89, 90, 70, 0, 94, 95, 119, 0,
	107, 0, 0, 0, 0, 0, 112, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 0, 0,
	0, 0, 60, 0, 52, 135, 106, 0, 57, 56,
	58, 59, 71, 108, 0, 0, 0, 0, 87, 88,
	0, 0, 0, 0, 0, 0, 0, 0, 601, 111,
	0, 103, 99, 100, 101, 96, 97, 0, 0, 0,
	0, 0, 0, 104, 0, 0, 0, 0, 136, 102,
	98, 114, 0, 91, 92, 93, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 74, 75, 141, 0, 0,
	0, 0, 0, 54, 55, 76, 63, 64, 65, 66,
	67, 68, 69, 0, 0, 0, 89, 90, 70, 0,
	94, 95, 119, 432, 107, 0, 0, 0, 0, 0,
	112, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	105, 73, 0, 0, 0, 0, 60, 0, 52, 135,
	106, 600, 57, 56, 58, 59, 71, 108, 0, 0,
	0, 0, 87, 88, 0, 0, 0, 0, 0, 0,
	0, 0, 51, 111, 0, 103, 99, 100, 101, 96,
	97, 0, 0, 0, 0, 0, 0, 104, 0, 0,
	0, 0, 136, 102, 98, 114, 0, 91, 92, 93,
	0, 0, 0, 0, 86, 53, 0, 0, 0, 74,
	75, 141, 0, 0, 0, 0, 0, 54, 55, 76,
	63, 64, 65, 66, 67, 68, 69, 0, 0, 0,
	89, 90, 70, 0, 94, 95, 119, 0, 107, 0,
	0, 0, 0, 0, 112, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 105, 73, 0, 0, 0, 0,
	60, 0, 52, 135, 106, 0, 57, 56, 58, 59,
	71, 108, 0, 0, 0, 0, 87, 88, 0, 0,
	0, 0, 0, 0, 0, 0, 51, 111, 0, 103,
	99, 100, 101, 96, 97, 0, 0, 0, 0, 0,
	0, 104, 0, 0, 0, 0, 136, 102, 98, 114,
	0, 91, 92, 93, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 74, 75, 141, 0, 0, 0, 0,
	0, 54, 55, 76, 63, 64, 65, 66, 67, 68,
	69, 0, 0, 0, 89, 90, 70, 0, 94, 95,
	119, 0, 107, 0, 0, 0, 0, 0, 112, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 105, 73,
	0, 0, 0, 0, 60, 0, 52, 135, 106, 393,
	57, 56, 58, 59, 71, 108, 0, 0, 0, 0,
	87, 88, 0, 0, 0, 0, 0, 0, 0, 0,
	51, 111, 0, 103, 99, 100, 101, 96, 97, 0,
	0, 0, 0, 0, 0, 104, 0, 0, 0, 0,
	136, 102, 98, 114, 0, 91, 92, 93, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 74, 75, 141,
	0, 0, 0, 0, 0, 54, 55, 76, 63, 64,
	65, 66, 67, 68, 69, 0, 0, 0, 89, 90,
	70, 0, 94, 95, 119, 0, 107, 0, 0, 0,
	0, 0, 112, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 105, 73, 0, 0, 0, 369, 60, 0,
	52, 135, 106, 0, 57, 56, 58, 59, 71, 108,
	0, 0, 0, 0, 87, 88, 0, 0, 0, 0,
	0, 0, 0, 0, 51, 111, 0, 103, 99, 100,
	101, 96, 97, 0, 0, 0, 0, 0, 0, 104,
	0, 0, 0, 0, 136, 102, 98, 114, 0, 91,
	92, 93, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 74, 75, 141, 0, 0, 0, 0, 0, 54,
	55, 76, 63, 64, 65, 66, 67, 68, 69, 0,
	0, 157, 159, 158, 181, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 105, 73, 183, 180,
	0, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 71, 108, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 157, 159, 158, 181,
	0, 0, 0, 0, 763, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 183, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	0, 157, 159, 158, 181, 0, 0, 721, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 701, 157,
	159, 158, 181, 0, 0, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 0, 0, 0, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 0, 699, 157, 159, 158,
	181, 0, 0, 182, 161, 165, 164, 0, 0, 0,
	0, 0, 160, 0, 162, 166, 168, 169, 176, 178,
	163, 0, 0, 0, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 0, 0, 690, 157, 159, 158, 181, 0,
	0, 182, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 0,
	0, 0, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	157, 159, 158, 181, 0, 0, 686, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 183, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 156, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 157, 159, 158, 181, 0,
	0, 685, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 641, 157, 159, 158, 181, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 0, 0, 0,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 157, 159,
	158, 181, 0, 0, 630, 0, 0, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 183, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 156, 167, 170, 171, 172, 173, 174, 175,
	177, 179, 0, 157, 159, 158, 181, 0, 0, 629,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	612, 157, 159, 158, 181, 0, 0, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 0, 0, 0, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 157, 159, 158, 181,
	0, 0, 603, 0, 0, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 183, 180, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 155,
	156, 167, 170, 171, 172, 173, 174, 175, 177, 179,
	574, 0, 0, 593, 157, 159, 158, 181, 0, 0,
	182, 161, 165, 164, 0, 0, 0, 0, 0, 160,
	0, 162, 166, 168, 169, 176, 178, 163, 0, 0,
	0, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 157,
	159, 158, 181, 0, 0, 591, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 157, 159, 158, 181, 0, 0,
	0, 0, 0, 182, 161, 165, 164, 0, 0, 0,
	0, 0, 160, 0, 162, 166, 168, 169, 176, 178,
	163, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 157,
	159, 158, 181, 570, 0, 0, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 157, 159, 158, 181, 0, 0,
	565, 0, 0, 182, 161, 165, 164, 0, 0, 0,
	0, 0, 160, 0, 162, 166, 168, 169, 176, 178,
	163, 183, 180, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 155, 156, 167,
	170, 171, 172, 173, 174, 175, 177, 179, 0, 157,
	159, 158, 181, 0, 0, 561, 0, 0, 182, 161,
	165, 164, 0, 0, 0, 0, 0, 160, 0, 162,
	166, 168, 169, 176, 178, 163, 183, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 417, 0,
	0, 0, 155, 156, 167, 170, 171, 172, 173, 174,
	175, 177, 179, 0, 0, 0, 0, 0, 0, 0,
	423, 0, 0, 182, 161, 165, 164, 157, 159, 158,
	181, 0, 160, 0, 162, 166, 168, 169, 176, 178,
	163, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 183, 180, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	155, 156, 167, 170, 171, 172, 173, 174, 175, 177,
	179, 0, 157, 159, 158, 181, 0, 0, 0, 0,
	0, 182, 161, 165, 164, 0, 0, 0, 0, 0,
	160, 0, 162, 166, 168, 169, 176, 178, 163, 183,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 155, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	377, 157, 159, 158, 181, 0, 182, 161, 165, 164,
	0, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 0, 0, 0, 183, 180,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 155, 156, 167, 170, 171, 172,
	173, 174, 175, 177, 179, 0, 0, 0, 0, 154,
	157, 159, 158, 181, 0, 182, 161, 165, 164, 0,
	0, 0, 0, 0, 160, 0, 162, 166, 168, 169,
	176, 178, 163, 0, 0, 0, 0, 183, 180, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 156, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 0, 159, 158, 181, 0,
	0, 0, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 183, 180, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 155, 156,
	167, 170, 171, 172, 173, 174, 175, 177, 179, 0,
	0, 0, 158, 181, 0, 0, 0, 0, 0, 182,
	161, 165, 164, 0, 0, 0, 0, 0, 160, 0,
	162, 166, 168, 169, 176, 178, 163, 183, 180, 434,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 155, 156, 167, 170, 171, 172, 173,
	174, 175, 177, 179, 0, 0, 0, 0, 0, 0,
	0, 181, 0, 0, 182, 161, 165, 164, 0, 0,
	0, 0, 0, 160, 0, 162, 166, 168, 169, 176,
	178, 163, 0, 0, 0, 183, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 156, 167, 170, 171, 172, 173, 174, 175,
	177, 179, 0, 0, 0, 0, 181, 0, 0, 0,
	0, 0, 182, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	183, 180, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 155, 156, 167, 170,
	171, 172, 173, 174, 175, 177, 179, 0, 0, 0,
	0, 181, 0, 0, 0, 0, 0, 182, 161, 165,
	164, 0, 0, 0, 0, 0, 160, 0, 162, 166,
	168, 169, 176, 178, 163, 183, 180, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 155, 156, 167, 170, 171, 172, 173, 174, 175,
	177, 179, 0, 0, 0, 181, 0, 0, 0, 0,
	0, 0, 0, 161, 165, 164, 0, 0, 0, 0,
	0, 160, 0, 162, 166, 168, 169, 176, 178, 163,
	180, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 181, 156, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 181, 0, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 160, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 181, 0, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 0, 0, 162, 166, 168,
	169, 176, 178, 163, 0, 181, 0, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 161, 165, 164,
	180, 0, 0, 0, 0, 0, 0, 0, 166, 168,
	169, 176, 178, 163, 0, 0, 0, 167, 170, 171,
	172, 173, 174, 175, 177, 179, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 165, 164,
	449, 450, 460, 461, 0, 0, 440, 0, 166, 168,
	169, 176, 178, 163, 0, 465, 466, 467, 468, 469,
	470, 471, 472, 473, 474, 475, 495, 496, 497, 498,
	499, 487, 488, 489, 516, 490, 491, 476, 477, 478,
	479, 480, 481, 482, 483, 484, 485, 486, 0, 507,
	505, 506, 502, 503, 0, 0, 494, 500, 501, 508,
	509, 511, 510, 512, 513, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 504, 515, 514, 0,
	0, 451, 452, 453, 454, 455, 456, 457, 458, 459,
	462, 463, 464, 492, 493, 443, 444, 445, 446, 447,
	448, 449, 450, 460, 461, 0, 0, 923, 0, 0,
	0, 0, 0, 0, 0, 0, 465, 466, 467, 468,
	469, 470, 471, 472, 473, 474, 475, 495, 496, 497,
	498, 499, 487, 488, 489, 516, 490, 491, 476, 477,
	478, 479, 480, 481, 482, 483, 484, 485, 486, 0,
	507, 505, 506, 502, 503, 0, 0, 494, 500, 501,
	508, 509, 511, 510, 512, 513, 119, 0, 107, 0,
	0, 0, 0, 0, 112, 0, 0, 504, 515, 514,
	0, 0, 451, 452, 453, 454, 455, 456, 457, 458,
	459, 462, 463, 464, 492, 493, 752, 753, 754, 751,
	750, 749, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 671, 111, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 136, 0, 0, 114,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 237, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 235, 0, 672, 0, 0, 670,
	0, 0, 0, 0, 0, 108,
}
var yyPact = [...]int{

	-1000, -1000, 1251, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	264, 483, 651, 766, -1000, -1000, -1000, 262, 4342, 261,
	259, 5524, 5524, 5524, 183, 776, 5524, -1000, 6743, 258,
	257, 256, -1000, 405, 5524, 820, 281, 32, 504, 819,
	805, 799, 456, 507, 408, -1000, -1000, 254, -1000, -1000,
	134, 253, 4726, 5524, 688, 688, 5524, 5524, 5524, 5524,
	5524, -1000, -1000, 5524, 5524, 5524, 5524, 5524, 5524, 5524,
	252, 5524, -1000, 811, 5524, 5524, 5524, -1000, -1000, -1000,
	-1000, 101, -1000, 517, 506, -1000, 184, 251, 249, 5524,
	5524, 244, 5524, 5524, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 765, 757, 32, -1000, 215, 203,
	203, 239, -1000, 490, 737, 170, 737, 295, -1000, -1000,
	345, 602, -9, 619, 737, -1000, -1000, -1000, -1000, -15,
	-1000, -59, 3147, 5524, 700, 32, 477, 5524, 5524, 337,
	6802, 666, 333, 332, -18, -1000, -1000, -19, -1000, -1000,
	-60, -24, -1000, 6802, -1000, 5524, 5524, 5524, 5524, 5524,
	5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524,
	5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524, 5524,
	5524, 230, 5410, 5524, 688, 5524, 766, -1000, 6684, 331,
	-1000, 794, -1000, 785, -1000, 591, -1000, 595, 233, 4342,
	228, 319, 275, 5296, 5524, 5524, 5524, 5524, 5524, 5524,
	5524, 5524, 5524, 5524, 5524, 5524, 5524, -1000, -1000, 5524,
	5524, 5524, 104, 4726, 98, 22, -1000, -1000, 6629, 688,
	5524, 225, -1000, -1000, 101, 5524, -1000, -1000, 4726, -1000,
	412, 412, 461, 412, 6561, 412, 412, 412, 412, 412,
	412, 412, -1000, 5524, 412, 219, 616, 707, -1000, 198,
	5182, 688, 7025, 6970, 7025, 5524, 3461, 3461, 203, -1000,
	505, 227, 203, -1000, -1000, 5524, 5524, 6802, 6802, 5524,
	6802, 6802, 742, -1000, 734, 575, 616, 221, 5524, -1000,
	-1000, 4840, -1000, 4726, 782, 490, 318, 490, -1000, -1000,
	1093, -1000, 316, -28, 582, 737, -1000, 597, 511, 770,
	551, -1000, -1000, 766, 5524, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, 218, 6506, 216, -1000, 315, -8, 6802,
	6451, -1000, -1000, -1000, -1000, 183, -1000, 733, 5524, -1000,
	5524, 7134, 7174, 6857, 7025, 6912, 7214, 7294, 7254, 132,
	132, 132, 461, 412, 461, 461, 64, 64, 168, 168,
	168, 168, 351, 351, 351, 351, 168, -1000, 6396, 5524,
	7080, -11, -1000, -1000, 6341, -30, 2989, -1000, -1000, -1000,
	212, 591, 569, 587, 403, -1000, 587, 5524, -1000, 5524,
	-1000, -1000, 7025, 5524, 7025, 7025, 7025, 7025, 7025, 7025,
	7025, 7025, 7025, 7025, 7025, 7025, 7025, 6286, 96, 6228,
	203, -1000, 5524, -1000, 167, -65, 4726, 5068, -1000, 6802,
	4726, 6173, 84, -1000, 165, -1000, -1000, -1000, -1000, 190,
	751, 6115, 93, 363, 5524, 81, 203, -1000, -1000, 5524,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 203, -1000, -1000,
	-1000, -1000, 183, 5524, 5524, 104, 183, 591, -12, -1000,
	6802, 6060, 6005, -1000, -1000, -1000, 285, 5947, -1000, -13,
	-1000, 6802, 5524, 163, -1000, -1000, 935, -1000, -1000, -1000,
	502, 550, -1000, 737, 539, 689, -1000, 501, -1000, 6802,
	158, 4186, 5524, 5524, 5524, 208, -1000, -1000, 6802, -1000,
	5524, 7080, 155, 688, 7606, 4030, -1000, 192, 285, 569,
	-1000, 587, -1000, -1000, 400, -40, -1000, 5892, 5837, 2831,
	7294, 3874, -1000, -1000, -1000, 5779, -66, 5524, -1000, 6802,
	688, 182, 151, -1000, -1000, -1000, 50, -1000, -1000, 709,
	-1000, -1000, -1000, -1000, 5524, -1000, 7025, -1000, -1000, 5721,
	-1000, -1000, 47, 5663, -1000, -1000, 569, 144, 5524, -1000,
	-1000, 142, -16, -1000, 35, -1000, -1000, 552, -1000, -1000,
	-1000, -1000, 141, 4954, 6802, -1000, -1000, 737, 499, -34,
	-1000, -1000, 737, 689, -1000, 314, -1000, -1000, -1000, 5608,
	313, 6802, -1000, 312, 311, 7080, 307, -1000, 139, 562,
	688, 177, 4726, -1000, -1000, -1000, 620, 285, 138, -1000,
	396, -40, 1433, -1000, 587, 4342, 272, 303, -1000, -1000,
	-1000, 5524, 7025, -1000, 4726, -66, -1000, -1000, 5553, -1000,
	-1000, -1000, -1000, -1000, -1000, 269, 285, 475, -1000, -1000,
	-1000, -1000, -35, -1000, 737, 362, 689, -1000, -34, -1000,
	2673, 302, 5524, 411, -1000, 793, -1000, -1000, 3562, 7606,
	-1000, 4726, 40, 2515, -1000, 169, 395, 121, 611, 379,
	-1000, -1000, -1000, 285, 647, 587, 612, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 1275, -1000, -1000, -1000, -1000,
	3305, 7025, 119, 350, 378, -1000, 285, -1000, 729, -1000,
	349, 737, -35, -1000, -1000, 347, 301, -1000, 113, -1000,
	5524, 174, 401, 300, 775, -1000, -1000, -1000, 111, -1000,
	108, -1000, 299, 587, -1000, 269, 269, 133, -1000, 1117,
	713, 7446, 32, -31, -1000, -1000, 3305, -66, -1000, -1000,
	560, -1000, -67, -1000, -1000, 286, -1000, -1000, 3718, 335,
	-1000, -1000, -1000, -1000, -1000, 292, 2357, 3562, -1000, -1000,
	89, -1000, 2199, 375, 374, 214, 959, -1000, -36, -1000,
	-70, -37, -1000, -73, 7446, -1000, -1000, 4625, 538, 5524,
	5524, -1000, -1000, -1000, -1000, -1000, 3305, -1000, 290, -1000,
	106, 587, -1000, -1000, -1000, -43, -1000, -1000, 725, -1000,
	-1000, 713, -1000, 5524, -1000, 7446, 5524, -1000, -1000, 4498,
	-1000, 284, 217, 608, 680, 497, -1000, 477, -1000, -1000,
	7025, 6802, 2041, 3305, -1000, 366, -1000, 1883, 1725, -1000,
	214, -1000, -1000, 6802, -1000, 6802, 105, -1000, -1000, -1000,
	-1000, 587, 7547, 7446, 185, -1000, -1000, -1000, -1000, -1000,
	-1000, 285, -40, -1000, -1000, 7446, -1000, -1000, 1567, 103,
	-1000, -1000, 269, 283, -1000, -1000, -1000, 1409, -1000,
}
var yyPgo = [...]int{

	0, 931, 929, 14, 8, 928, 4, 29, 13, 927,
	11, 44, 78, 71, 52, 48, 926, 26, 924, 83,
	21, 82, 916, 0, 84, 915, 914, 42, 190, 32,
	19, 38, 913, 79, 73, 912, 5, 911, 910, 909,
	908, 15, 62, 905, 904, 100, 87, 274, 903, 902,
	901, 6, 900, 86, 41, 899, 56, 49, 898, 897,
	896, 895, 894, 99, 893, 892, 890, 883, 10, 882,
	881, 46, 39, 40, 2, 16, 705, 43, 85, 880,
	879, 878, 12, 876, 875, 555, 50, 37, 871, 870,
	9, 762, 20, 553, 868, 18, 867, 864, 862, 88,
	860, 36, 858, 855, 25, 33, 854, 853, 45, 848,
	846, 554, 845, 844, 839, 34, 837, 80, 1, 3,
	832, 17, 831, 821, 803, 7, 767, 752, 28,
}
var yyR1 = [...]int{

	0, 127, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	5, 5, 5, 5, 5, 5, 5, 6, 6, 117,
	117, 95, 95, 10, 10, 10, 9, 9, 9, 9,
	9, 9, 9, 9, 9, 9, 9, 9, 9, 9,
	9, 91, 91, 16, 16, 18, 18, 7, 7, 105,
	105, 104, 104, 111, 111, 17, 17, 20, 20, 19,
	19, 99, 99, 118, 118, 22, 22, 22, 22, 22,
	22, 22, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 11, 11, 11, 11,
	11, 11, 11, 11, 11, 11, 97, 97, 96, 96,
	26, 26, 110, 110, 27, 12, 1, 1, 2, 2,
	13, 13, 126, 126, 76, 76, 14, 15, 86, 86,
	88, 88, 87, 87, 92, 92, 92, 92, 83, 83,
	82, 82, 25, 25, 80, 80, 80, 80, 108, 108,
	108, 8, 8, 84, 84, 67, 67, 65, 65, 69,
	69, 66, 66, 119, 119, 120, 120, 29, 29, 30,
	30, 75, 75, 73, 73, 73, 74, 74, 77, 77,
	116, 116, 31, 31, 103, 103, 33, 107, 107, 34,
	34, 121, 121, 35, 35, 35, 35, 125, 125, 79,
	79, 79, 109, 109, 36, 36, 37, 38, 38, 38,
	38, 40, 40, 39, 81, 81, 123, 123, 122, 122,
	124, 124, 90, 90, 90, 90, 90, 90, 106, 106,
	41, 41, 98, 98, 68, 21, 100, 100, 42, 101,
	101, 102, 102, 44, 43, 43, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 32, 32, 32, 32, 32, 32, 32,
	32, 32, 32, 85, 85, 128, 3, 3, 89, 89,
	112, 112, 51, 51, 52, 52, 52, 52, 45, 45,
	46, 46, 49, 49, 94, 94, 94, 78, 78, 56,
	56, 56, 50, 50, 50, 50, 50, 50, 50, 50,
	50, 50, 50, 50, 50, 50, 50, 50, 57, 57,
	57, 23, 23, 24, 24, 55, 58, 58, 58, 59,
	59, 59, 60, 60, 60, 60, 60, 60, 28, 28,
	28, 47, 47, 47, 61, 61, 62, 62, 62, 62,
	62, 62, 53, 53, 53, 54, 54, 54, 115, 71,
	71, 114, 114, 70, 70, 70, 70, 70, 70, 70,
	93, 93, 93, 93, 63, 63, 63, 63, 63, 63,
	63, 64, 64, 64, 64, 48, 48, 48, 48, 48,
	48, 48, 113, 113, 72,
}
var yyR2 = [...]int{

	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 2,
	0, 1, 3, 1, 3, 2, 1, 1, 1, 1,
	1, 1, 4, 3, 5, 4, 3, 4, 3, 4,
	3, 1, 1, 6, 7, 6, 7, 0, 1, 3,
	1, 3, 1, 3, 1, 1, 2, 1, 3, 1,
	2, 3, 1, 2, 0, 1, 1, 1, 1, 1,
	1, 4, 3, 1, 1, 5, 7, 9, 5, 3,
	3, 3, 3, 3, 3, 1, 2, 6, 7, 9,
	5, 1, 6, 3, 3, 2, 0, 9, 1, 3,
	0, 4, 1, 3, 1, 11, 0, 1, 0, 1,
	9, 8, 1, 2, 1, 1, 6, 7, 0, 2,
	0, 2, 0, 2, 1, 2, 4, 3, 1, 4,
	1, 4, 1, 4, 3, 4, 4, 5, 0, 5,
	4, 1, 1, 1, 4, 5, 6, 1, 3, 6,
	7, 3, 6, 1, 0, 1, 3, 4, 6, 0,
	1, 1, 2, 1, 1, 1, 0, 2, 2, 4,
	1, 3, 1, 2, 3, 1, 1, 3, 1, 1,
	3, 2, 0, 4, 4, 3, 10, 1, 3, 1,
	2, 3, 1, 2, 2, 2, 3, 3, 3, 4,
	3, 1, 1, 3, 1, 3, 1, 1, 0, 1,
	1, 2, 1, 1, 1, 1, 1, 1, 3, 1,
	2, 4, 3, 1, 4, 4, 3, 1, 1, 0,
	1, 3, 1, 8, 3, 2, 6, 5, 3, 4,
	2, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 2, 2, 2, 2, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 2, 2, 2, 2, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	1, 5, 4, 3, 1, 2, 2, 2, 2, 2,
	2, 2, 2, 2, 1, 3, 2, 1, 2, 4,
	2, 1, 2, 11, 9, 0, 0, 1, 0, 4,
	3, 1, 1, 2, 2, 4, 4, 2, 1, 1,
	1, 1, 0, 3, 0, 1, 1, 0, 1, 4,
	3, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 3, 2, 3, 3, 1, 1, 1, 3,
	3, 1, 1, 0, 1, 1, 1, 3, 1, 1,
	3, 1, 1, 4, 4, 4, 4, 1, 1, 1,
	3, 1, 4, 2, 3, 3, 1, 4, 4, 3,
	3, 3, 1, 3, 1, 1, 3, 1, 1, 0,
	1, 3, 1, 3, 1, 4, 2, 2, 6, 4,
	2, 2, 1, 2, 1, 4, 3, 3, 3, 6,
	3, 1, 1, 2, 1, 5, 4, 2, 2, 4,
	2, 2, 1, 3, 1,
}
var yyChk = [...]int{

	-1000, -127, -117, -9, 2, -11, -12, -13, -14, -15,
	52, 80, 45, 39, 144, -65, -66, 21, 20, 23,
	30, 34, 35, 40, 47, 99, 19, 14, -23, 49,
	25, 27, 146, 41, 44, 36, 10, 37, -126, 53,
	54, 55, -67, -69, -28, -32, -76, 7, -60, -61,
	-58, 60, 150, 93, 105, 106, 155, 154, 156, 157,
	148, -43, -48, 108, 109, 110, 111, 112, 113, 114,
	6, 158, -50, 143, 97, 98, 107, -85, 100, 101,
	-47, -57, -52, -45, -55, -56, 92, 50, 51, 4,
	5, 85, 86, 87, 8, 9, 67, 68, 82, 64,
	65, 66, 81, 63, 75, 142, 38, 12, 159, -10,
	-59, 61, 18, -95, 83, 148, 83, -95, 144, 10,
	-18, -91, -111, -95, 83, 37, 39, -19, -20, -99,
	-21, 10, -118, 148, -11, 37, 80, 148, 148, -24,
	-23, 99, -24, -24, -103, -33, -47, -107, -85, -34,
	12, -100, -42, -23, 146, 131, 132, 88, 90, 89,
	161, 153, 163, 169, 155, 154, 164, 133, 165, 166,
	134, 135, 136, 137, 138, 139, 167, 140, 168, 141,
	116, 91, 152, 115, 148, 148, 148, 144, -23, 10,
	147, -3, 153, 53, -76, 10, 10, 10, 94, 95,
	94, 96, 95, 162, 118, 119, 120, 121, 122, 123,
	124, 125, 126, 127, 128, 129, 130, 105, 106, 148,
	150, 144, 58, 148, -115, -114, -71, -70, -23, 153,
	84, 60, -23, -28, -57, 148, -56, 99, 150, -28,
	-23, -23, -23, -23, -23, -23, -23, -23, -23, -23,
	-23, -23, -49, 148, -23, -94, 17, -93, -63, 12,
	77, 78, -23, -23, -23, 150, 79, 79, -46, -44,
	-45, -62, 53, -10, -47, 148, 148, -23, -23, 148,
	-23, -23, 17, 76, -93, -93, 17, -3, 144, -47,
	-77, 148, -77, 148, 83, -95, 149, -95, 146, 144,
	-117, 146, -16, -111, -95, 83, 146, 160, 83, 29,
	-95, -20, 146, 160, 162, -22, 145, 2, -11, -12,
	-13, -14, -15, 52, -23, 21, -3, -101, -102, -23,
	-23, 146, 146, 146, 146, 160, 146, 160, 162, 146,
	160, -23, -23, -23, -23, -23, -23, -23, -23, -23,
	-23, -23, -23, -23, -23, -23, -23, -23, -23, -23,
	-23, -23, -23, -23, -23, -23, -23, -46, -23, 147,
	-23, -110, -27, -28, -23, -99, -118, 146, 146, 10,
	-128, 10, -86, 56, -128, -88, 56, 148, -11, 148,
	146, 147, -23, 153, -23, -23, -23, -23, -23, -23,
	-23, -23, -23, -23, -23, -23, -23, -23, -24, -23,
	-54, 10, 144, -47, -115, 151, 160, 59, -28, -23,
	148, -23, -115, 149, -24, 143, -63, -63, 17, 150,
	58, -23, 11, -28, 59, -24, -53, -6, -47, 144,
	10, -5, -4, 99, 100, 101, 102, 103, 104, 4,
	5, 85, 86, 87, 88, 89, 90, 91, 92, 93,
	6, 7, 94, 95, 96, 19, 20, 21, 22, 23,
	24, 25, 26, 27, 28, 29, 41, 42, 43, 44,
	45, 46, 47, 48, 49, 50, 51, 35, 36, 37,
	39, 40, 97, 98, 60, 30, 31, 32, 33, 34,
	61, 62, 56, 57, 80, 54, 55, 53, 63, 64,
	66, 65, 67, 68, 82, 81, 38, -53, -6, -47,
	-78, -77, 79, 150, 144, 58, 79, -78, -113, -72,
	-23, -23, -23, 76, 76, 142, 148, -23, 149, -116,
	-31, -23, 84, -115, 10, 146, -117, 145, 146, 146,
	83, -95, -19, 83, -95, 144, 10, 83, -21, -23,
	148, 149, 148, 146, 160, 149, -33, -34, -23, -42,
	147, -23, -7, 160, 29, 149, 145, -128, 148, -86,
	-87, 57, -10, 144, -128, -125, -10, -23, -23, -118,
	-23, 149, 151, 145, -77, -23, 149, 162, -71, -23,
	153, 60, -115, 149, 151, 149, -64, 10, 13, 154,
	12, 10, 145, 145, 150, 145, -23, 151, -77, -23,
	-77, -47, -24, -23, -54, -47, -86, -7, 160, 149,
	149, -119, -120, -29, -30, -75, -73, 152, 61, 62,
	-10, 145, -7, 160, -23, 149, 145, 144, 83, -105,
	-17, -20, -91, 144, -128, 149, -84, -11, 147, -23,
	-101, -23, -80, 144, 147, -23, 149, -27, -92, -28,
	153, 60, 150, -25, -11, 147, -97, 148, -119, -87,
	-128, -125, -121, 144, 160, 149, 149, 96, -11, 147,
	145, 162, -23, -28, 148, 149, 151, 13, -23, 145,
	151, 145, -87, 149, -72, 149, 160, -1, 153, -73,
	149, -31, -104, -20, 144, -7, 160, -20, -105, 146,
	-118, 149, 146, -108, 146, -108, 146, 146, 149, 59,
	-28, 148, -115, -118, -26, 42, 43, -119, 149, -128,
	144, 145, -35, -123, -122, 45, -124, 48, -90, 104,
	103, 102, 99, 100, 101, -121, -10, -11, 147, 146,
	-118, -23, -115, 151, -128, -74, 147, -29, -2, 84,
	-7, 160, -104, 145, -17, -7, 22, 146, -101, 145,
	32, 33, -108, 31, -108, -82, -11, 147, -92, -28,
	-115, 151, 28, 148, 144, 149, -89, 45, 144, -121,
	-30, 39, 37, -125, -90, 145, -118, 149, 145, 144,
	-128, -75, 12, 145, -20, -7, 145, 146, 149, -23,
	-8, 147, 146, 145, 146, 31, -118, 149, 149, 146,
	-96, -10, -118, -74, -74, 148, -121, 145, -106, -41,
	12, -98, -68, -6, -3, -79, 146, 144, -121, 59,
	162, 145, -83, -11, 147, -8, -118, 146, 26, -82,
	12, 161, 145, 144, 144, -112, -51, 12, 153, 145,
	146, 160, -128, 162, 146, 160, 162, -6, 145, -109,
	-36, -37, -38, -39, -40, -10, -6, 80, 10, 145,
	-23, -23, -118, -118, 146, 149, -10, -118, -118, 149,
	160, 12, -41, -23, -68, -23, -128, 145, -36, 146,
	146, 46, 29, 79, 24, 144, 145, 145, -51, -128,
	-128, 148, -125, 10, -4, -90, -6, 146, -118, -119,
	-6, 145, 149, -74, -81, 146, 144, -118, 145,
}
var yyDef = [...]int{

	80, -2, -2, 79, 86, 87, 88, 89, 90, 91,
	0, 0, 0, 0, 124, 133, 134, 0, 0, 0,
	0, 423, 423, 423, 0, 388, 0, 145, 0, 0,
	0, 0, 151, 0, 0, 0, 81, 376, 0, 0,
	0, 0, 207, 0, -2, 422, 172, 0, -2, 439,
	425, 0, 459, 0, 0, 0, 0, 0, 0, 0,
	0, 350, 354, 0, 0, 0, 0, 0, 0, 0,
	392, 0, 364, 394, 0, 367, 0, 371, 174, 175,
	432, 417, 437, 0, 0, -2, 0, 0, 0, 0,
	0, 0, 0, 0, 402, 403, 404, 405, 406, 407,
	408, 409, 410, 411, 0, 0, 376, 441, 0, -2,
	0, 0, 401, 83, 0, 0, 0, 0, 80, 81,
	0, 0, 0, 117, 0, 101, 102, 114, 119, 0,
	122, 0, 0, 0, 0, 376, 0, 289, 0, 0,
	424, 388, 0, 0, 0, 235, 236, 0, 372, 238,
	239, 0, 287, 288, 146, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 124, 0, 0,
	155, 375, 377, 0, 173, 178, 375, 180, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 314, 316, 0,
	423, 0, 0, 459, 0, 458, 462, 460, 464, 0,
	0, 0, 300, -2, 0, 0, -2, 388, 459, -2,
	335, 336, 337, 338, 0, 355, 356, 357, 358, 359,
	360, 361, 362, 423, 363, 0, 395, 396, 472, 474,
	0, 0, 366, 368, 370, 423, 0, 0, 397, 295,
	390, 391, 397, 389, 446, 0, 0, 487, 488, 0,
	490, 491, 0, 413, 0, 0, 0, 0, 0, 443,
	384, 0, 387, 459, 0, 85, 0, 84, 93, 80,
	0, 96, 0, 0, 117, 0, 98, 0, 0, 0,
	117, 120, 100, 0, 0, 123, 132, 125, 126, 127,
	128, 129, 130, 0, 0, 0, 375, 0, 290, 292,
	0, 139, 140, 141, 142, 0, 143, 0, 0, 144,
	0, 318, 319, 320, 321, 322, 323, 324, 325, 326,
	327, 328, 329, 330, 331, 332, 333, 334, -2, -2,
	-2, -2, -2, -2, -2, -2, -2, 348, 0, 0,
	353, 107, 162, -2, 0, 0, 0, 153, 154, 375,
	0, 178, 182, 0, 0, 375, 0, 0, 208, 0,
	211, 124, 298, 0, 301, 302, 303, 304, 305, 306,
	307, 308, 309, 310, 311, 312, 313, 0, 0, 0,
	440, 455, 0, 457, 0, 400, 459, 0, -2, 467,
	459, 0, 0, -2, 0, 365, 473, 470, 471, 0,
	0, 0, 0, 426, 0, 0, 0, -2, -2, 0,
	77, 78, 70, 71, 72, 73, 74, 75, 76, 2,
	3, 4, 5, 6, 7, 8, 9, 10, 11, 12,
	13, 14, 15, 16, 17, 18, 19, 20, 21, 22,
	23, 24, 25, 26, 27, 28, 29, 30, 31, 32,
	33, 34, 35, 36, 37, 38, 39, 40, 41, 42,
	43, 44, 45, 46, 47, 48, 49, 50, 51, 52,
	53, 54, 55, 56, 57, 58, 59, 60, 61, 62,
	63, 64, 65, 66, 67, 68, 69, 0, -2, -2,
	294, 398, 0, 423, 0, 0, 0, 178, 107, 492,
	494, 0, 0, 412, 415, 414, -2, 0, 228, 107,
	230, 232, 0, 0, 82, 92, 0, 95, 97, 99,
	0, 117, 113, 0, 117, 0, 118, 0, 121, 375,
	0, 0, 0, 289, 0, 0, 234, 237, 240, 286,
	0, 352, 0, 108, 0, 0, 156, 0, -2, 182,
	375, 0, 179, 242, 0, 181, 247, 0, 0, 0,
	299, 0, 433, 435, 436, 0, 0, 0, 461, 463,
	0, 0, 0, -2, 400, 393, 0, 481, 482, 0,
	484, 476, 477, 478, 0, 480, 369, 434, 385, 0,
	386, 450, 0, 0, 449, 451, 182, 0, 108, 486,
	489, 0, 213, 215, 166, 220, 221, 0, 223, 224,
	225, 442, 0, 108, 233, 399, 94, 0, 0, 107,
	110, 115, 0, 0, 285, 0, 135, 203, 124, 0,
	0, 291, 138, 198, 198, 351, 0, 163, 0, -2,
	0, 0, 459, 150, 192, 124, 160, -2, 0, 375,
	0, 183, 268, 242, 0, 0, 0, 0, 205, 124,
	456, 0, 297, -2, 459, 469, 475, 483, 0, 453,
	447, 448, 375, 485, 493, 226, 219, 168, 167, 222,
	229, 231, 107, 112, 0, 0, 108, 116, 107, 131,
	0, 0, 289, 0, 198, 0, 198, 147, 0, 0,
	-2, 459, 0, 0, 152, 0, 0, 0, 378, 0,
	242, 176, 241, 219, 0, 0, -2, 267, 270, 272,
	273, 274, 275, 276, 277, 268, 248, 206, 124, 212,
	-2, 296, 0, 0, 0, 375, 0, 216, 0, 169,
	0, 108, 107, 105, 109, 0, 0, 136, 0, 194,
	0, 0, 0, 0, 0, 148, 190, 124, 0, -2,
	0, -2, 0, 0, 124, 226, 226, 0, 242, 268,
	0, 0, 376, 0, 271, 177, -2, 468, 479, 242,
	0, 227, 217, 103, 111, 0, 106, 204, 0, 0,
	124, 201, 202, 195, 196, 0, 0, 0, 186, 193,
	0, 158, 0, 0, 0, 0, 268, 171, 0, 279,
	375, 0, 283, 0, 0, 245, 249, 0, 268, 0,
	0, 104, 137, 188, 124, 124, -2, 197, 0, 149,
	0, 0, 161, 124, 124, 0, 381, 382, 0, 170,
	243, 0, 280, 0, 244, 0, 0, 375, 250, 0,
	252, 0, 0, 262, 0, 0, 261, 57, -2, 293,
	374, 218, 0, -2, 191, 0, 159, 0, 0, 379,
	0, 383, 278, 375, 282, 375, 0, 251, 253, 254,
	255, 0, 0, 0, 0, 124, 165, 373, 380, 281,
	284, -2, 256, 257, 258, 260, 263, 189, 0, 0,
	259, 157, 226, 0, 246, 264, 124, 0, 265,
}
var yyTok1 = [...]int{

	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 156, 142, 3, 159, 166, 153, 3,
	148, 149, 164, 155, 160, 154, 169, 165, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 147, 146,
	167, 162, 168, 152, 158, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 150, 3, 151, 163, 3, 143, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 144, 161, 145, 157,
}
var yyTok2 = [...]int{

	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
}
var yyTok3 = [...]int{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := yyPact[state]
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && yyChk[yyAct[n]] == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || yyExca[i+1] != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := yyExca[i]
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = yyTok1[0]
		goto out
	}
	if char < len(yyTok1) {
		token = yyTok1[char]
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = yyTok2[char-yyPrivate]
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = yyTok3[i+0]
		if token == char {
			token = yyTok3[i+1]
			goto out
		}
	}

out:
	if token == 0 {
		token = yyTok2[1] /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = yyPact[yystate]
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = yyAct[yyn]
	if yyChk[yyn] == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = yyDef[yystate]
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && yyExca[xi+1] == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = yyExca[xi+0]
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = yyExca[xi+1]
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = yyPact[yyS[yyp].yys] + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = yyAct[yyn] /* simulate a shift of "error" */
					if yyChk[yystate] == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= yyR2[yyn]
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = yyR1[yyn]
	yyg := yyPgo[yyn]
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = yyAct[yyg]
	} else {
		yystate = yyAct[yyj]
		if yyChk[yystate] != -yyn {
			yystate = yyAct[yyg]
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:294
		{
			yylex.(*Parser).rootNode = &ast.Root{ast.Node{}, yyDollar[1].list}

			// save position
			yylex.(*Parser).rootNode.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)

			yylex.(*Parser).setFreeFloating(yylex.(*Parser).rootNode, token.End, yylex.(*Parser).currentToken.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:307
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:308
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:309
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:310
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:311
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:312
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:313
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:318
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:321
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:337
		{
			if inlineHtmlNode, ok := yyDollar[2].node.(*ast.StmtInlineHtml); ok && len(yyDollar[1].list) > 0 {
				prevNode := lastNode(yyDollar[1].list)
				yylex.(*Parser).splitSemiColonAndPhpCloseTag(inlineHtmlNode, prevNode)
			}

			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 80:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:350
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:359
		{
			namePart := &ast.NameNamePart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{namePart}

			// save position
			namePart.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(namePart, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 82:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:372
		{
			namePart := &ast.NameNamePart{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.list = append(yyDollar[1].list, namePart)

			// save position
			namePart.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(namePart, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:389
		{
			yyVAL.node = &ast.NameName{ast.Node{}, yyDollar[1].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 84:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:401
		{
			yyVAL.node = &ast.NameRelative{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[3].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 85:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:414
		{
			yyVAL.node = &ast.NameFullyQualified{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:429
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 87:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:436
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:442
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:448
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 90:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:454
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 91:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:460
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 92:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:466
		{
			yyVAL.node = &ast.StmtHaltCompiler{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.HaltCompiller, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.OpenParenthesisToken, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 93:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:482
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, name, nil}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 94:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:499
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, name, yyDollar[4].list}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 95:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:516
		{
			yyVAL.node = &ast.StmtNamespace{ast.Node{}, nil, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Namespace, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 96:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:530
		{
			yyVAL.node = yyDollar[2].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 97:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:544
		{
			yyDollar[3].node.(*ast.StmtGroupUse).UseType = yyDollar[2].node
			yyVAL.node = yyDollar[3].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 98:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:559
		{
			yyVAL.node = &ast.StmtUseList{ast.Node{}, nil, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 99:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:573
		{
			yyVAL.node = &ast.StmtUseList{ast.Node{}, yyDollar[2].node, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseDeclarationList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 100:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:587
		{
			yyVAL.node = &ast.StmtConstList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:604
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:616
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 103:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:631
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtGroupUse{ast.Node{}, nil, name, yyDollar[4].list}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yyDollar[3].token.Tokens)
			if yyDollar[5].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, append(yyDollar[5].token.Tokens, yyDollar[6].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[6].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 104:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:652
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtGroupUse{ast.Node{}, nil, name, yyDollar[5].list}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[7].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.UseType, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yyDollar[4].token.Tokens)
			if yyDollar[6].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, append(yyDollar[6].token.Tokens, yyDollar[7].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[7].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 105:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:677
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtGroupUse{ast.Node{}, nil, name, yyDollar[4].list}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[6].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yyDollar[3].token.Tokens)
			if yyDollar[5].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, append(yyDollar[5].token.Tokens, yyDollar[6].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[6].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 106:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:698
		{
			name := &ast.NameName{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtGroupUse{ast.Node{}, nil, name, yyDollar[5].list}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[7].token)

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Use, yyDollar[1].token.Tokens)
			yylex.(*Parser).MoveFreeFloating(yyDollar[2].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Slash, yyDollar[4].token.Tokens)
			if yyDollar[6].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, append(yyDollar[6].token.Tokens, yyDollar[7].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[7].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 107:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:723
		{
			yyVAL.token = nil
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:727
		{
			yyVAL.token = yyDollar[1].token
		}
	case 109:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:734
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 110:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:743
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 111:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:752
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:761
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 113:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:770
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:779
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:788
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 116:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:794
		{
			yyDollar[2].node.(*ast.StmtUse).UseType = yyDollar[1].node
			yyVAL.node = yyDollar[2].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:804
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, nil}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)
			yyVAL.node.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], name)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 118:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:818
		{
			name := &ast.NameName{ast.Node{}, yyDollar[1].list}
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtUse{ast.Node{}, nil, name, alias}

			// save position
			name.GetNode().Position = position.NewNodeListPosition(yyDollar[1].list)
			alias.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], name)
			yylex.(*Parser).setFreeFloating(name, token.End, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 119:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:839
		{
			yyVAL.node = yyDollar[1].node

			// save coments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node.(*ast.StmtUse).Use, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 120:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:848
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Slash, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 121:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:861
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 122:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:870
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 123:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:879
		{
			if inlineHtmlNode, ok := yyDollar[2].node.(*ast.StmtInlineHtml); ok && len(yyDollar[1].list) > 0 {
				prevNode := lastNode(yyDollar[1].list)
				yylex.(*Parser).splitSemiColonAndPhpCloseTag(inlineHtmlNode, prevNode)
			}

			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 124:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:892
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:901
		{
			// error
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 126:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:908
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:914
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:920
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 129:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:926
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 130:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:932
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 131:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:938
		{
			yyVAL.node = &ast.StmtHaltCompiler{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.HaltCompiller, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.OpenParenthesisToken, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:956
		{
			yyVAL.node = &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:969
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 134:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:975
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 135:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:981
		{
			switch n := yyDollar[5].node.(type) {
			case *ast.StmtWhile:
				n.Cond = yyDollar[3].node
			case *ast.StmtAltWhile:
				n.Cond = yyDollar[3].node
			}

			yyVAL.node = yyDollar[5].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.While, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 136:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:1002
		{
			yyVAL.node = &ast.StmtDo{ast.Node{}, yyDollar[2].node, yyDollar[5].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[7].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.While, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[7].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 137:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php7/php7.y:1019
		{
			switch n := yyDollar[9].node.(type) {
			case *ast.StmtFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			case *ast.StmtAltFor:
				n.Init = yyDollar[3].list
				n.Cond = yyDollar[5].list
				n.Loop = yyDollar[7].list
			}

			yyVAL.node = yyDollar[9].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.For, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.InitExpr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CondExpr, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.IncExpr, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 138:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:1046
		{
			switch n := yyDollar[5].node.(type) {
			case *ast.StmtSwitch:
				n.Cond = yyDollar[3].node
			case *ast.StmtAltSwitch:
				n.Cond = yyDollar[3].node
			default:
				panic("unexpected node type")
			}

			yyVAL.node = yyDollar[5].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Switch, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 139:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1069
		{
			yyVAL.node = &ast.StmtBreak{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 140:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1083
		{
			yyVAL.node = &ast.StmtContinue{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 141:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1097
		{
			yyVAL.node = &ast.StmtReturn{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1111
		{
			yyVAL.node = &ast.StmtGlobal{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 143:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1125
		{
			yyVAL.node = &ast.StmtStatic{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1139
		{
			yyVAL.node = &ast.StmtEcho{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Echo, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 145:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1154
		{
			yyVAL.node = &ast.StmtInlineHtml{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 146:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1166
		{
			yyVAL.node = &ast.StmtExpression{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 147:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:1180
		{
			yyVAL.node = &ast.StmtUnset{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Unset, yyDollar[2].token.Tokens)
			if yyDollar[4].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, append(yyDollar[4].token.Tokens, yyDollar[5].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[5].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.CloseParenthesisToken, yyDollar[6].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 148:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:1200
		{
			switch n := yyDollar[7].node.(type) {
			case *ast.StmtForeach:
				n.Expr = yyDollar[3].node
				n.Var = yyDollar[5].node
			case *ast.StmtAltForeach:
				n.Expr = yyDollar[3].node
				n.Var = yyDollar[5].node
			}

			yyVAL.node = yyDollar[7].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Foreach, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 149:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php7/php7.y:1225
		{
			switch n := yyDollar[9].node.(type) {
			case *ast.StmtForeach:
				n.Expr = yyDollar[3].node
				n.Key = yyDollar[5].node
				n.Var = yyDollar[7].node
			case *ast.StmtAltForeach:
				n.Expr = yyDollar[3].node
				n.Key = yyDollar[5].node
				n.Var = yyDollar[7].node
			}

			yyVAL.node = yyDollar[9].node

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Foreach, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Key, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 150:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:1252
		{
			yyVAL.node = yyDollar[5].node
			yyVAL.node.(*ast.StmtDeclare).Consts = yyDollar[3].list

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Declare, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ConstList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1267
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 152:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:1280
		{
			if yyDollar[6].node == nil {
				yyVAL.node = &ast.StmtTry{ast.Node{}, yyDollar[3].list, yyDollar[5].list, yyDollar[6].node}
				yyVAL.node.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[5].list)
			} else {
				yyVAL.node = &ast.StmtTry{ast.Node{}, yyDollar[3].list, yyDollar[5].list, yyDollar[6].node}
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Try, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 153:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1297
		{
			yyVAL.node = &ast.StmtThrow{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 154:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1311
		{
			label := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtGoto{ast.Node{}, label}

			// save position
			label.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(label, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Label, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 155:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1328
		{
			label := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtLabel{ast.Node{}, label}

			// save position
			label.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Label, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 156:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1345
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 157:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php7/php7.y:1351
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[5].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			catch := &ast.StmtCatch{ast.Node{}, yyDollar[4].list, variable, yyDollar[8].list}
			yyVAL.list = append(yyDollar[1].list, catch)

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[5].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[5].token)
			catch.GetNode().Position = position.NewTokensPosition(yyDollar[2].token, yyDollar[9].token)

			// save comments
			yylex.(*Parser).setFreeFloating(catch, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(catch, token.Catch, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(catch, token.Var, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(catch, token.Cond, yyDollar[7].token.Tokens)
			yylex.(*Parser).setFreeFloating(catch, token.Stmts, yyDollar[9].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1375
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 159:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1381
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 160:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1393
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 161:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1399
		{
			yyVAL.node = &ast.StmtFinally{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Finally, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 162:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1416
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 163:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1422
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 164:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1434
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 165:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php7/php7.y:1443
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtFunction{ast.Node{}, yyDollar[2].token != nil, name, yyDollar[6].list, yyDollar[8].node, yyDollar[10].list}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[2].token.Tokens)
				yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[3].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParamList, yyDollar[7].token.Tokens)
			if yyDollar[8].node != nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyDollar[8].node.GetNode().Tokens[token.Colon])
				delete(yyDollar[8].node.GetNode().Tokens, token.Colon)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ReturnType, yyDollar[9].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[11].token.Tokens)

			// normalize
			if yyDollar[8].node == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyVAL.node.GetNode().Tokens[token.ReturnType])
				delete(yyVAL.node.GetNode().Tokens, token.ReturnType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 166:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1479
		{
			yyVAL.token = nil
		}
	case 167:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1483
		{
			yyVAL.token = yyDollar[1].token
		}
	case 168:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1490
		{
			yyVAL.token = nil
		}
	case 169:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1494
		{
			yyVAL.token = yyDollar[1].token
		}
	case 170:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php7/php7.y:1501
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtClass{ast.Node{}, name, yyDollar[1].list, nil, yyDollar[4].ClassExtends, yyDollar[5].ClassImplements, yyDollar[8].list}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[9].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[7].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[9].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 171:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php7/php7.y:1519
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtClass{ast.Node{}, name, nil, nil, yyDollar[3].ClassExtends, yyDollar[4].ClassImplements, yyDollar[7].list}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[8].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 172:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1539
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 173:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1545
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 174:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1554
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 175:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1566
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 176:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:1581
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtTrait{ast.Node{}, name, yyDollar[5].list}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 177:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:1601
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.StmtInterface{ast.Node{}, name, yyDollar[3].InterfaceExtends, yyDollar[6].list}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[7].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(name, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[7].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 178:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1621
		{
			yyVAL.ClassExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1627
		{
			yyVAL.ClassExtends = &ast.StmtClassExtends{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.ClassExtends.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClassExtends, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1642
		{
			yyVAL.InterfaceExtends = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1648
		{
			yyVAL.InterfaceExtends = &ast.StmtInterfaceExtends{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.InterfaceExtends.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.InterfaceExtends, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 182:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1663
		{
			yyVAL.ClassImplements = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 183:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1669
		{
			yyVAL.ClassImplements = &ast.StmtClassImplements{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.ClassImplements.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClassImplements, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 184:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1684
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 185:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:1690
		{
			yyVAL.node = &ast.ExprReference{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1702
		{
			yyVAL.node = &ast.ExprList{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 187:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1716
		{
			yyVAL.node = &ast.ExprShortList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save commentsc
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 188:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1732
		{
			yyVAL.node = &ast.StmtFor{ast.Node{}, nil, nil, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 189:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1741
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltFor{ast.Node{}, nil, nil, nil, stmtList}

			// save position
			stmtList.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 190:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1761
		{
			yyVAL.node = &ast.StmtForeach{ast.Node{}, nil, nil, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 191:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1770
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltForeach{ast.Node{}, nil, nil, nil, stmtList}

			// save position
			stmtList.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 192:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1790
		{
			yyVAL.node = &ast.StmtDeclare{ast.Node{}, false, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 193:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1799
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtDeclare{ast.Node{}, true, nil, stmtList}

			// save position
			stmtList.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 194:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:1819
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(caseList, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 195:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1834
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.StmtSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(caseList, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(caseList, token.CaseListStart, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 196:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1850
		{
			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 197:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:1867
		{

			caseList := &ast.StmtCaseList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.StmtAltSwitch{ast.Node{}, nil, caseList}

			// save position
			caseList.GetNode().Position = position.NewNodeListPosition(yyDollar[3].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(caseList, token.CaseListStart, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(caseList, token.CaseListEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[5].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:1889
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 199:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:1895
		{
			_case := &ast.StmtCase{ast.Node{}, yyDollar[3].node, yyDollar[5].list}
			yyVAL.list = append(yyDollar[1].list, _case)

			// save position
			_case.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_case, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_case, token.Expr, append(yyDollar[4].token.Tokens))
			yylex.(*Parser).setToken(_case, token.CaseSeparator, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 200:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1910
		{
			_default := &ast.StmtDefault{ast.Node{}, yyDollar[4].list}
			yyVAL.list = append(yyDollar[1].list, _default)

			// save position
			_default.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_default, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_default, token.Default, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(_default, token.CaseSeparator, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 201:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1928
		{
			yyVAL.token = yyDollar[1].token
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1932
		{
			yyVAL.token = yyDollar[1].token
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:1939
		{
			yyVAL.node = &ast.StmtWhile{ast.Node{}, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 204:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:1948
		{
			stmtList := &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.StmtAltWhile{ast.Node{}, nil, stmtList}

			// save position
			stmtList.GetNode().Position = position.NewNodeListPosition(yyDollar[2].list)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 205:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:1968
		{
			yyVAL.node = &ast.StmtIf{ast.Node{}, yyDollar[3].node, yyDollar[5].node, nil, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.If, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:1982
		{
			_elseIf := &ast.StmtElseIf{ast.Node{}, yyDollar[4].node, yyDollar[6].node}
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, _elseIf)

			yyVAL.node = yyDollar[1].node

			// save position
			_elseIf.GetNode().Position = position.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			// save comments
			yylex.(*Parser).setFreeFloating(_elseIf, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_elseIf, token.ElseIf, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(_elseIf, token.Expr, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 207:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2003
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 208:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2009
		{
			_else := &ast.StmtElse{ast.Node{}, yyDollar[3].node}
			yyDollar[1].node.(*ast.StmtIf).Else = _else

			yyVAL.node = yyDollar[1].node

			// save position
			_else.GetNode().Position = position.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node)
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(_else, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 209:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:2028
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[6].list}
			yyVAL.node = &ast.StmtAltIf{ast.Node{}, yyDollar[3].node, stmts, nil, nil}

			// save position
			stmts.GetNode().Position = position.NewNodeListPosition(yyDollar[6].list)
			yyVAL.node.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.If, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 210:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php7/php7.y:2045
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[7].list}
			_elseIf := &ast.StmtAltElseIf{ast.Node{}, yyDollar[4].node, stmts}
			yyDollar[1].node.(*ast.StmtAltIf).ElseIf = append(yyDollar[1].node.(*ast.StmtAltIf).ElseIf, _elseIf)

			yyVAL.node = yyDollar[1].node

			// save position
			stmts.GetNode().Position = position.NewNodeListPosition(yyDollar[7].list)
			_elseIf.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list)

			// save comments
			yylex.(*Parser).setFreeFloating(_elseIf, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_elseIf, token.ElseIf, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(_elseIf, token.Expr, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(_elseIf, token.Cond, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 211:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2068
		{
			yyVAL.node = yyDollar[1].node

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[3].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 212:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:2082
		{
			stmts := &ast.StmtStmtList{ast.Node{}, yyDollar[4].list}
			_else := &ast.StmtAltElse{ast.Node{}, stmts}
			yyDollar[1].node.(*ast.StmtAltIf).Else = _else

			yyVAL.node = yyDollar[1].node

			// save position
			stmts.GetNode().Position = position.NewNodeListPosition(yyDollar[4].list)
			_else.GetNode().Position = position.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setFreeFloating(_else, token.Start, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(_else, token.Else, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AltEnd, yyDollar[6].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 213:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2107
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 214:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:2113
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 215:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2122
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 216:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2128
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 217:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2140
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.Parameter{ast.Node{}, yyDollar[2].token != nil, yyDollar[3].token != nil, yyDollar[1].node, variable, nil}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)
			} else if yyDollar[2].token != nil {
				yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[2].token, yyDollar[4].token)
			} else if yyDollar[3].token != nil {
				yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[3].token, yyDollar[4].token)
			} else {
				yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			}

			// save comments
			if yyDollar[1].node != nil {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			}
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Variadic, yyDollar[4].token.Tokens)

			// normalize
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Ampersand, yyVAL.node.GetNode().Tokens[token.Variadic])
				delete(yyVAL.node.GetNode().Tokens, token.Variadic)
			}
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.OptionalType, yyVAL.node.GetNode().Tokens[token.Ampersand])
				delete(yyVAL.node.GetNode().Tokens, token.Ampersand)
			}
			if yyDollar[1].node == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, yyVAL.node.GetNode().Tokens[token.OptionalType])
				delete(yyVAL.node.GetNode().Tokens, token.OptionalType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 218:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:2185
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.Parameter{ast.Node{}, yyDollar[2].token != nil, yyDollar[3].token != nil, yyDollar[1].node, variable, yyDollar[6].node}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].node != nil {
				yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)
			} else if yyDollar[2].token != nil {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node)
			} else if yyDollar[3].token != nil {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[3].token, yyDollar[6].node)
			} else {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[4].token, yyDollar[6].node)
			}

			// save comments
			if yyDollar[1].node != nil {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			}
			if yyDollar[2].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.OptionalType, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Variadic, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[5].token.Tokens)

			// normalize
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Ampersand, yyVAL.node.GetNode().Tokens[token.Variadic])
				delete(yyVAL.node.GetNode().Tokens, token.Variadic)
			}
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.OptionalType, yyVAL.node.GetNode().Tokens[token.Ampersand])
				delete(yyVAL.node.GetNode().Tokens, token.Ampersand)
			}
			if yyDollar[1].node == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, yyVAL.node.GetNode().Tokens[token.OptionalType])
				delete(yyVAL.node.GetNode().Tokens, token.OptionalType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 219:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:2234
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 220:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2240
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 221:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2249
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 222:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2255
		{
			yyVAL.node = &ast.Nullable{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2270
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 224:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2282
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2294
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 226:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:2303
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 227:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2309
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Colon, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 228:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2321
		{
			yyVAL.node = &ast.ArgumentList{ast.Node{}, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 229:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2334
		{
			yyVAL.node = &ast.ArgumentList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[3].token != nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, append(yyDollar[3].token.Tokens, yyDollar[4].token.Tokens...))
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArgumentList, yyDollar[4].token.Tokens)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 230:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2354
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 231:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2360
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 232:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2372
		{
			yyVAL.node = &ast.Argument{ast.Node{}, false, false, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 233:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2384
		{
			yyVAL.node = &ast.Argument{ast.Node{}, true, false, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 234:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2399
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 235:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2408
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2417
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 237:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2426
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2435
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 239:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2444
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.StmtStaticVar{ast.Node{}, variable, nil}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 240:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2460
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.StmtStaticVar{ast.Node{}, variable, yyDollar[3].node}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 241:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2480
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 242:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:2486
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 243:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2495
		{
			yyVAL.node = &ast.StmtPropertyList{ast.Node{}, yyDollar[1].list, yyDollar[2].node, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeListTokenPosition(yyDollar[1].list, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.PropertyList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 244:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2509
		{
			yyVAL.node = &ast.StmtClassConstList{ast.Node{}, yyDollar[1].list, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewOptionalListTokensPosition(yyDollar[1].list, yyDollar[2].token, yyDollar[4].token)

			// save comments
			if len(yyDollar[1].list) > 0 {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[2].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ConstList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 245:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2528
		{
			yyVAL.node = &ast.StmtTraitUse{ast.Node{}, yyDollar[2].list, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 246:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php7/php7.y:2540
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtClassMethod{ast.Node{}, yyDollar[3].token != nil, name, yyDollar[1].list, yyDollar[7].list, yyDollar[9].node, yyDollar[10].node}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			if yyDollar[1].list == nil {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[2].token, yyDollar[10].node)
			} else {
				yyVAL.node.GetNode().Position = position.NewNodeListNodePosition(yyDollar[1].list, yyDollar[10].node)
			}

			// save comments
			if len(yyDollar[1].list) > 0 {
				yylex.(*Parser).MoveFreeFloating(yyDollar[1].list[0], yyVAL.node)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.ModifierList, yyDollar[2].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[2].token.Tokens)
			}
			if yyDollar[3].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[4].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[3].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[4].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[8].token.Tokens)
			if yyDollar[9].node != nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyDollar[9].node.GetNode().Tokens[token.Colon])
				delete(yyDollar[9].node.GetNode().Tokens, token.Colon)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 247:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2577
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 248:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2583
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 249:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2595
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 250:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2608
		{
			yyVAL.node = &ast.StmtTraitAdaptationList{ast.Node{}, nil}

			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AdaptationList, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2620
		{
			yyVAL.node = &ast.StmtTraitAdaptationList{ast.Node{}, yyDollar[2].list}

			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.AdaptationList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 252:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2635
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2641
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 254:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2650
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.NameList, yyDollar[2].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 255:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2660
		{
			yyVAL.node = yyDollar[1].node

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Alias, yyDollar[2].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 256:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2673
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{ast.Node{}, yyDollar[1].node, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].list)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 257:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2689
		{
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, nil, alias}

			// save position
			alias.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 258:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2705
		{
			alias := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, nil, alias}

			// save position
			alias.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 259:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2721
		{
			alias := &ast.Identifier{ast.Node{}, yyDollar[4].token.Value}
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, yyDollar[3].node, alias}

			// save position
			alias.GetNode().Position = position.NewTokenPosition(yyDollar[4].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(alias, token.Start, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 260:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2737
		{
			yyVAL.node = &ast.StmtTraitUseAlias{ast.Node{}, yyDollar[1].node, yyDollar[3].node, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ref, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 261:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2753
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtTraitMethodRef{ast.Node{}, nil, name}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2767
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 263:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2776
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.StmtTraitMethodRef{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2795
		{
			yyVAL.node = &ast.StmtNop{ast.Node{}}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.SemiColon, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 265:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2808
		{
			yyVAL.node = &ast.StmtStmtList{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2824
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2830
		{
			modifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{modifier}

			// save position
			modifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(modifier, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 268:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:2846
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 269:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2852
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 270:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2861
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 271:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2867
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 272:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2876
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 273:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2888
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 274:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2900
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 275:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2912
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 276:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2924
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2936
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 278:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:2951
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:2960
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 280:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:2969
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.StmtProperty{ast.Node{}, variable, nil}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 281:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:2985
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.StmtProperty{ast.Node{}, variable, yyDollar[3].node}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 282:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3005
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 283:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3014
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 284:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:3023
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtConstant{ast.Node{}, name, yyDollar[3].node}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 285:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:3041
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.StmtConstant{ast.Node{}, name, yyDollar[3].node}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 286:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3059
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 287:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3068
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3077
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 289:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:3086
		{
			yyVAL.list = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3092
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 291:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3101
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 292:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3110
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 293:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php7/php7.y:3119
		{
			if yyDollar[2].node != nil {
				yyVAL.node = &ast.StmtClass{ast.Node{}, nil, nil, yyDollar[2].node.(*ast.ArgumentList), yyDollar[3].ClassExtends, yyDollar[4].ClassImplements, yyDollar[7].list}
			} else {
				yyVAL.node = &ast.StmtClass{ast.Node{}, nil, nil, nil, yyDollar[3].ClassExtends, yyDollar[4].ClassImplements, yyDollar[7].list}
			}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[8].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[6].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[8].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 294:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3140
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{ast.Node{}, yyDollar[2].node, yyDollar[3].node.(*ast.ArgumentList)}
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node)
			} else {
				yyVAL.node = &ast.ExprNew{ast.Node{}, yyDollar[2].node, nil}
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 295:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3155
		{
			yyVAL.node = &ast.ExprNew{ast.Node{}, yyDollar[2].node, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 296:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:3170
		{
			listNode := &ast.ExprList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprAssign{ast.Node{}, listNode, yyDollar[6].node}

			// save position
			listNode.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.ArrayPairList, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[5].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 297:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:3187
		{
			shortList := &ast.ExprShortList{ast.Node{}, yyDollar[2].list}
			yyVAL.node = &ast.ExprAssign{ast.Node{}, shortList, yyDollar[5].node}

			// save position
			shortList.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(shortList, token.ArrayPairList, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 298:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3203
		{
			yyVAL.node = &ast.ExprAssign{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 299:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:3216
		{
			yyVAL.node = &ast.ExprAssignReference{ast.Node{}, yyDollar[1].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Equal, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3230
		{
			yyVAL.node = &ast.ExprClone{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 301:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3242
		{
			yyVAL.node = &ast.ExprAssignPlus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 302:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3255
		{
			yyVAL.node = &ast.ExprAssignMinus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 303:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3268
		{
			yyVAL.node = &ast.ExprAssignMul{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 304:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3281
		{
			yyVAL.node = &ast.ExprAssignPow{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 305:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3294
		{
			yyVAL.node = &ast.ExprAssignDiv{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3307
		{
			yyVAL.node = &ast.ExprAssignConcat{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 307:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3320
		{
			yyVAL.node = &ast.ExprAssignMod{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 308:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3333
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3346
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 310:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3359
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 311:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3372
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3385
		{
			yyVAL.node = &ast.ExprAssignShiftRight{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 313:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3398
		{
			yyVAL.node = &ast.ExprAssignCoalesce{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3411
		{
			yyVAL.node = &ast.ExprPostInc{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3424
		{
			yyVAL.node = &ast.ExprPreInc{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3436
		{
			yyVAL.node = &ast.ExprPostDec{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 317:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3449
		{
			yyVAL.node = &ast.ExprPreDec{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3461
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3474
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 320:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3487
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3500
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 322:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3513
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 323:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3526
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3539
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 325:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3552
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3565
		{
			yyVAL.node = &ast.ExprBinaryConcat{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 327:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3578
		{
			yyVAL.node = &ast.ExprBinaryPlus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 328:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3591
		{
			yyVAL.node = &ast.ExprBinaryMinus{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 329:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3604
		{
			yyVAL.node = &ast.ExprBinaryMul{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 330:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3617
		{
			yyVAL.node = &ast.ExprBinaryPow{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 331:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3630
		{
			yyVAL.node = &ast.ExprBinaryDiv{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 332:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3643
		{
			yyVAL.node = &ast.ExprBinaryMod{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 333:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3656
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 334:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3669
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 335:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3682
		{
			yyVAL.node = &ast.ExprUnaryPlus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 336:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3694
		{
			yyVAL.node = &ast.ExprUnaryMinus{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 337:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3706
		{
			yyVAL.node = &ast.ExprBooleanNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 338:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3718
		{
			yyVAL.node = &ast.ExprBitwiseNot{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 339:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3730
		{
			yyVAL.node = &ast.ExprBinaryIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3743
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 341:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3756
		{
			yyVAL.node = &ast.ExprBinaryEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 342:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3769
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Equal, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 343:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3783
		{
			yyVAL.node = &ast.ExprBinarySmaller{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3796
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 345:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3809
		{
			yyVAL.node = &ast.ExprBinaryGreater{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 346:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3822
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 347:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3835
		{
			yyVAL.node = &ast.ExprBinarySpaceship{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3848
		{
			yyVAL.node = &ast.ExprInstanceOf{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 349:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3861
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, yyVAL.node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], yyDollar[3].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3871
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 351:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:3877
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[5].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[5].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 352:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:3891
		{
			yyVAL.node = &ast.ExprTernary{ast.Node{}, yyDollar[1].node, nil, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Cond, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.True, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:3905
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:3918
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 355:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3924
		{
			yyVAL.node = &ast.ExprCastInt{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 356:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3937
		{
			yyVAL.node = &ast.ExprCastDouble{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3950
		{
			yyVAL.node = &ast.ExprCastString{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3963
		{
			yyVAL.node = &ast.ExprCastArray{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 359:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3976
		{
			yyVAL.node = &ast.ExprCastObject{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 360:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:3989
		{
			yyVAL.node = &ast.ExprCastBool{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 361:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4002
		{
			yyVAL.node = &ast.ExprCastUnset{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setToken(yyVAL.node, token.Cast, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 362:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4015
		{
			var e *ast.ExprExit
			if yyDollar[2].node != nil {
				e = yyDollar[2].node.(*ast.ExprExit)
			} else {
				e = &ast.ExprExit{ast.Node{}, false, nil}
			}

			yyVAL.node = e

			if bytes.EqualFold(yyDollar[1].token.Value, []byte("die")) {
				e.Die = true
			}

			// save position
			if yyDollar[2].node == nil {
				yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			} else {
				yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			}

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4042
		{
			yyVAL.node = &ast.ExprErrorSuppress{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4054
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4060
		{
			yyVAL.node = &ast.ExprShellExec{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 366:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4072
		{
			yyVAL.node = &ast.ExprPrint{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 367:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4084
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, nil, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 368:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4096
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, nil, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 369:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4108
		{
			yyVAL.node = &ast.ExprYield{ast.Node{}, yyDollar[2].node, yyDollar[4].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 370:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4121
		{
			yyVAL.node = &ast.ExprYieldFrom{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 371:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4133
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4139
		{
			yyVAL.node = yyDollar[2].node

			switch n := yyVAL.node.(type) {
			case *ast.ExprClosure:
				n.Static = true
			case *ast.ExprArrowFunction:
				n.Static = true
			}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Static, yyVAL.node.GetNode().Tokens[token.Start])
			delete(yyVAL.node.GetNode().Tokens, token.Start)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 373:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php7/php7.y:4162
		{
			yyVAL.node = &ast.ExprClosure{ast.Node{}, yyDollar[2].token != nil, false, yyDollar[5].list, yyDollar[7].ClosureUse, yyDollar[8].node, yyDollar[10].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[4].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[2].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[4].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[6].token.Tokens)
			if yyDollar[8].node != nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.LexicalVars, yyDollar[8].node.GetNode().Tokens[token.Colon])
				delete(yyDollar[8].node.GetNode().Tokens, token.Colon)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ReturnType, yyDollar[9].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Stmts, yyDollar[11].token.Tokens)

			// normalize
			if yyDollar[8].node == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.LexicalVars, yyVAL.node.GetNode().Tokens[token.ReturnType])
				delete(yyVAL.node.GetNode().Tokens, token.ReturnType)
			}
			if yyDollar[7].ClosureUse == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyVAL.node.GetNode().Tokens[token.LexicalVarList])
				delete(yyVAL.node.GetNode().Tokens, token.LexicalVarList)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 374:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php7/php7.y:4194
		{
			yyVAL.node = &ast.ExprArrowFunction{ast.Node{}, yyDollar[2].token != nil, false, yyDollar[4].list, yyDollar[6].node, yyDollar[9].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			if yyDollar[2].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[3].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Function, yyDollar[2].token.Tokens)
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.Ampersand, yyDollar[3].token.Tokens)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ParameterList, yyDollar[5].token.Tokens)
			if yyDollar[6].node != nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyDollar[6].node.GetNode().Tokens[token.Colon])
				delete(yyDollar[6].node.GetNode().Tokens, token.Colon)
			}
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ReturnType, yyDollar[8].token.Tokens)

			// normalize
			if yyDollar[6].node == nil {
				yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Params, yyVAL.node.GetNode().Tokens[token.ReturnType])
				delete(yyVAL.node.GetNode().Tokens, token.ReturnType)
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 376:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4229
		{
			yyVAL.token = nil
		}
	case 377:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4233
		{
			yyVAL.token = yyDollar[1].token
		}
	case 378:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4240
		{
			yyVAL.ClosureUse = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 379:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4246
		{
			yyVAL.ClosureUse = &ast.ExprClosureUse{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.ClosureUse.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.Use, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.ClosureUse, token.LexicalVarList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4263
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 381:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4272
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 382:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4281
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, identifier}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 383:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4295
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.ExprReference{ast.Node{}, variable}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(variable, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 384:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4315
		{
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, yyDollar[1].node, yyDollar[2].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 385:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4327
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 386:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4340
		{
			yyVAL.node = &ast.ExprStaticCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4353
		{
			yyVAL.node = &ast.ExprFunctionCall{ast.Node{}, yyDollar[1].node, yyDollar[2].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[2].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 388:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4368
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 389:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4380
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 390:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4389
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 391:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4395
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 392:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4404
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4410
		{
			yyVAL.node = &ast.ExprExit{ast.Node{}, false, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Exit, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 394:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4426
		{
			yyVAL.list = []ast.Vertex{}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 395:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4432
		{
			part := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{part}

			// save position
			part.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 396:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4442
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 397:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4451
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 398:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4457
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 399:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4466
		{
			yyVAL.node = &ast.ExprArray{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Array, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4480
		{
			yyVAL.node = &ast.ExprShortArray{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.ArrayPairList, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 401:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4493
		{
			yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 402:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4508
		{
			yyVAL.node = &ast.ScalarLnumber{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 403:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4520
		{
			yyVAL.node = &ast.ScalarDnumber{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 404:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4532
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 405:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4544
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 406:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4556
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 407:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4568
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 408:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4580
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 409:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4592
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 410:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4604
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 411:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4616
		{
			yyVAL.node = &ast.ScalarMagicConstant{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4628
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, []ast.Vertex{encapsed}}

			// save position
			encapsed.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 413:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4642
		{
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, nil}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4654
		{
			yyVAL.node = &ast.ScalarEncapsed{ast.Node{}, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4666
		{
			yyVAL.node = &ast.ScalarHeredoc{ast.Node{}, yyDollar[1].token.Value, yyDollar[2].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 416:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4678
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 417:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4684
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 418:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4693
		{
			yyVAL.node = &ast.ExprConstFetch{ast.Node{}, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4705
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4721
		{
			target := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprClassConstFetch{ast.Node{}, yyDollar[1].node, target}

			// save position
			target.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(target, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 421:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4740
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 422:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4746
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 423:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:4755
		{
			yyVAL.node = nil

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4761
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 425:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4770
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 426:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4779
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4785
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, yyVAL.node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], yyDollar[3].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4795
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 429:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4804
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 430:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4810
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, yyVAL.node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], yyDollar[3].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 431:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4820
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 432:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4829
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 433:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4835
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 434:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4849
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 435:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4863
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 436:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4877
		{
			yyVAL.node = &ast.ExprMethodCall{ast.Node{}, yyDollar[1].node, yyDollar[3].node, yyDollar[4].node.(*ast.ArgumentList)}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 437:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4890
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4899
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 439:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4905
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 440:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4911
		{
			yyVAL.node = &ast.ExprPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4927
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 442:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:4941
		{
			yyVAL.node = &ast.ExprVariable{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyDollar[3].node, token.Start, append(yyDollar[2].token.Tokens, yyDollar[3].node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyDollar[3].node, token.End, append(yyDollar[3].node.GetNode().Tokens[token.End], yyDollar[4].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 443:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:4955
		{
			yyVAL.node = &ast.ExprVariable{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 444:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4970
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 445:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:4983
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Name, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:4999
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 447:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5005
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 448:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5019
		{
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 449:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5033
		{
			yyVAL.node = &ast.ExprPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 450:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5046
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 451:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5059
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{ast.Node{}, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 452:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5075
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 453:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5087
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, yyVAL.node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], yyDollar[3].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 454:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5097
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 455:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5106
		{
			yyVAL.node = &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5118
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Start, append(yyDollar[1].token.Tokens, yyVAL.node.GetNode().Tokens[token.Start]...))
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, append(yyVAL.node.GetNode().Tokens[token.End], yyDollar[3].token.Tokens...))

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5128
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5137
		{
			yyVAL.list = yyDollar[1].list

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 459:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php7/php7.y:5146
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, nil}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 460:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5152
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 461:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5161
		{
			if len(yyDollar[1].list) == 0 {
				yyDollar[1].list = []ast.Vertex{&ast.ExprArrayItem{ast.Node{}, false, nil, nil}}
			}

			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 462:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5174
		{
			if yyDollar[1].node.(*ast.ExprArrayItem).Key == nil && yyDollar[1].node.(*ast.ExprArrayItem).Val == nil {
				yyVAL.list = []ast.Vertex{}
			} else {
				yyVAL.list = []ast.Vertex{yyDollar[1].node}
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 463:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5187
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5200
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, yyDollar[1].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodePosition(yyDollar[1].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 465:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5212
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[4].node}
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, reference}

			// save position
			yyVAL.node.GetNode().Position = position.NewNodesPosition(yyDollar[1].node, yyDollar[4].node)
			reference.GetNode().Position = position.NewTokenNodePosition(yyDollar[3].token, yyDollar[4].node)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(reference, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 466:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5228
		{
			reference := &ast.ExprReference{ast.Node{}, yyDollar[2].node}
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, reference}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			reference.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 467:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5242
		{
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, true, nil, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 468:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:5254
		{
			// TODO: Cannot use list() as standalone expression
			listNode := &ast.ExprList{ast.Node{}, yyDollar[5].list}
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, yyDollar[1].node, listNode}

			// save position
			listNode.GetNode().Position = position.NewTokensPosition(yyDollar[3].token, yyDollar[6].token)
			yyVAL.node.GetNode().Position = position.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			// save comments
			yylex.(*Parser).MoveFreeFloating(yyDollar[1].node, yyVAL.node)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.Start, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.List, yyDollar[4].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.ArrayPairList, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 469:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5273
		{
			// TODO: Cannot use list() as standalone expression
			listNode := &ast.ExprList{ast.Node{}, yyDollar[3].list}
			yyVAL.node = &ast.ExprArrayItem{ast.Node{}, false, nil, listNode}

			// save position
			listNode.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.List, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(listNode, token.ArrayPairList, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 470:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5293
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 471:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5299
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[2].token.Value}
			yyVAL.list = append(yyDollar[1].list, encapsed)

			// save position
			encapsed.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(encapsed, token.Start, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 472:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5312
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 473:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5318
		{
			encapsed := &ast.ScalarEncapsedStringPart{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.list = []ast.Vertex{encapsed, yyDollar[2].node}

			// save position
			encapsed.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(encapsed, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5334
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, name}

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 475:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5348
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, variable, yyDollar[3].node}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 476:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5365
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			fetch := &ast.Identifier{ast.Node{}, yyDollar[3].token.Value}
			yyVAL.node = &ast.ExprPropertyFetch{ast.Node{}, variable, fetch}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			fetch.GetNode().Position = position.NewTokenPosition(yyDollar[3].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Var, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(fetch, token.Start, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 477:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5384
		{
			variable := &ast.ExprVariable{ast.Node{}, yyDollar[2].node}

			yyVAL.node = variable

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setToken(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5399
		{
			name := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, name}

			yyVAL.node = variable

			// save position
			name.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			// save comments
			yylex.(*Parser).setToken(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 479:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php7/php7.y:5416
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[2].token.Value}
			variable := &ast.ExprVariable{ast.Node{}, identifier}
			yyVAL.node = &ast.ExprArrayDimFetch{ast.Node{}, variable, yyDollar[4].node}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			variable.GetNode().Position = position.NewTokenPosition(yyDollar[2].token)
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			// save comments
			yylex.(*Parser).setToken(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Var, yyDollar[3].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.Expr, yyDollar[5].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, yyDollar[6].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5435
		{
			yyVAL.node = yyDollar[2].node

			// save comments
			yylex.(*Parser).setToken(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloatingTokens(yyVAL.node, token.End, yyDollar[3].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5448
		{
			yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5460
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{ast.Node{}, yyDollar[1].token.Value}
			} else {
				yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[1].token.Value}
			}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 483:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5477
		{
			var lnumber *ast.ScalarLnumber
			// TODO: add option to handle 64 bit integer
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				lnumber = &ast.ScalarLnumber{ast.Node{}, yyDollar[2].token.Value}
				yyVAL.node = &ast.ExprUnaryMinus{ast.Node{}, lnumber}
			} else {
				yyDollar[2].token.Value = append([]byte("-"), yyDollar[2].token.Value...)
				yyVAL.node = &ast.ScalarString{ast.Node{}, yyDollar[2].token.Value}
			}

			// save position
			if isInt {
				lnumber.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)
			}
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[2].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 484:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5503
		{
			identifier := &ast.Identifier{ast.Node{}, yyDollar[1].token.Value}
			yyVAL.node = &ast.ExprVariable{ast.Node{}, identifier}

			// save position
			identifier.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)
			yyVAL.node.GetNode().Position = position.NewTokenPosition(yyDollar[1].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 485:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php7/php7.y:5520
		{
			yyVAL.node = &ast.ExprIsset{ast.Node{}, yyDollar[3].list}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[5].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Isset, yyDollar[2].token.Tokens)
			if yyDollar[4].token == nil {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, yyDollar[5].token.Tokens)
			} else {
				yylex.(*Parser).setFreeFloating(yyVAL.node, token.VarList, append(yyDollar[4].token.Tokens, yyDollar[5].token.Tokens...))
			}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 486:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5538
		{
			yyVAL.node = &ast.ExprEmpty{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Empty, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 487:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5552
		{
			yyVAL.node = &ast.ExprInclude{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 488:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5564
		{
			yyVAL.node = &ast.ExprIncludeOnce{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 489:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php7/php7.y:5576
		{
			yyVAL.node = &ast.ExprEval{ast.Node{}, yyDollar[3].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokensPosition(yyDollar[1].token, yyDollar[4].token)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Eval, yyDollar[2].token.Tokens)
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Expr, yyDollar[4].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 490:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5590
		{
			yyVAL.node = &ast.ExprRequire{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 491:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php7/php7.y:5602
		{
			yyVAL.node = &ast.ExprRequireOnce{ast.Node{}, yyDollar[2].node}

			// save position
			yyVAL.node.GetNode().Position = position.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)

			// save comments
			yylex.(*Parser).setFreeFloating(yyVAL.node, token.Start, yyDollar[1].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5617
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 493:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php7/php7.y:5623
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[3].node)

			// save comments
			yylex.(*Parser).setFreeFloating(lastNode(yyDollar[1].list), token.End, yyDollar[2].token.Tokens)

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php7/php7.y:5635
		{
			yyVAL.node = yyDollar[1].node

			yylex.(*Parser).returnTokenToPool(yyDollar, &yyVAL)
		}
	}
	goto yystack /* stack new state and value */
}

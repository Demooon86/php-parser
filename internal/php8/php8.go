// Code generated by goyacc -o internal/php8/php8.go internal/php8/php8.y. DO NOT EDIT.

// line internal/php8/php8.y:2
package php8

import __yyfmt__ "fmt"

// line internal/php8/php8.y:2

import (
	"strconv"

	"github.com/Demooon86/php-parser/pkg/ast"
	"github.com/Demooon86/php-parser/pkg/token"
)

// line internal/php8/php8.y:13
type yySymType struct {
	yys   int
	node  ast.Vertex
	token *token.Token
	list  []ast.Vertex
}

const T_INCLUDE = 57346
const T_INCLUDE_ONCE = 57347
const T_EXIT = 57348
const T_IF = 57349
const T_LNUMBER = 57350
const T_DNUMBER = 57351
const T_STRING = 57352
const T_STRING_VARNAME = 57353
const T_VARIABLE = 57354
const T_NUM_STRING = 57355
const T_INLINE_HTML = 57356
const T_CHARACTER = 57357
const T_BAD_CHARACTER = 57358
const T_ENCAPSED_AND_WHITESPACE = 57359
const T_CONSTANT_ENCAPSED_STRING = 57360
const T_ECHO = 57361
const T_DO = 57362
const T_WHILE = 57363
const T_ENDWHILE = 57364
const T_FOR = 57365
const T_ENDFOR = 57366
const T_FOREACH = 57367
const T_ENDFOREACH = 57368
const T_DECLARE = 57369
const T_ENDDECLARE = 57370
const T_AS = 57371
const T_SWITCH = 57372
const T_ENDSWITCH = 57373
const T_CASE = 57374
const T_DEFAULT = 57375
const T_BREAK = 57376
const T_CONTINUE = 57377
const T_GOTO = 57378
const T_FUNCTION = 57379
const T_FN = 57380
const T_CONST = 57381
const T_RETURN = 57382
const T_TRY = 57383
const T_CATCH = 57384
const T_FINALLY = 57385
const T_THROW = 57386
const T_USE = 57387
const T_INSTEADOF = 57388
const T_GLOBAL = 57389
const T_VAR = 57390
const T_UNSET = 57391
const T_ISSET = 57392
const T_EMPTY = 57393
const T_HALT_COMPILER = 57394
const T_CLASS = 57395
const T_TRAIT = 57396
const T_INTERFACE = 57397
const T_EXTENDS = 57398
const T_IMPLEMENTS = 57399
const T_OBJECT_OPERATOR = 57400
const T_DOUBLE_ARROW = 57401
const T_LIST = 57402
const T_ARRAY = 57403
const T_CALLABLE = 57404
const T_CLASS_C = 57405
const T_TRAIT_C = 57406
const T_METHOD_C = 57407
const T_FUNC_C = 57408
const T_LINE = 57409
const T_FILE = 57410
const T_COMMENT = 57411
const T_DOC_COMMENT = 57412
const T_OPEN_TAG = 57413
const T_OPEN_TAG_WITH_ECHO = 57414
const T_CLOSE_TAG = 57415
const T_WHITESPACE = 57416
const T_START_HEREDOC = 57417
const T_END_HEREDOC = 57418
const T_DOLLAR_OPEN_CURLY_BRACES = 57419
const T_CURLY_OPEN = 57420
const T_PAAMAYIM_NEKUDOTAYIM = 57421
const T_NAMESPACE = 57422
const T_NS_C = 57423
const T_DIR = 57424
const T_NS_SEPARATOR = 57425
const T_ELLIPSIS = 57426
const T_EVAL = 57427
const T_REQUIRE = 57428
const T_REQUIRE_ONCE = 57429
const T_LOGICAL_OR = 57430
const T_LOGICAL_XOR = 57431
const T_LOGICAL_AND = 57432
const T_INSTANCEOF = 57433
const T_NEW = 57434
const T_CLONE = 57435
const T_ELSEIF = 57436
const T_ELSE = 57437
const T_ENDIF = 57438
const T_PRINT = 57439
const T_YIELD = 57440
const T_STATIC = 57441
const T_ABSTRACT = 57442
const T_FINAL = 57443
const T_PRIVATE = 57444
const T_PROTECTED = 57445
const T_PUBLIC = 57446
const T_INC = 57447
const T_DEC = 57448
const T_YIELD_FROM = 57449
const T_INT_CAST = 57450
const T_DOUBLE_CAST = 57451
const T_STRING_CAST = 57452
const T_ARRAY_CAST = 57453
const T_OBJECT_CAST = 57454
const T_BOOL_CAST = 57455
const T_UNSET_CAST = 57456
const T_COALESCE = 57457
const T_SPACESHIP = 57458
const T_NOELSE = 57459
const T_PLUS_EQUAL = 57460
const T_MINUS_EQUAL = 57461
const T_MUL_EQUAL = 57462
const T_POW_EQUAL = 57463
const T_DIV_EQUAL = 57464
const T_CONCAT_EQUAL = 57465
const T_MOD_EQUAL = 57466
const T_AND_EQUAL = 57467
const T_OR_EQUAL = 57468
const T_XOR_EQUAL = 57469
const T_SL_EQUAL = 57470
const T_SR_EQUAL = 57471
const T_COALESCE_EQUAL = 57472
const T_BOOLEAN_OR = 57473
const T_BOOLEAN_AND = 57474
const T_POW = 57475
const T_SL = 57476
const T_SR = 57477
const T_IS_IDENTICAL = 57478
const T_IS_NOT_IDENTICAL = 57479
const T_IS_EQUAL = 57480
const T_IS_NOT_EQUAL = 57481
const T_IS_SMALLER_OR_EQUAL = 57482
const T_IS_GREATER_OR_EQUAL = 57483
const T_NULLSAFE_OBJECT_OPERATOR = 57484
const T_MATCH = 57485
const T_ATTRIBUTE = 57486
const T_NAME_RELATIVE = 57487
const T_NAME_QUALIFIED = 57488
const T_NAME_FULLY_QUALIFIED = 57489
const T_READONLY = 57490
const T_ENUM = 57491
const T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG = 57492
const T_AMPERSAND_NOT_FOLLOWED_BY_VAR_OR_VARARG = 57493

var yyToknames = [...]string{
	"$end",
	"error",
	"$unk",
	"T_INCLUDE",
	"T_INCLUDE_ONCE",
	"T_EXIT",
	"T_IF",
	"T_LNUMBER",
	"T_DNUMBER",
	"T_STRING",
	"T_STRING_VARNAME",
	"T_VARIABLE",
	"T_NUM_STRING",
	"T_INLINE_HTML",
	"T_CHARACTER",
	"T_BAD_CHARACTER",
	"T_ENCAPSED_AND_WHITESPACE",
	"T_CONSTANT_ENCAPSED_STRING",
	"T_ECHO",
	"T_DO",
	"T_WHILE",
	"T_ENDWHILE",
	"T_FOR",
	"T_ENDFOR",
	"T_FOREACH",
	"T_ENDFOREACH",
	"T_DECLARE",
	"T_ENDDECLARE",
	"T_AS",
	"T_SWITCH",
	"T_ENDSWITCH",
	"T_CASE",
	"T_DEFAULT",
	"T_BREAK",
	"T_CONTINUE",
	"T_GOTO",
	"T_FUNCTION",
	"T_FN",
	"T_CONST",
	"T_RETURN",
	"T_TRY",
	"T_CATCH",
	"T_FINALLY",
	"T_THROW",
	"T_USE",
	"T_INSTEADOF",
	"T_GLOBAL",
	"T_VAR",
	"T_UNSET",
	"T_ISSET",
	"T_EMPTY",
	"T_HALT_COMPILER",
	"T_CLASS",
	"T_TRAIT",
	"T_INTERFACE",
	"T_EXTENDS",
	"T_IMPLEMENTS",
	"T_OBJECT_OPERATOR",
	"T_DOUBLE_ARROW",
	"T_LIST",
	"T_ARRAY",
	"T_CALLABLE",
	"T_CLASS_C",
	"T_TRAIT_C",
	"T_METHOD_C",
	"T_FUNC_C",
	"T_LINE",
	"T_FILE",
	"T_COMMENT",
	"T_DOC_COMMENT",
	"T_OPEN_TAG",
	"T_OPEN_TAG_WITH_ECHO",
	"T_CLOSE_TAG",
	"T_WHITESPACE",
	"T_START_HEREDOC",
	"T_END_HEREDOC",
	"T_DOLLAR_OPEN_CURLY_BRACES",
	"T_CURLY_OPEN",
	"T_PAAMAYIM_NEKUDOTAYIM",
	"T_NAMESPACE",
	"T_NS_C",
	"T_DIR",
	"T_NS_SEPARATOR",
	"T_ELLIPSIS",
	"T_EVAL",
	"T_REQUIRE",
	"T_REQUIRE_ONCE",
	"T_LOGICAL_OR",
	"T_LOGICAL_XOR",
	"T_LOGICAL_AND",
	"T_INSTANCEOF",
	"T_NEW",
	"T_CLONE",
	"T_ELSEIF",
	"T_ELSE",
	"T_ENDIF",
	"T_PRINT",
	"T_YIELD",
	"T_STATIC",
	"T_ABSTRACT",
	"T_FINAL",
	"T_PRIVATE",
	"T_PROTECTED",
	"T_PUBLIC",
	"T_INC",
	"T_DEC",
	"T_YIELD_FROM",
	"T_INT_CAST",
	"T_DOUBLE_CAST",
	"T_STRING_CAST",
	"T_ARRAY_CAST",
	"T_OBJECT_CAST",
	"T_BOOL_CAST",
	"T_UNSET_CAST",
	"T_COALESCE",
	"T_SPACESHIP",
	"T_NOELSE",
	"T_PLUS_EQUAL",
	"T_MINUS_EQUAL",
	"T_MUL_EQUAL",
	"T_POW_EQUAL",
	"T_DIV_EQUAL",
	"T_CONCAT_EQUAL",
	"T_MOD_EQUAL",
	"T_AND_EQUAL",
	"T_OR_EQUAL",
	"T_XOR_EQUAL",
	"T_SL_EQUAL",
	"T_SR_EQUAL",
	"T_COALESCE_EQUAL",
	"T_BOOLEAN_OR",
	"T_BOOLEAN_AND",
	"T_POW",
	"T_SL",
	"T_SR",
	"T_IS_IDENTICAL",
	"T_IS_NOT_IDENTICAL",
	"T_IS_EQUAL",
	"T_IS_NOT_EQUAL",
	"T_IS_SMALLER_OR_EQUAL",
	"T_IS_GREATER_OR_EQUAL",
	"T_NULLSAFE_OBJECT_OPERATOR",
	"T_MATCH",
	"T_ATTRIBUTE",
	"T_NAME_RELATIVE",
	"T_NAME_QUALIFIED",
	"T_NAME_FULLY_QUALIFIED",
	"T_READONLY",
	"T_ENUM",
	"T_AMPERSAND_FOLLOWED_BY_VAR_OR_VARARG",
	"T_AMPERSAND_NOT_FOLLOWED_BY_VAR_OR_VARARG",
	"'\"'",
	"'`'",
	"'{'",
	"'}'",
	"';'",
	"':'",
	"'('",
	"')'",
	"'['",
	"']'",
	"'?'",
	"'&'",
	"'-'",
	"'+'",
	"'!'",
	"'~'",
	"'@'",
	"'$'",
	"','",
	"'|'",
	"'='",
	"'^'",
	"'*'",
	"'/'",
	"'%'",
	"'<'",
	"'>'",
	"'.'",
}

var yyStatenames = [...]string{}

const yyEofCode = 1
const yyErrCode = 2
const yyInitialStackSize = 16

// line internal/php8/php8.y:3465

// line yacctab:1
var yyExca = [...]int16{
	-1, 1,
	1, -1,
	-2, 0,
	-1, 2,
	1, 1,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 43,
	58, 503,
	79, 503,
	142, 503,
	154, 503,
	160, 503,
	-2, 499,
	-1, 45,
	29, 82,
	157, 82,
	172, 82,
	-2, 99,
	-1, 48,
	158, 509,
	-2, 518,
	-1, 84,
	79, 464,
	-2, 507,
	-1, 85,
	58, 508,
	142, 508,
	154, 508,
	160, 508,
	-2, 488,
	-1, 98,
	58, 505,
	79, 505,
	142, 505,
	154, 505,
	158, 511,
	160, 505,
	-2, 486,
	-1, 99,
	58, 506,
	79, 506,
	142, 506,
	154, 506,
	160, 506,
	-2, 487,
	-1, 103,
	79, 466,
	-2, 490,
	-1, 220,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 332,
	58, 503,
	79, 503,
	142, 503,
	154, 503,
	160, 503,
	-2, 387,
	-1, 335,
	158, 511,
	-2, 505,
	-1, 339,
	58, 503,
	79, 503,
	142, 503,
	154, 503,
	160, 503,
	-2, 389,
	-1, 402,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 457,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 412,
	-1, 458,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 413,
	-1, 459,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 414,
	-1, 460,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 415,
	-1, 461,
	140, 0,
	141, 0,
	177, 0,
	178, 0,
	-2, 416,
	-1, 462,
	140, 0,
	141, 0,
	177, 0,
	178, 0,
	-2, 417,
	-1, 463,
	140, 0,
	141, 0,
	177, 0,
	178, 0,
	-2, 418,
	-1, 464,
	140, 0,
	141, 0,
	177, 0,
	178, 0,
	-2, 419,
	-1, 465,
	116, 0,
	136, 0,
	137, 0,
	138, 0,
	139, 0,
	-2, 420,
	-1, 472,
	159, 189,
	170, 189,
	-2, 503,
	-1, 475,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 517,
	159, 547,
	161, 547,
	170, 547,
	-2, 503,
	-1, 522,
	58, 504,
	79, 504,
	142, 504,
	154, 504,
	158, 510,
	160, 504,
	-2, 422,
	-1, 539,
	158, 533,
	-2, 489,
	-1, 540,
	158, 535,
	-2, 525,
	-1, 571,
	157, 13,
	-2, 470,
	-1, 573,
	157, 46,
	-2, 441,
	-1, 575,
	157, 73,
	-2, 465,
	-1, 576,
	157, 11,
	-2, 110,
	-1, 585,
	158, 192,
	-2, 42,
	-1, 587,
	157, 61,
	-2, 498,
	-1, 588,
	157, 62,
	-2, 494,
	-1, 589,
	157, 63,
	-2, 496,
	-1, 590,
	157, 64,
	-2, 495,
	-1, 591,
	157, 65,
	-2, 491,
	-1, 592,
	157, 66,
	-2, 492,
	-1, 593,
	157, 67,
	-2, 493,
	-1, 594,
	157, 68,
	-2, 497,
	-1, 595,
	158, 192,
	-2, 69,
	-1, 598,
	159, 249,
	-2, 110,
	-1, 600,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 627,
	159, 249,
	-2, 110,
	-1, 628,
	159, 249,
	-2, 110,
	-1, 638,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 653,
	158, 510,
	-2, 504,
	-1, 719,
	159, 219,
	-2, 503,
	-1, 729,
	159, 249,
	-2, 110,
	-1, 752,
	159, 546,
	161, 546,
	170, 546,
	-2, 503,
	-1, 771,
	159, 86,
	-2, 110,
	-1, 782,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 792,
	159, 220,
	-2, 503,
	-1, 795,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 816,
	53, 110,
	54, 110,
	55, 110,
	94, 244,
	95, 244,
	96, 244,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 861,
	159, 219,
	-2, 503,
	-1, 863,
	159, 222,
	-2, 478,
	-1, 875,
	37, 330,
	39, 330,
	-2, 327,
	-1, 889,
	53, 110,
	54, 110,
	55, 110,
	94, 245,
	95, 245,
	96, 245,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 925,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 929,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 967,
	31, 235,
	32, 235,
	33, 235,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	155, 235,
	-2, 0,
	-1, 975,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 991,
	172, 53,
	-2, 266,
	-1, 992,
	172, 54,
	-2, 267,
	-1, 1013,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 1014,
	31, 234,
	32, 234,
	33, 234,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	155, 234,
	-2, 0,
	-1, 1019,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 1024,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 1054,
	159, 249,
	-2, 110,
	-1, 1062,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
	-1, 1073,
	53, 110,
	54, 110,
	55, 110,
	100, 110,
	101, 110,
	148, 110,
	149, 110,
	-2, 0,
}

const yyPrivate = 57344

const yyLast = 9287

var yyAct = [...]int16{
	30, 877, 828, 989, 220, 734, 128, 478, 692, 998,
	987, 40, 985, 857, 919, 979, 990, 223, 739, 718,
	39, 832, 738, 732, 228, 228, 228, 823, 837, 242,
	425, 700, 323, 701, 536, 694, 566, 556, 730, 281,
	325, 471, 736, 785, 367, 508, 420, 37, 419, 10,
	544, 9, 418, 327, 331, 8, 241, 340, 341, 342,
	343, 344, 238, 218, 398, 345, 346, 347, 348, 349,
	350, 351, 234, 354, 217, 208, 362, 363, 364, 365,
	417, 81, 209, 7, 278, 292, 416, 79, 2, 6,
	105, 382, 383, 371, 385, 386, 545, 98, 376, 415,
	1043, 216, 5, 280, 378, 46, 227, 1032, 235, 100,
	1028, 995, 750, 703, 206, 237, 118, 953, 647, 944,
	222, 943, 436, 271, 358, 411, 1052, 212, 955, 1029,
	1025, 231, 232, 271, 219, 810, 118, 952, 912, 910,
	1030, 604, 103, 1030, 1026, 284, 437, 99, 625, 286,
	434, 810, 335, 335, 1022, 404, 432, 271, 900, 410,
	438, 898, 409, 895, 435, 257, 260, 261, 377, 403,
	433, 368, 267, 269, 118, 257, 410, 373, 844, 778,
	771, 687, 682, 404, 391, 118, 623, 614, 535, 515,
	863, 219, 759, 118, 658, 755, 255, 254, 669, 257,
	392, 394, 336, 336, 654, 641, 256, 258, 259, 266,
	268, 253, 514, 402, 664, 1068, 256, 258, 259, 665,
	1020, 1016, 422, 369, 85, 1054, 427, 428, 927, 369,
	255, 254, 926, 917, 890, 870, 801, 800, 39, 790,
	256, 258, 259, 769, 765, 439, 440, 441, 442, 443,
	444, 445, 446, 447, 448, 449, 450, 451, 452, 453,
	454, 455, 456, 457, 458, 459, 460, 461, 462, 463,
	464, 465, 101, 467, 469, 973, 473, 763, 510, 333,
	333, 754, 475, 406, 716, 705, 691, 655, 646, 424,
	320, 529, 399, 102, 230, 934, 118, 921, 920, 829,
	239, 866, 490, 492, 493, 494, 495, 496, 497, 498,
	499, 500, 501, 502, 503, 504, 390, 237, 505, 228,
	507, 212, 405, 327, 218, 549, 793, 753, 477, 284,
	518, 102, 729, 286, 395, 520, 481, 482, 483, 327,
	713, 491, 102, 714, 43, 659, 551, 359, 384, 381,
	479, 380, 379, 377, 228, 513, 353, 322, 393, 628,
	627, 531, 373, 612, 610, 466, 598, 512, 509, 509,
	359, 521, 335, 519, 321, 530, 552, 484, 474, 487,
	554, 557, 558, 337, 485, 559, 319, 539, 317, 359,
	271, 562, 318, 528, 567, 230, 327, 486, 276, 332,
	339, 275, 511, 511, 274, 226, 225, 221, 122, 550,
	568, 1072, 609, 1071, 369, 852, 853, 814, 542, 690,
	39, 548, 336, 635, 808, 506, 335, 547, 596, 121,
	119, 120, 257, 260, 261, 852, 853, 618, 489, 242,
	808, 542, 375, 279, 808, 808, 741, 742, 401, 10,
	400, 9, 540, 102, 1061, 8, 607, 1039, 218, 335,
	523, 1038, 808, 255, 254, 537, 1034, 1015, 968, 621,
	928, 923, 916, 256, 258, 259, 336, 914, 253, 849,
	603, 525, 526, 7, 284, 608, 636, 602, 637, 6,
	600, 845, 639, 39, 638, 619, 815, 789, 617, 333,
	788, 786, 5, 784, 781, 622, 616, 613, 599, 336,
	488, 644, 525, 476, 526, 235, 327, 649, 212, 431,
	327, 526, 525, 80, 430, 429, 893, 629, 630, 891,
	121, 119, 120, 842, 1005, 667, 776, 666, 922, 80,
	1045, 982, 671, 80, 80, 976, 118, 839, 228, 674,
	983, 527, 652, 333, 945, 886, 648, 524, 851, 932,
	892, 80, 871, 865, 811, 762, 689, 733, 697, 631,
	606, 331, 805, 362, 363, 365, 657, 661, 662, 277,
	668, 382, 383, 956, 385, 386, 333, 913, 376, 909,
	681, 282, 283, 908, 378, 675, 676, 509, 509, 686,
	80, 214, 257, 958, 679, 643, 1042, 118, 546, 645,
	695, 360, 361, 709, 427, 711, 378, 704, 39, 472,
	370, 715, 951, 293, 294, 230, 368, 949, 672, 359,
	359, 511, 511, 677, 896, 670, 727, 728, 214, 695,
	695, 791, 271, 737, 710, 378, 378, 10, 751, 9,
	424, 296, 297, 8, 673, 731, 39, 633, 377, 553,
	359, 480, 359, 237, 720, 717, 757, 373, 1040, 359,
	359, 295, 214, 517, 224, 117, 741, 742, 369, 408,
	214, 7, 1041, 557, 257, 408, 597, 6, 567, 357,
	118, 768, 869, 881, 882, 883, 880, 879, 878, 210,
	5, 211, 780, 230, 568, 118, 533, 210, 239, 211,
	230, 707, 408, 782, 740, 224, 117, 423, 761, 369,
	764, 335, 335, 327, 766, 724, 285, 117, 770, 756,
	795, 775, 118, 605, 777, 542, 779, 215, 802, 407,
	747, 695, 884, 812, 807, 282, 283, 378, 335, 230,
	378, 817, 219, 816, 327, 794, 1, 809, 787, 118,
	121, 119, 120, 827, 527, 298, 300, 299, 689, 799,
	798, 336, 336, 803, 215, 213, 735, 904, 743, 702,
	939, 80, 938, 695, 543, 427, 818, 389, 287, 378,
	118, 838, 337, 207, 327, 387, 291, 126, 336, 337,
	39, 660, 875, 867, 820, 772, 396, 830, 215, 843,
	846, 860, 872, 39, 885, 850, 215, 213, 335, 889,
	873, 807, 80, 561, 360, 361, 862, 378, 847, 997,
	854, 720, 856, 80, 39, 888, 901, 80, 121, 119,
	120, 288, 289, 118, 813, 121, 119, 120, 333, 333,
	355, 375, 903, 918, 388, 360, 361, 894, 911, 634,
	897, 899, 102, 994, 925, 366, 230, 831, 336, 797,
	929, 933, 726, 935, 804, 333, 822, 941, 915, 821,
	735, 924, 852, 853, 121, 119, 120, 293, 294, 335,
	858, 838, 62, 826, 937, 936, 827, 948, 824, 868,
	807, 950, 855, 852, 853, 632, 378, 39, 360, 361,
	470, 706, 963, 1070, 712, 743, 946, 741, 742, 942,
	841, 906, 940, 947, 967, 118, 840, 954, 838, 960,
	905, 961, 838, 966, 902, 295, 290, 975, 959, 336,
	970, 326, 962, 39, 42, 333, 123, 39, 807, 698,
	1006, 735, 1007, 887, 378, 740, 699, 838, 807, 773,
	988, 1004, 774, 14, 378, 41, 555, 230, 472, 719,
	1013, 1014, 743, 978, 981, 1008, 1009, 977, 1010, 1011,
	18, 1019, 743, 984, 564, 39, 542, 1024, 17, 560,
	360, 361, 542, 39, 1027, 752, 1035, 930, 240, 1031,
	656, 121, 119, 120, 993, 374, 49, 1037, 48, 931,
	1033, 104, 50, 1021, 1004, 743, 333, 964, 741, 742,
	84, 538, 82, 73, 352, 324, 858, 63, 83, 1050,
	372, 39, 39, 1053, 1051, 118, 542, 39, 1047, 1049,
	527, 542, 39, 1058, 1060, 542, 1055, 743, 1057, 118,
	1062, 61, 743, 743, 397, 743, 743, 1002, 1063, 1059,
	1001, 1064, 981, 1065, 1000, 792, 695, 999, 806, 271,
	236, 1069, 378, 233, 44, 1066, 796, 1073, 542, 723,
	39, 743, 246, 248, 247, 271, 693, 1003, 426, 1056,
	542, 39, 412, 3, 972, 743, 743, 230, 743, 743,
	360, 361, 121, 119, 120, 957, 542, 907, 0, 273,
	270, 257, 260, 261, 360, 361, 1017, 0, 0, 118,
	0, 0, 0, 0, 356, 244, 245, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 861, 0, 0, 0,
	1003, 0, 255, 254, 251, 250, 0, 0, 741, 742,
	921, 920, 256, 258, 259, 0, 272, 0, 255, 254,
	0, 0, 0, 0, 0, 249, 0, 252, 256, 258,
	259, 266, 268, 253, 246, 248, 247, 271, 0, 0,
	0, 0, 0, 735, 360, 361, 0, 0, 0, 835,
	834, 833, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 273, 270, 974, 0, 0, 0, 980, 0, 0,
	986, 0, 0, 0, 0, 0, 0, 244, 245, 257,
	260, 261, 262, 263, 264, 265, 267, 269, 0, 0,
	1012, 0, 121, 119, 120, 836, 251, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 819, 272, 839,
	255, 254, 0, 0, 1023, 0, 0, 249, 0, 252,
	256, 258, 259, 266, 268, 253, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 580, 581, 571, 148,
	95, 96, 45, 0, 118, 980, 0, 0, 0, 986,
	115, 152, 153, 154, 155, 156, 157, 158, 159, 160,
	161, 162, 182, 183, 184, 185, 186, 174, 175, 585,
	595, 177, 178, 163, 164, 165, 574, 167, 168, 169,
	170, 171, 578, 579, 0, 194, 192, 193, 189, 190,
	0, 0, 569, 586, 188, 587, 588, 590, 589, 591,
	592, 0, 0, 0, 0, 0, 0, 97, 0, 0,
	0, 0, 191, 594, 593, 0, 565, 582, 583, 584,
	141, 142, 143, 144, 576, 570, 149, 150, 151, 572,
	573, 575, 130, 131, 132, 133, 134, 54, 55, 77,
	64, 65, 66, 67, 68, 69, 70, 315, 316, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	302, 303, 304, 305, 306, 307, 308, 309, 310, 311,
	312, 313, 314, 0, 0, 577, 80, 121, 119, 120,
	135, 205, 0, 0, 116, 74, 0, 0, 0, 0,
	60, 563, 52, 0, 0, 0, 57, 56, 58, 59,
	72, 102, 580, 581, 571, 148, 95, 96, 45, 0,
	118, 0, 0, 0, 301, 0, 115, 152, 153, 154,
	155, 156, 157, 158, 159, 160, 161, 162, 182, 183,
	184, 185, 186, 174, 175, 585, 595, 177, 178, 163,
	164, 165, 574, 167, 168, 169, 170, 171, 578, 579,
	0, 194, 192, 193, 189, 190, 0, 0, 569, 586,
	188, 587, 588, 590, 589, 591, 592, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 191, 594,
	593, 0, 767, 582, 583, 584, 141, 142, 143, 144,
	576, 570, 149, 150, 151, 572, 573, 575, 130, 131,
	132, 133, 134, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 577, 80, 121, 119, 120, 135, 205, 0, 0,
	116, 74, 0, 874, 0, 0, 60, 0, 52, 0,
	0, 0, 57, 56, 58, 59, 72, 102, 4, 876,
	90, 91, 71, 47, 95, 96, 45, 0, 118, 0,
	29, 0, 0, 0, 115, 28, 20, 19, 0, 21,
	0, 32, 0, 33, 0, 0, 22, 0, 0, 0,
	23, 24, 36, 38, 117, 15, 25, 35, 0, 0,
	78, 13, 0, 26, 0, 31, 88, 89, 11, 0,
	881, 882, 883, 880, 879, 878, 51, 114, 0, 113,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 12, 112, 108, 0,
	0, 92, 93, 94, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 75, 76, 27, 0, 0, 0, 884,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	80, 121, 119, 120, 0, 0, 0, 0, 116, 74,
	16, 696, 34, 0, 60, 0, 52, 0, 0, 0,
	57, 56, 58, 59, 72, 102, 4, 0, 90, 91,
	71, 47, 95, 96, 45, 0, 118, 0, 29, 0,
	0, 0, 115, 28, 20, 19, 0, 21, 0, 32,
	0, 33, 0, 0, 22, 0, 0, 0, 23, 24,
	36, 38, 117, 15, 25, 35, 0, 0, 78, 13,
	0, 26, 0, 31, 88, 89, 11, 0, 0, 0,
	0, 0, 0, 0, 51, 114, 0, 113, 109, 110,
	111, 106, 107, 0, 0, 0, 0, 0, 0, 97,
	0, 0, 0, 0, 12, 112, 108, 0, 0, 92,
	93, 94, 0, 0, 0, 0, 86, 53, 0, 0,
	0, 75, 76, 27, 0, 0, 0, 0, 0, 54,
	55, 77, 64, 65, 66, 67, 68, 69, 70, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 87, 80, 121,
	119, 120, 0, 0, 0, 0, 116, 74, 16, 601,
	34, 0, 60, 0, 52, 0, 0, 0, 57, 56,
	58, 59, 72, 102, 136, 137, 147, 148, 0, 0,
	219, 0, 118, 0, 0, 0, 0, 0, 0, 152,
	153, 154, 155, 156, 157, 158, 159, 160, 161, 162,
	182, 183, 184, 185, 186, 174, 175, 176, 203, 177,
	178, 163, 164, 165, 166, 167, 168, 169, 170, 171,
	172, 173, 0, 194, 192, 193, 189, 190, 0, 0,
	181, 187, 188, 195, 196, 198, 197, 199, 200, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	191, 202, 201, 0, 0, 138, 139, 140, 141, 142,
	143, 144, 145, 146, 149, 150, 151, 179, 180, 129,
	130, 131, 132, 133, 134, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 204, 0, 0, 0, 0, 135, 205,
	0, 0, 0, 0, 541, 4, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 102,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 15, 25, 35, 0, 0, 78, 13, 0,
	26, 0, 31, 88, 89, 11, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 12, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 414, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 421, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 0, 0, 116, 74, 16, 1074, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 414, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 421, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 0,
	0, 116, 74, 16, 1067, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 414,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 421,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 0, 0, 116,
	74, 16, 1048, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 414, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 421, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 0, 0, 116, 74, 16,
	1046, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 414, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 1044, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 421, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 414, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 421, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 0, 0, 116, 74, 16, 1018, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 414, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 421, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 0,
	0, 116, 74, 16, 971, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 414,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 969, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 421,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 414, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 864, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 421, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 0, 0, 116, 74, 16,
	0, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 414, 0, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 848, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	38, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 421, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 0, 0, 116, 74, 16, 0, 34,
	0, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 414, 0, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 38, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 421, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 746, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 0, 0, 116, 74, 16, 0, 34, 0, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 414, 0, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 38, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 421, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 0,
	0, 116, 74, 16, 626, 34, 0, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 414,
	0, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 38, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 421,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 0, 0, 116,
	74, 16, 413, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 414, 0, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 38, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 421, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 0, 0, 116, 74, 16,
	0, 34, 0, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 90, 91, 71, 47, 95,
	96, 45, 0, 118, 0, 29, 0, 0, 0, 115,
	28, 20, 19, 0, 21, 0, 32, 0, 33, 0,
	0, 22, 0, 0, 0, 23, 24, 36, 224, 117,
	0, 25, 35, 0, 0, 78, 0, 0, 26, 0,
	31, 88, 89, 0, 0, 0, 0, 0, 0, 0,
	0, 51, 114, 0, 113, 109, 110, 111, 106, 107,
	0, 0, 0, 0, 0, 0, 97, 0, 0, 0,
	0, 0, 112, 108, 0, 0, 92, 93, 94, 0,
	0, 0, 0, 86, 53, 0, 0, 0, 75, 76,
	27, 0, 0, 0, 0, 0, 54, 55, 77, 64,
	65, 66, 67, 68, 69, 70, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 87, 80, 121, 119, 120, 0,
	0, 0, 0, 116, 74, 16, 0, 34, 859, 60,
	0, 52, 0, 0, 0, 57, 56, 58, 59, 72,
	102, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 0, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 224, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 0, 0, 116,
	74, 16, 0, 34, 965, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 90, 91, 71,
	47, 95, 96, 45, 0, 118, 0, 29, 0, 0,
	0, 115, 28, 20, 19, 0, 21, 0, 32, 0,
	33, 0, 0, 22, 0, 0, 0, 23, 24, 36,
	224, 117, 0, 25, 35, 0, 0, 78, 0, 0,
	26, 0, 31, 88, 89, 0, 0, 0, 0, 0,
	0, 0, 0, 51, 114, 0, 113, 109, 110, 111,
	106, 107, 0, 0, 0, 0, 0, 0, 97, 0,
	0, 0, 0, 0, 112, 108, 0, 0, 92, 93,
	94, 0, 0, 0, 0, 86, 53, 0, 0, 0,
	75, 76, 27, 0, 0, 0, 0, 0, 54, 55,
	77, 64, 65, 66, 67, 68, 69, 70, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 87, 80, 121, 119,
	120, 0, 0, 0, 0, 116, 74, 16, 0, 34,
	748, 60, 0, 52, 0, 0, 0, 57, 56, 58,
	59, 72, 102, 90, 91, 71, 47, 95, 96, 45,
	0, 118, 0, 29, 0, 0, 0, 115, 28, 20,
	19, 0, 21, 0, 32, 0, 33, 0, 0, 22,
	0, 0, 0, 23, 24, 36, 224, 117, 0, 25,
	35, 0, 0, 78, 0, 0, 26, 0, 31, 88,
	89, 0, 0, 0, 0, 0, 0, 0, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 27, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 0, 0, 0,
	0, 116, 74, 16, 0, 34, 725, 60, 0, 52,
	0, 0, 0, 57, 56, 58, 59, 72, 102, 90,
	91, 71, 47, 95, 96, 45, 0, 118, 0, 29,
	0, 0, 0, 115, 28, 20, 19, 0, 21, 0,
	32, 0, 33, 0, 0, 22, 0, 0, 0, 23,
	24, 36, 224, 117, 0, 25, 35, 0, 0, 78,
	0, 0, 26, 0, 31, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 27, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 0, 0, 0, 0, 116, 74, 16,
	0, 34, 708, 60, 0, 52, 0, 0, 0, 57,
	56, 58, 59, 72, 102, 136, 137, 147, 148, 0,
	0, 45, 0, 0, 0, 0, 0, 0, 0, 0,
	152, 153, 154, 155, 156, 157, 158, 159, 160, 161,
	162, 182, 183, 184, 185, 186, 174, 175, 176, 203,
	177, 178, 163, 164, 165, 166, 167, 168, 169, 170,
	171, 172, 173, 0, 194, 192, 193, 189, 190, 0,
	0, 181, 991, 992, 195, 196, 198, 197, 199, 200,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 191, 202, 201, 0, 0, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 149, 150, 151, 179, 180,
	129, 130, 131, 132, 133, 134, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 204, 0, 121, 119, 120, 135,
	205, 90, 91, 71, 47, 95, 96, 45, 0, 118,
	0, 29, 0, 839, 0, 115, 28, 20, 19, 0,
	21, 0, 32, 0, 33, 0, 0, 22, 0, 0,
	0, 23, 24, 36, 224, 117, 0, 25, 35, 0,
	0, 78, 0, 0, 26, 0, 31, 88, 89, 0,
	0, 0, 0, 0, 0, 0, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 27, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 0, 0, 116,
	74, 16, 0, 34, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 136, 137, 147,
	148, 0, 0, 45, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	176, 203, 177, 178, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 194, 192, 193, 189,
	190, 0, 0, 181, 187, 188, 195, 196, 198, 197,
	199, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 202, 201, 0, 0, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 149, 150, 151,
	179, 180, 129, 130, 131, 132, 133, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 204, 0, 121, 119,
	120, 135, 205, 136, 137, 147, 148, 0, 1036, 45,
	0, 0, 0, 0, 0, 0, 0, 0, 152, 153,
	154, 155, 156, 157, 158, 159, 160, 161, 162, 182,
	183, 184, 185, 186, 174, 175, 176, 203, 177, 178,
	163, 164, 165, 166, 167, 168, 169, 170, 171, 172,
	173, 0, 194, 192, 193, 189, 190, 0, 0, 181,
	187, 188, 195, 196, 198, 197, 199, 200, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 191,
	202, 201, 0, 0, 138, 139, 140, 141, 142, 143,
	144, 145, 146, 149, 150, 151, 179, 180, 129, 130,
	131, 132, 133, 134, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 204, 0, 121, 119, 120, 135, 205, 136,
	137, 147, 148, 0, 996, 125, 0, 0, 0, 0,
	0, 0, 0, 0, 152, 153, 154, 155, 156, 157,
	158, 159, 160, 161, 162, 182, 183, 184, 185, 186,
	174, 175, 176, 203, 177, 178, 163, 164, 165, 166,
	167, 168, 169, 170, 171, 172, 173, 0, 194, 192,
	193, 189, 190, 0, 0, 181, 187, 188, 195, 196,
	198, 197, 199, 200, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 191, 202, 201, 0, 0,
	138, 139, 140, 141, 142, 143, 144, 145, 146, 149,
	150, 151, 179, 180, 129, 130, 131, 132, 133, 134,
	90, 91, 71, 0, 95, 96, 230, 0, 118, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 224, 117, 0, 0, 0, 204, 0,
	78, 127, 0, 135, 205, 0, 88, 89, 0, 124,
	0, 0, 0, 0, 0, 0, 330, 114, 0, 113,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 112, 108, 0,
	329, 92, 93, 94, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 75, 76, 229, 0, 0, 0, 0,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	80, 121, 119, 120, 224, 117, 328, 0, 116, 74,
	0, 78, 0, 0, 60, 0, 52, 88, 89, 0,
	57, 56, 58, 59, 72, 102, 0, 51, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 0, 0, 282, 283, 116,
	74, 0, 0, 0, 0, 60, 0, 52, 0, 0,
	0, 57, 56, 58, 59, 72, 102, 136, 137, 147,
	148, 0, 0, 219, 0, 0, 0, 0, 0, 0,
	0, 0, 152, 153, 154, 155, 156, 157, 158, 159,
	160, 161, 162, 182, 183, 184, 185, 186, 174, 175,
	176, 203, 177, 178, 163, 164, 165, 166, 167, 168,
	169, 170, 171, 172, 173, 0, 194, 192, 193, 189,
	190, 0, 0, 181, 187, 188, 195, 196, 198, 197,
	199, 200, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 191, 202, 201, 0, 0, 138, 139,
	140, 141, 142, 143, 144, 145, 146, 149, 150, 151,
	179, 180, 129, 130, 131, 132, 133, 134, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 136, 137,
	147, 148, 0, 0, 219, 0, 204, 0, 0, 0,
	0, 135, 205, 152, 153, 154, 155, 156, 157, 158,
	159, 160, 161, 162, 182, 183, 184, 185, 186, 174,
	175, 176, 203, 177, 178, 163, 164, 165, 166, 167,
	168, 169, 170, 171, 172, 173, 0, 194, 192, 193,
	189, 190, 0, 0, 181, 187, 188, 195, 196, 198,
	197, 199, 200, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 191, 202, 201, 0, 0, 138,
	139, 140, 141, 142, 143, 144, 145, 146, 149, 150,
	151, 179, 180, 881, 882, 883, 880, 879, 878, 90,
	91, 71, 0, 95, 96, 230, 0, 118, 0, 0,
	0, 0, 0, 115, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 825, 0,
	0, 0, 224, 117, 0, 0, 0, 204, 0, 78,
	0, 0, 884, 205, 0, 88, 89, 0, 0, 0,
	0, 0, 0, 0, 0, 51, 114, 0, 113, 109,
	110, 111, 106, 107, 0, 0, 0, 0, 0, 0,
	97, 0, 0, 0, 0, 0, 112, 108, 0, 0,
	92, 93, 94, 0, 0, 0, 0, 86, 53, 0,
	0, 0, 75, 76, 229, 0, 0, 0, 0, 0,
	54, 55, 77, 64, 65, 66, 67, 68, 69, 70,
	90, 91, 71, 0, 95, 96, 230, 0, 118, 0,
	0, 0, 0, 0, 115, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 87, 80,
	121, 119, 120, 224, 117, 0, 0, 116, 74, 0,
	78, 0, 0, 60, 0, 52, 88, 89, 0, 57,
	56, 58, 59, 72, 102, 0, 51, 114, 0, 113,
	109, 110, 111, 106, 107, 0, 0, 0, 0, 0,
	0, 97, 0, 0, 0, 0, 0, 112, 108, 0,
	0, 92, 93, 94, 0, 0, 0, 0, 86, 53,
	0, 0, 0, 75, 76, 229, 0, 0, 0, 0,
	0, 54, 55, 77, 64, 65, 66, 67, 68, 69,
	70, 90, 91, 71, 0, 95, 96, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 87,
	80, 121, 119, 120, 224, 117, 0, 0, 116, 74,
	0, 78, 0, 0, 60, 688, 52, 88, 89, 0,
	57, 56, 58, 59, 72, 102, 0, 651, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 97, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 92, 93, 94, 0, 0, 0, 0, 86,
	53, 0, 0, 0, 75, 76, 229, 0, 0, 0,
	0, 0, 54, 55, 77, 64, 65, 66, 67, 68,
	69, 70, 90, 91, 71, 0, 95, 96, 230, 532,
	118, 0, 0, 0, 0, 0, 115, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	87, 80, 121, 119, 120, 224, 117, 650, 0, 116,
	74, 0, 78, 0, 0, 60, 0, 52, 88, 89,
	0, 57, 56, 58, 59, 72, 102, 0, 51, 114,
	0, 113, 109, 110, 111, 106, 107, 0, 0, 0,
	0, 0, 0, 97, 0, 0, 0, 0, 0, 112,
	108, 0, 0, 92, 93, 94, 0, 0, 0, 0,
	86, 53, 0, 0, 0, 75, 76, 229, 0, 0,
	0, 0, 0, 54, 55, 77, 64, 65, 66, 67,
	68, 69, 70, 90, 91, 71, 0, 95, 96, 230,
	0, 118, 0, 0, 0, 0, 0, 115, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 87, 80, 121, 119, 120, 224, 117, 0, 0,
	116, 74, 0, 78, 0, 0, 60, 0, 52, 88,
	89, 0, 57, 56, 58, 59, 72, 102, 0, 51,
	114, 0, 113, 109, 110, 111, 106, 107, 0, 0,
	0, 0, 0, 0, 97, 0, 0, 0, 0, 0,
	112, 108, 0, 0, 92, 93, 94, 0, 0, 0,
	0, 86, 53, 0, 0, 0, 75, 76, 229, 0,
	0, 0, 0, 0, 54, 55, 77, 64, 65, 66,
	67, 68, 69, 70, 90, 91, 71, 0, 95, 96,
	230, 0, 118, 0, 0, 0, 0, 0, 115, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 87, 80, 121, 119, 120, 224, 117, 0,
	0, 116, 74, 0, 78, 0, 468, 60, 0, 52,
	88, 89, 0, 57, 56, 58, 59, 72, 102, 0,
	51, 114, 0, 113, 109, 110, 111, 106, 107, 0,
	0, 0, 0, 0, 0, 97, 0, 0, 0, 0,
	0, 112, 108, 0, 0, 92, 93, 94, 0, 0,
	0, 0, 86, 53, 0, 0, 0, 75, 76, 229,
	0, 0, 0, 0, 0, 54, 55, 77, 64, 65,
	66, 67, 68, 69, 70, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 246, 248, 247,
	271, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 87, 80, 121, 119, 120, 0, 0,
	0, 0, 116, 74, 273, 270, 0, 0, 60, 0,
	52, 0, 0, 0, 57, 56, 58, 59, 72, 102,
	244, 245, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 246, 248, 247, 271, 0, 0, 0, 0, 251,
	250, 0, 0, 0, 0, 0, 0, 0, 783, 0,
	0, 272, 0, 255, 254, 0, 0, 0, 273, 270,
	249, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 0, 0, 244, 245, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 246, 248, 247, 271, 0,
	0, 0, 0, 251, 250, 0, 0, 0, 760, 0,
	0, 0, 0, 0, 0, 272, 0, 255, 254, 0,
	0, 0, 273, 270, 249, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 0, 0, 244, 245,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 246,
	248, 247, 271, 0, 0, 0, 0, 251, 250, 0,
	0, 0, 758, 0, 0, 0, 0, 0, 0, 272,
	0, 255, 254, 0, 0, 0, 273, 270, 249, 0,
	252, 256, 258, 259, 266, 268, 253, 0, 0, 0,
	0, 0, 244, 245, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 246, 248, 247, 271, 0, 0, 0,
	0, 251, 250, 0, 0, 0, 749, 0, 0, 0,
	0, 0, 0, 272, 0, 255, 254, 0, 0, 0,
	273, 270, 249, 0, 252, 256, 258, 259, 266, 268,
	253, 0, 0, 0, 0, 0, 244, 245, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 246, 248, 247,
	271, 0, 0, 0, 0, 251, 250, 0, 0, 0,
	0, 0, 0, 0, 745, 0, 0, 272, 0, 255,
	254, 0, 0, 0, 273, 270, 249, 0, 252, 256,
	258, 259, 266, 268, 253, 0, 0, 0, 0, 0,
	244, 245, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 246, 248, 247, 271, 0, 0, 0, 0, 251,
	250, 0, 0, 0, 0, 0, 0, 0, 744, 0,
	0, 272, 0, 255, 254, 0, 0, 0, 273, 270,
	249, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 0, 0, 244, 245, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 246, 248, 247, 271, 0,
	0, 0, 0, 251, 250, 0, 0, 0, 685, 0,
	0, 0, 0, 0, 0, 272, 0, 255, 254, 0,
	0, 0, 273, 270, 249, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 0, 0, 244, 245,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 246,
	248, 247, 271, 0, 0, 0, 0, 251, 250, 0,
	0, 0, 0, 0, 0, 0, 684, 0, 0, 272,
	0, 255, 254, 0, 0, 0, 273, 270, 249, 0,
	252, 256, 258, 259, 266, 268, 253, 0, 0, 0,
	0, 0, 244, 245, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 246, 248, 247, 271, 0, 0, 0,
	0, 251, 250, 0, 0, 0, 0, 0, 0, 0,
	683, 0, 0, 272, 0, 255, 254, 0, 0, 0,
	273, 270, 249, 0, 252, 256, 258, 259, 266, 268,
	253, 0, 0, 0, 0, 0, 244, 245, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 246, 248, 247,
	271, 0, 0, 0, 0, 251, 250, 0, 0, 0,
	0, 0, 0, 0, 680, 0, 0, 272, 0, 255,
	254, 0, 0, 0, 273, 270, 249, 0, 252, 256,
	258, 259, 266, 268, 253, 0, 0, 0, 0, 0,
	244, 245, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 246, 248, 247, 271, 0, 0, 0, 0, 251,
	250, 0, 0, 0, 0, 0, 0, 0, 678, 0,
	0, 272, 0, 255, 254, 0, 0, 0, 273, 270,
	249, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 0, 0, 244, 245, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 246, 248, 247, 271, 0,
	0, 0, 0, 251, 250, 0, 0, 0, 663, 0,
	0, 0, 0, 0, 0, 272, 0, 255, 254, 0,
	0, 0, 273, 270, 249, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 0, 0, 244, 245,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 246,
	248, 247, 271, 0, 0, 0, 0, 251, 250, 0,
	0, 0, 0, 0, 0, 0, 653, 0, 0, 272,
	0, 255, 254, 0, 0, 0, 273, 270, 249, 0,
	252, 256, 258, 259, 266, 268, 253, 0, 0, 0,
	0, 0, 244, 245, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 246, 248, 247, 271, 0, 0, 624,
	0, 251, 250, 0, 0, 0, 642, 0, 0, 0,
	0, 0, 0, 272, 0, 255, 254, 0, 0, 0,
	273, 270, 249, 0, 252, 256, 258, 259, 266, 268,
	253, 0, 0, 0, 0, 0, 244, 245, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 0, 0, 0,
	0, 0, 0, 0, 0, 251, 250, 0, 246, 248,
	247, 271, 0, 0, 640, 0, 0, 272, 0, 255,
	254, 0, 0, 0, 0, 0, 249, 0, 252, 256,
	258, 259, 266, 268, 253, 273, 270, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 244, 245, 257, 260, 261, 262, 263, 264, 265,
	267, 269, 246, 248, 247, 271, 0, 0, 0, 0,
	251, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 255, 254, 0, 0, 0, 273,
	270, 249, 0, 252, 256, 258, 259, 266, 268, 253,
	0, 0, 0, 0, 0, 244, 245, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 246, 248, 247, 271,
	0, 0, 0, 0, 251, 250, 0, 0, 0, 0,
	0, 620, 0, 0, 0, 0, 272, 0, 255, 254,
	0, 0, 0, 273, 270, 249, 0, 252, 256, 258,
	259, 266, 268, 253, 0, 0, 0, 0, 0, 244,
	245, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	246, 248, 247, 271, 0, 0, 0, 0, 251, 250,
	0, 0, 0, 0, 0, 0, 0, 615, 0, 0,
	272, 0, 255, 254, 0, 0, 0, 273, 270, 249,
	0, 252, 256, 258, 259, 266, 268, 253, 0, 0,
	0, 0, 0, 244, 245, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 246, 248, 247, 271, 0, 0,
	0, 0, 251, 250, 0, 0, 0, 0, 0, 0,
	0, 611, 0, 0, 272, 0, 255, 254, 0, 516,
	0, 273, 270, 249, 0, 252, 256, 258, 259, 266,
	268, 253, 0, 0, 0, 0, 0, 244, 245, 257,
	260, 261, 262, 263, 264, 265, 267, 269, 246, 248,
	247, 271, 0, 0, 0, 0, 251, 250, 0, 0,
	0, 0, 0, 0, 0, 522, 0, 0, 272, 0,
	255, 254, 0, 0, 0, 273, 270, 249, 0, 252,
	256, 258, 259, 266, 268, 253, 0, 0, 0, 0,
	0, 244, 245, 257, 260, 261, 262, 263, 264, 265,
	267, 269, 246, 248, 247, 271, 0, 0, 0, 0,
	251, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 272, 0, 255, 254, 0, 0, 0, 273,
	270, 249, 0, 252, 256, 258, 259, 266, 268, 253,
	0, 0, 0, 0, 0, 244, 245, 257, 260, 261,
	262, 263, 264, 265, 267, 269, 246, 248, 247, 271,
	0, 0, 0, 0, 251, 250, 0, 0, 0, 0,
	243, 0, 0, 0, 0, 0, 272, 0, 255, 254,
	0, 0, 0, 273, 270, 249, 0, 252, 256, 258,
	259, 266, 268, 253, 0, 0, 0, 0, 0, 244,
	245, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	248, 247, 271, 0, 0, 0, 0, 0, 251, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	272, 0, 255, 254, 0, 0, 273, 270, 0, 249,
	0, 252, 256, 258, 259, 266, 268, 253, 0, 0,
	0, 0, 244, 245, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 247, 271, 0, 0, 0, 0, 0,
	0, 251, 250, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 272, 534, 255, 254, 0, 273, 270,
	0, 0, 249, 0, 252, 256, 258, 259, 266, 268,
	253, 0, 0, 0, 244, 245, 257, 260, 261, 262,
	263, 264, 265, 267, 269, 0, 271, 0, 0, 0,
	0, 0, 0, 251, 250, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 272, 0, 255, 254, 0,
	273, 270, 0, 0, 249, 0, 252, 256, 258, 259,
	266, 268, 253, 0, 0, 0, 244, 245, 257, 260,
	261, 262, 263, 264, 265, 267, 269, 271, 0, 0,
	0, 0, 0, 0, 0, 251, 250, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 272, 0, 255,
	254, 273, 270, 0, 0, 0, 249, 0, 252, 256,
	258, 259, 266, 268, 253, 0, 0, 244, 245, 257,
	260, 261, 262, 263, 264, 265, 267, 269, 271, 0,
	0, 0, 0, 0, 0, 0, 251, 250, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 272, 0,
	255, 254, 273, 270, 0, 0, 0, 249, 0, 252,
	256, 258, 259, 266, 268, 253, 0, 0, 244, 245,
	257, 260, 261, 262, 263, 264, 265, 267, 269, 271,
	0, 0, 0, 0, 0, 0, 0, 251, 250, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 255, 254, 0, 270, 0, 0, 0, 249, 0,
	252, 256, 258, 259, 266, 268, 253, 0, 0, 0,
	245, 257, 260, 261, 262, 263, 264, 265, 267, 269,
	271, 0, 0, 0, 0, 0, 0, 0, 251, 250,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 255, 254, 0, 270, 0, 0, 0, 249,
	0, 252, 256, 258, 259, 266, 268, 253, 0, 0,
	0, 0, 257, 260, 261, 262, 263, 264, 265, 267,
	269, 271, 0, 0, 0, 0, 0, 0, 0, 251,
	250, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 255, 254, 0, 270, 0, 0, 0,
	249, 0, 252, 256, 258, 259, 266, 268, 253, 0,
	0, 0, 0, 257, 260, 261, 262, 263, 264, 265,
	267, 269, 271, 0, 0, 0, 0, 0, 0, 0,
	251, 250, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 255, 254, 0, 270, 0, 0,
	0, 0, 0, 252, 256, 258, 259, 266, 268, 253,
	0, 0, 0, 0, 257, 260, 261, 262, 263, 264,
	265, 267, 269, 271, 0, 0, 0, 230, 0, 118,
	0, 251, 250, 0, 0, 115, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 255, 254, 0, 270, 0,
	0, 0, 0, 0, 0, 256, 258, 259, 266, 268,
	253, 0, 0, 0, 0, 257, 260, 261, 262, 263,
	264, 265, 267, 269, 0, 0, 0, 721, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 230, 0, 118,
	0, 0, 0, 0, 0, 115, 255, 254, 112, 108,
	0, 0, 0, 0, 0, 0, 256, 258, 259, 266,
	268, 253, 0, 0, 0, 0, 337, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 114, 0,
	113, 109, 110, 111, 106, 107, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 112, 108,
	0, 0, 121, 119, 120, 0, 0, 282, 283, 116,
	0, 0, 0, 0, 0, 334, 337, 722, 0, 0,
	0, 0, 0, 0, 0, 0, 102, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 121, 119, 120, 0, 0, 0, 0, 116,
	0, 0, 0, 0, 0, 334, 0, 338, 0, 0,
	0, 0, 0, 0, 0, 0, 102,
}

var yyPact = [...]int16{
	-1000, -1000, 2103, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 250, 6055, 670, -1000, 742, -1000, -1000, -1000, 249,
	5597, 248, 247, 7220, 7220, 7220, 173, 678, 7220, -1000,
	8404, 246, 243, 240, -1000, 425, 742, 286, 441, 689,
	787, 557, 671, 1292, -1000, -1000, -1000, 230, -1000, -1000,
	232, 199, 6156, 7220, 9117, 9117, 7220, 7220, 7220, 7220,
	7220, -1000, -1000, -1000, 7220, 7220, 7220, 7220, 7220, 7220,
	7220, 198, 7220, -1000, 1107, 7220, 7220, 7220, 7220, -1000,
	700, -1000, -1000, 541, -1000, -1000, 693, 194, 193, 191,
	7220, 7220, 190, 7220, 7220, -1000, -1000, 778, -1000, -1000,
	-1000, -1000, 162, 200, 200, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, 176, -1000, 1037, 441, -1000, -1000,
	-1000, -1000, 133, 294, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 13, 628, 656, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, 6, -1000, -47, -1000,
	4287, 7220, 696, 637, 441, 7220, 7220, 369, 8458, 637,
	-1000, 368, 363, 0, -1000, -1000, -6, -1000, -1000, -50,
	-10, -1000, 8458, -1000, 7220, 7220, 7220, 7220, 7220, 7220,
	7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220,
	7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220,
	7220, 284, 7109, 7220, 9117, 7220, 742, -1000, 357, -1000,
	742, -1000, -1000, -1000, -1000, 441, -1000, 608, 742, 742,
	742, 523, -1000, -1000, -1000, -1000, 226, 5597, 221, 354,
	281, 6267, 7220, 7220, 7220, 7220, 7220, 7220, 7220, 7220,
	7220, 7220, 7220, 7220, 7220, -1000, -1000, 7220, 7220, 7220,
	124, 124, 6156, 51, 19, -1000, -1000, 8350, 9117, 7220,
	215, -1000, -1000, -1000, 7220, -1000, -1000, -1000, 6156, -1000,
	469, 469, 551, 469, 8296, 469, 469, 469, 469, 469,
	469, 469, -1000, 7220, 469, 404, 831, 1023, -1000, 233,
	6998, 9117, 8666, 8615, 8666, 8458, 18, -1000, 200, -1000,
	1950, 200, -1000, 529, 267, 7220, 606, -1000, 456, 7220,
	7220, 7220, 8458, 8458, 7220, 8458, 8458, 913, -1000, 747,
	7220, -1000, -1000, 1282, -1000, 6156, 534, 831, 208, 352,
	-1000, -1000, 1784, -1000, 628, -15, 650, 416, 742, -1000,
	742, 7220, -1000, -1000, -1000, -1000, -1000, -1000, -1000, -1000,
	-1000, 206, 8242, 205, -1000, 351, 17, 8458, 8188, -1000,
	-1000, -1000, -1000, 173, -1000, 720, 7220, -1000, 7220, 8768,
	8819, 8511, 8666, 8563, 8870, 8972, 8972, 8921, 978, 42,
	42, 551, 469, 551, 551, 66, 66, 32, 32, 32,
	32, 299, 299, 299, 299, 32, -1000, 8134, 7220, 8717,
	16, -1000, -1000, 8080, -11, 4119, -1000, 202, 201, 742,
	742, 415, 601, 266, -1000, 7220, -1000, 7220, -1000, -1000,
	8666, 7220, 8666, 8666, 8666, 8666, 8666, 8666, 8666, 8666,
	8666, 8666, 8666, 8666, 8666, 8015, 44, 7961, 200, -1000,
	7220, -1000, 200, 129, -54, 6156, 6887, -1000, 8458, 6156,
	7907, 43, -1000, 128, -1000, -1000, -1000, -1000, 181, 742,
	742, 7853, 59, 382, 7220, 700, 37, -1000, 200, -1000,
	-1000, 7220, -1000, -1000, -1000, -1000, 173, 7220, 7220, 124,
	124, 173, 7799, 200, 7745, 12, -1000, 8458, 7691, 7637,
	-1000, -1000, 7583, -1000, 11, 6776, -1000, 8458, 262, 199,
	7220, 198, 7220, 7220, 7220, 637, 693, 194, 193, 191,
	7220, 7220, 190, 7220, 7220, 441, 176, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, 441, 127, -1000, 456, -1000,
	1616, -1000, -1000, 683, -1000, 414, 662, -1000, -1000, 8458,
	126, 5285, 7220, 7220, 7220, 186, -1000, -1000, 8458, -1000,
	7220, 8717, 125, 9117, 9057, 5119, -1000, 456, 456, 174,
	599, -1000, 413, 739, 586, 856, 7529, 7475, 3951, 8666,
	4953, -1000, -1000, -1000, 7421, -1000, -60, 7220, -1000, 8458,
	9117, 169, 122, -1000, -1000, -1000, 34, -1000, -1000, 716,
	-1000, -1000, -1000, -1000, -1000, 7220, -1000, 8666, -1000, -1000,
	-1000, 7367, -1000, 31, 7313, -1000, -1000, -1000, -1000, 599,
	411, 118, 7220, -1000, -1000, -1000, 85, 1448, -1000, 8458,
	7220, -1000, 84, 10, -1000, -1000, -1000, 591, 381, 9,
	-1000, -1000, 591, 673, -1000, 348, -1000, -1000, -1000, 7259,
	347, 8458, -1000, 345, 344, 8717, 341, -1000, 80, 582,
	9117, 168, 6156, -1000, -1000, -1000, 727, 78, 77, 456,
	586, 739, 417, -1000, -19, -1000, 410, 739, -1000, -1000,
	-1000, -1000, -1000, -1000, 5597, 260, 340, -1000, -1000, -1000,
	7220, 8666, -1000, 6156, -60, -1000, -1000, 1086, -1000, -1000,
	-1000, 586, 6665, -1000, -1000, -1000, -1000, 7220, 8458, 142,
	-1000, 456, 1087, 378, 8, -1000, 335, -1000, 662, -1000,
	742, -1000, 3783, 323, 7220, 403, -1000, 871, -1000, -1000,
	4621, 9057, -1000, 6156, 29, 3615, -1000, -1000, 409, 143,
	142, 647, 76, 408, -1000, -1000, -1000, 1571, 739, 400,
	739, -1000, -19, -1000, -1000, -1000, 4455, 8666, 75, 374,
	406, 371, -7, -1000, 575, -9, -12, 8458, -1000, 615,
	-1000, -1000, 443, -1000, -1000, -1000, -1000, 438, -32, 957,
	-33, 436, 321, -1000, 591, -1000, -1000, -1000, 316, -1000,
	74, -1000, 7220, 141, 383, 315, 850, -1000, -1000, -1000,
	73, -1000, 69, -1000, 314, -1000, 739, 405, 142, 137,
	142, -1000, 385, 743, 742, 594, -1000, -1000, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -35, -1000, -1000, 399, 4455,
	-60, -1000, -1000, -1000, -1000, 6665, 7220, 568, -1000, -1000,
	7220, 563, -1000, -34, 856, -43, 432, 519, -1000, 385,
	957, -1000, 957, 385, -1000, -1000, -1000, 4787, 994, -1000,
	-1000, -1000, -1000, -1000, 312, 3447, 4621, -1000, -1000, 3279,
	104, -1000, -1000, 391, 595, 387, 395, 720, 5451, 441,
	-61, -1000, -1000, -1000, 5909, -1000, 379, -1000, 8458, 7220,
	8458, 7220, 856, 856, -1000, 856, 856, 720, -1000, -1000,
	-1000, -1000, -1000, -1000, -1000, -1000, -1000, 4455, -1000, 311,
	-1000, -1000, 62, 739, -1000, 3111, -1000, 61, -16, -1000,
	-1000, 720, -1000, -1000, -26, -1000, -62, -27, 6433, -1000,
	-65, -1000, -1000, 6433, 310, 7220, -1000, 5763, -1000, 305,
	301, 622, 653, 527, -1000, -1000, 8458, 8458, -1000, -1000,
	-1000, -1000, -72, 2943, 4455, -1000, 386, -1000, -1000, 2775,
	-1000, -1000, 595, -1000, 2607, -1000, 720, -1000, 7220, -1000,
	6433, -30, 7220, 67, -1000, 8458, -1000, -1000, -1000, -1000,
	739, 6564, 6433, 7220, 298, -1000, -1000, -1000, -1000, -1000,
	8458, -1000, -1000, 8458, 456, -19, -1000, -1000, 6433, -1000,
	8458, -1000, 2439, -1000, -1000, 56, -1000, -1000, 142, 257,
	-1000, -1000, -1000, 2271, -1000,
}

var yyPgo = [...]int16{
	0, 64, 1107, 1105, 6, 784, 47, 16, 272, 1094,
	34, 14, 779, 39, 1093, 142, 99, 86, 80, 52,
	48, 74, 1092, 30, 1088, 0, 106, 8, 1086, 1079,
	1076, 41, 344, 35, 36, 1074, 1073, 72, 1070, 62,
	1068, 9, 1067, 1064, 1060, 1057, 12, 56, 1051, 1030,
	90, 1028, 93, 81, 1027, 1025, 32, 1024, 1023, 15,
	1022, 1021, 45, 224, 147, 97, 1020, 1012, 1011, 1008,
	1006, 1005, 124, 1000, 998, 997, 5, 988, 101, 984,
	983, 980, 977, 973, 966, 10, 965, 963, 31, 82,
	33, 962, 959, 956, 949, 114, 3, 113, 946, 75,
	944, 941, 40, 37, 934, 22, 930, 2, 28, 18,
	926, 21, 921, 920, 85, 96, 50, 919, 914, 913,
	13, 912, 911, 109, 87, 910, 38, 42, 905, 899,
	898, 893, 892, 27, 879, 876, 872, 869, 867, 44,
	865, 105, 46, 863, 859, 1, 19, 689, 850, 43,
	829, 88, 4, 23, 820, 812, 805, 802, 796, 788,
	11, 17, 756, 7,
}

var yyR1 = [...]uint8{
	0, 162, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 4, 4, 4, 4, 4, 4, 4, 4,
	4, 4, 5, 5, 5, 5, 5, 5, 5, 5,
	13, 13, 6, 7, 7, 10, 10, 9, 9, 8,
	151, 151, 98, 98, 98, 97, 97, 99, 99, 15,
	15, 15, 15, 139, 139, 140, 140, 141, 161, 161,
	160, 160, 14, 14, 14, 14, 14, 14, 14, 14,
	14, 14, 14, 14, 14, 14, 14, 12, 12, 87,
	87, 94, 93, 93, 92, 91, 91, 95, 95, 88,
	88, 90, 90, 89, 89, 78, 78, 152, 152, 22,
	22, 22, 22, 22, 22, 22, 22, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	16, 16, 16, 16, 16, 16, 16, 16, 16, 16,
	136, 136, 137, 75, 75, 30, 30, 125, 125, 31,
	17, 17, 1, 1, 2, 2, 3, 3, 159, 159,
	158, 158, 114, 114, 114, 18, 19, 20, 142, 144,
	144, 143, 143, 126, 126, 128, 128, 127, 127, 146,
	146, 146, 146, 121, 121, 120, 120, 29, 29, 118,
	118, 118, 118, 149, 149, 149, 11, 11, 122, 122,
	86, 86, 77, 77, 100, 100, 81, 81, 27, 27,
	28, 28, 156, 156, 138, 138, 138, 138, 33, 33,
	104, 104, 104, 104, 105, 105, 109, 109, 109, 106,
	106, 110, 110, 112, 112, 113, 113, 108, 108, 108,
	108, 111, 111, 107, 107, 115, 115, 115, 79, 79,
	34, 34, 34, 36, 36, 37, 38, 38, 39, 39,
	153, 153, 40, 40, 40, 40, 40, 40, 76, 76,
	117, 117, 117, 150, 150, 41, 41, 42, 43, 43,
	43, 43, 45, 45, 44, 119, 119, 155, 155, 154,
	154, 157, 157, 145, 145, 145, 145, 145, 145, 145,
	80, 80, 46, 46, 85, 85, 96, 21, 74, 74,
	47, 23, 23, 24, 24, 49, 48, 48, 130, 131,
	131, 132, 134, 134, 135, 135, 133, 133, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 35, 35,
	35, 35, 35, 35, 35, 35, 35, 35, 124, 124,
	123, 123, 163, 129, 129, 82, 83, 83, 59, 59,
	60, 60, 60, 51, 51, 50, 50, 52, 52, 52,
	57, 57, 148, 148, 148, 116, 116, 65, 65, 65,
	65, 58, 58, 58, 58, 58, 58, 58, 58, 64,
	63, 63, 63, 63, 63, 63, 63, 63, 63, 25,
	25, 26, 26, 66, 66, 66, 66, 67, 67, 68,
	68, 68, 69, 69, 69, 69, 69, 69, 32, 32,
	32, 32, 53, 53, 53, 70, 71, 71, 71, 71,
	71, 71, 71, 61, 61, 61, 62, 62, 62, 56,
	102, 102, 55, 55, 101, 101, 101, 101, 101, 101,
	101, 147, 147, 147, 147, 72, 72, 72, 72, 72,
	72, 72, 72, 73, 73, 73, 73, 54, 54, 54,
	54, 54, 54, 54, 84, 84, 103,
}

var yyR2 = [...]int8{
	0, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 0, 1, 0, 1, 1,
	2, 0, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 2, 1, 3, 4, 1, 2,
	0, 1, 1, 1, 1, 1, 1, 1, 1, 4,
	3, 5, 4, 3, 4, 1, 3, 1, 1, 8,
	7, 2, 3, 1, 2, 3, 1, 3, 1, 1,
	2, 1, 3, 1, 3, 3, 1, 2, 0, 1,
	1, 1, 1, 1, 1, 1, 4, 3, 1, 1,
	5, 7, 9, 5, 3, 3, 3, 3, 3, 3,
	1, 2, 6, 7, 9, 5, 1, 6, 3, 2,
	0, 2, 8, 1, 3, 0, 4, 1, 3, 1,
	10, 11, 0, 1, 0, 1, 0, 1, 0, 1,
	1, 2, 1, 1, 1, 9, 6, 7, 8, 0,
	2, 0, 2, 0, 2, 0, 2, 0, 2, 1,
	2, 4, 3, 1, 4, 1, 4, 1, 4, 3,
	4, 4, 5, 0, 5, 4, 1, 1, 1, 4,
	5, 6, 1, 3, 6, 7, 3, 6, 2, 0,
	1, 3, 0, 2, 1, 1, 1, 1, 6, 8,
	1, 2, 1, 1, 1, 1, 1, 1, 1, 3,
	3, 3, 3, 3, 3, 3, 3, 1, 2, 1,
	1, 0, 1, 0, 2, 2, 4, 3, 1, 3,
	1, 2, 3, 3, 1, 1, 3, 1, 1, 3,
	2, 0, 5, 5, 6, 10, 3, 5, 1, 3,
	1, 2, 3, 1, 2, 2, 2, 3, 3, 3,
	4, 3, 1, 1, 3, 1, 3, 1, 1, 0,
	1, 1, 2, 1, 1, 1, 1, 1, 1, 1,
	3, 1, 2, 4, 3, 1, 4, 4, 3, 1,
	1, 0, 1, 3, 1, 8, 3, 2, 2, 3,
	1, 7, 0, 2, 1, 3, 3, 4, 6, 5,
	3, 4, 2, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 2, 2, 2, 2,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 2, 2,
	2, 2, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 1, 1, 5, 4, 3, 1, 2,
	2, 2, 2, 2, 2, 2, 2, 2, 1, 3,
	2, 1, 2, 4, 2, 2, 1, 2, 1, 2,
	11, 9, 0, 0, 4, 2, 3, 1, 1, 2,
	2, 4, 2, 1, 1, 1, 1, 1, 1, 3,
	0, 3, 0, 1, 1, 0, 1, 4, 3, 1,
	3, 1, 1, 3, 2, 3, 1, 1, 1, 3,
	1, 1, 1, 1, 1, 1, 1, 1, 1, 1,
	1, 0, 1, 1, 3, 1, 1, 1, 1, 1,
	3, 1, 1, 4, 4, 4, 4, 1, 1, 1,
	3, 3, 1, 4, 2, 3, 1, 4, 4, 3,
	3, 3, 3, 1, 3, 1, 1, 3, 1, 1,
	0, 1, 3, 1, 3, 1, 4, 2, 2, 6,
	4, 2, 2, 1, 2, 1, 4, 3, 3, 3,
	3, 6, 3, 1, 1, 2, 1, 5, 4, 2,
	2, 4, 2, 2, 1, 3, 1,
}

var yyChk = [...]int16{
	-1000, -162, -151, -14, 2, -16, -17, -18, -19, -20,
	-142, 52, 80, 45, -87, 39, 154, -77, -81, 21,
	20, 23, 30, 34, 35, 40, 47, 99, 19, 14,
	-25, 49, 25, 27, 156, 41, 36, -6, 37, -161,
	-160, -86, -100, -32, -35, 10, -141, 7, -69, -70,
	-67, 60, 160, 93, 105, 106, 165, 164, 166, 167,
	158, -48, -132, -54, 108, 109, 110, 111, 112, 113,
	114, 6, 168, -58, 153, 97, 98, 107, 44, -124,
	144, -53, -60, -51, -66, -63, 92, 143, 50, 51,
	4, 5, 85, 86, 87, 8, 9, 75, -65, -64,
	-123, -8, 169, -15, -68, -50, 67, 68, 82, 64,
	65, 66, 81, 63, 61, 18, 152, 38, 12, 146,
	147, 145, 158, -98, 154, 10, -5, 146, -4, 99,
	100, 101, 102, 103, 104, 148, 4, 5, 85, 86,
	87, 88, 89, 90, 91, 92, 93, 6, 7, 94,
	95, 96, 19, 20, 21, 22, 23, 24, 25, 26,
	27, 28, 29, 41, 42, 43, 44, 45, 46, 47,
	48, 49, 50, 51, 35, 36, 37, 39, 40, 97,
	98, 60, 30, 31, 32, 33, 34, 61, 62, 56,
	57, 80, 54, 55, 53, 63, 64, 66, 65, 67,
	68, 82, 81, 38, 143, 149, -95, -12, -99, -89,
	37, 39, -97, 147, 10, 146, -78, -21, -6, 10,
	-152, 158, -16, -161, 37, 158, 158, -26, -25, 99,
	10, -26, -26, -36, -37, -53, -38, -124, -39, -8,
	-74, -47, -25, 156, 131, 132, 88, 90, 89, 171,
	151, 150, 173, 179, 165, 164, 174, 133, 175, 176,
	134, 135, 136, 137, 138, 139, 177, 140, 178, 141,
	116, 91, 162, 115, 158, 158, 158, 154, -6, 157,
	-1, -13, 150, 151, -141, 37, -123, -159, 54, 55,
	149, -158, -114, 100, 101, 148, 94, 95, 94, 96,
	95, 172, 118, 119, 120, 121, 122, 123, 124, 125,
	126, 127, 128, 129, 130, 105, 106, 158, 160, 154,
	58, 142, 158, -56, -55, -102, -101, -25, 150, 84,
	60, -25, -32, -63, 158, -65, -64, 99, 160, -32,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -57, 158, -25, -148, 17, -147, -72, -8,
	77, 78, -25, -25, -25, -25, -140, -139, -50, -15,
	79, -52, -49, -50, -71, 158, -160, -53, -161, 158,
	158, 158, -25, -25, 158, -25, -25, 17, 76, -147,
	154, -53, -115, 158, -115, 158, -147, 17, -1, 159,
	156, 154, -151, 156, 170, -95, -99, 83, 29, 156,
	170, 172, -22, 155, 2, -16, -17, -18, -19, -20,
	-142, 52, -25, 21, -1, -23, -24, -25, -25, 156,
	156, 156, 156, 170, 156, 170, 172, 156, 170, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -52, -25, 157, -25,
	-125, -31, -32, -25, -78, -152, 156, -6, -163, -1,
	53, -6, -6, -6, -114, 158, -16, 158, 156, 157,
	-25, -13, -25, -25, -25, -25, -25, -25, -25, -25,
	-25, -25, -25, -25, -25, -25, -26, -25, -62, -6,
	154, -53, -62, -56, 161, 170, 59, -32, -25, 158,
	-25, -56, 159, -26, 153, -72, -72, 17, 160, 58,
	142, -25, 11, -32, 59, 170, -10, -115, -61, -7,
	-53, 154, -6, -5, -116, -115, 79, 160, 154, 58,
	142, 79, -25, 53, -25, -84, -103, -25, -25, -25,
	76, 76, -25, 159, -79, 84, -34, -25, -7, 60,
	93, 6, 97, 98, 44, 99, 92, 143, 50, 51,
	4, 5, 85, 86, 87, 37, 61, 63, 64, 66,
	65, 67, 68, 82, 81, 38, -56, 152, 158, 156,
	-151, 155, -89, -99, 156, 83, 154, -6, -21, -25,
	158, 159, 158, 156, 170, 159, -37, -39, -25, -47,
	157, -25, -10, 170, 29, 159, 155, 158, 158, -6,
	-6, 154, -128, 56, -144, 157, -25, -25, -152, -25,
	159, 161, 155, -115, -25, -115, 159, 172, -102, -25,
	150, 60, -56, 159, 161, 159, -73, -6, 13, 164,
	-8, -6, -6, 155, 155, 160, 155, -25, -139, 161,
	-115, -25, -53, -26, -25, -62, -62, -53, 159, -116,
	159, -10, 170, 159, 159, 155, -10, 170, 159, -25,
	157, 159, -27, -28, -33, -160, 155, 154, -94, -93,
	-88, -90, -12, -97, -163, 159, -122, -16, 157, -25,
	-23, -25, -118, 154, 157, -25, 159, -31, -146, -32,
	-13, 60, 160, -29, -16, 157, -136, -27, -27, 158,
	-126, 56, -153, 154, -76, -15, -127, 57, -105, -109,
	99, 61, 62, -15, 159, 159, 96, -16, 157, 155,
	172, -25, -32, 158, 159, 161, 13, -25, 155, 161,
	155, -126, 154, 159, -103, 159, -34, 84, -25, 159,
	-10, 170, -156, -92, -91, -90, 155, -10, 170, -90,
	29, 156, -152, 159, 156, -149, 156, -149, 156, 156,
	159, 59, -32, 158, -56, -152, -30, -137, 43, 42,
	159, 159, -27, -127, -15, 155, -40, -160, 45, -153,
	170, 154, -76, -16, 157, 156, -152, -25, -56, 161,
	-127, -134, -135, -133, -130, 33, -131, -25, -107, 157,
	-33, -138, -111, 104, 103, 102, 148, -108, -109, 162,
	-110, -113, 155, -10, 170, 156, -88, -6, 22, 156,
	-23, 155, 32, 33, -149, 31, -149, -120, -16, 157,
	-146, -32, -56, 161, 28, 154, 158, -107, -129, 45,
	159, 154, -155, -154, 32, -157, 48, -145, 104, 103,
	102, 99, 100, 101, 148, -76, 155, -15, -153, -152,
	159, 155, 154, 155, -10, 170, 59, -10, 170, -10,
	170, -163, -104, -105, 162, -106, -112, -2, 150, 151,
	171, -109, 171, 151, 156, -90, 156, 159, -25, -11,
	157, 156, 155, 156, 31, -152, 159, 159, 156, -152,
	-75, -15, 154, -107, 158, -107, -153, -111, 39, 37,
	-6, -145, -117, 156, 154, 155, -153, -133, -25, 59,
	-25, 59, 171, 151, -105, 171, 151, -3, 84, -108,
	-109, -109, -108, -121, -16, 157, -11, -152, 156, 26,
	-120, 155, -9, 171, -8, -152, 154, -82, -83, -59,
	-8, -13, 154, 155, -80, -46, -8, -85, -111, -96,
	-7, 61, 62, -1, -143, 172, 155, -150, -41, -42,
	-43, -44, -45, -15, -7, 155, -25, -25, -105, -105,
	-105, -105, -8, -152, -152, 156, 159, -15, 155, -152,
	159, -10, 170, -8, -152, 156, 170, -163, 172, 156,
	170, -85, 172, -7, 156, -25, 155, -41, 156, 156,
	46, 29, 79, 172, 24, 154, 155, -59, 155, -46,
	-25, -96, 156, -25, 158, -76, -6, -4, -145, -7,
	-25, 156, -152, -163, -163, -27, -7, 155, 159, -107,
	-119, 156, 154, -152, 155,
}

var yyDef = [...]int16{
	91, -2, -2, 90, 112, 113, 114, 115, 116, 117,
	118, 0, 0, 0, 125, 0, 148, 158, 159, 0,
	0, 0, 0, 501, 501, 501, 0, 465, 0, 170,
	0, 0, 0, 0, 176, 0, 0, 0, 192, 111,
	198, 242, 0, -2, 500, -2, 108, 0, -2, 519,
	0, 0, 540, 0, 0, 0, 0, 0, 0, 0,
	0, 423, 424, 428, 0, 0, 0, 0, 0, 0,
	0, 470, 0, 438, 472, 0, 441, 0, 0, 446,
	0, 512, 517, 0, -2, -2, 110, 0, 0, 0,
	0, 0, 0, 0, 0, 481, 482, 0, -2, -2,
	448, 522, 0, -2, 0, 463, 491, 492, 493, 494,
	495, 496, 497, 498, 0, 479, 0, 192, 89, 100,
	101, 102, 0, 0, 91, 92, 93, 94, 72, 73,
	74, 75, 76, 77, 78, 79, 2, 3, 4, 5,
	6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
	16, 17, 18, 19, 20, 21, 22, 23, 24, 25,
	26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
	36, 37, 38, 39, 40, 41, 42, 43, 44, 45,
	46, 47, 48, 49, 50, 51, 52, 53, 54, 55,
	56, 57, 58, 59, 60, 61, 62, 63, 64, 65,
	66, 67, 68, 69, 70, 71, 0, 0, 143, 138,
	127, 128, 97, 98, 95, 96, 0, 146, 0, 82,
	-2, 0, 0, 0, 192, 351, 0, 0, 502, 465,
	99, 0, 0, 0, 294, 295, 0, 447, 297, 298,
	0, 349, 350, 171, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 148, 0, 179,
	452, 193, 80, 81, 109, 192, 449, 0, 0, 0,
	0, 199, 200, 202, 203, 204, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 386, 388, 0, 501, 0,
	0, 0, 540, 0, 539, 543, 541, 545, 0, 0,
	0, 372, -2, 508, 0, -2, 506, 465, 540, -2,
	408, 409, 410, 411, 0, 429, 430, 431, 432, 433,
	434, 435, 436, 501, 437, 0, 473, 474, 553, 555,
	0, 0, 440, 442, 444, 445, 85, 105, 103, 466,
	0, 475, 357, 467, 468, 0, 0, 526, 111, 0,
	0, 0, 569, 570, 0, 572, 573, 0, 484, 0,
	0, 524, 460, 0, 462, 540, 0, 0, 0, 0,
	120, 91, -2, 123, 0, 0, 143, 0, 0, 126,
	0, 0, 147, 157, 149, 150, 151, 152, 153, 154,
	155, 0, 0, 0, 452, 0, 352, 354, 0, 164,
	165, 166, 167, 0, 168, 0, 0, 169, 0, 390,
	391, 392, 393, 394, 395, 396, 397, 398, 399, 400,
	401, 402, 403, 404, 405, 406, 407, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 421, 0, 0, 427,
	85, 187, -2, 0, 0, -2, 178, 0, 0, 452,
	0, 0, 215, 209, 201, 0, 243, 0, 246, 148,
	370, 0, 373, 374, 375, 376, 377, 378, 379, 380,
	381, 382, 383, 384, 385, 0, 0, 0, 520, 536,
	0, 538, 521, 0, 478, 540, 0, -2, 548, 540,
	0, 0, -2, 0, 439, 554, 551, 552, 0, 0,
	0, 0, 0, 503, 0, 86, 0, 104, 0, -2,
	-2, 0, 83, 84, 356, 476, 0, 501, 0, 0,
	0, 0, 0, 475, 0, 85, 574, 576, 0, 0,
	483, 485, 0, 285, 85, 0, 288, 290, 0, 47,
	12, -2, 45, -2, 32, -2, -2, 70, 38, 39,
	2, 3, 4, 5, 6, -2, 53, -2, -2, -2,
	-2, -2, -2, -2, -2, -2, 0, 480, -2, 119,
	-2, 122, 137, 143, 124, 0, 0, 144, 145, 452,
	0, 0, 0, 351, 0, 0, 293, 296, 299, 348,
	0, 426, 0, 86, 0, 0, 180, -2, -2, 0,
	213, 301, 0, 0, 217, 0, 0, 0, -2, 371,
	0, 513, 514, 515, 0, 516, 0, 0, 542, 544,
	0, 0, 0, -2, 478, 471, 0, 563, 564, 0,
	566, 557, 558, 559, 560, 0, 562, 443, 106, 107,
	461, 0, 531, 0, 0, 529, 530, 532, 469, 213,
	0, 0, 86, 568, 571, 523, 0, 86, 287, 291,
	0, 477, 0, 85, 250, 252, 121, 0, 0, 85,
	133, 139, 0, 141, 347, 0, 160, 238, 148, 0,
	0, 353, 163, 233, 233, 425, 0, 188, 0, -2,
	0, 0, 540, 175, 227, 148, 185, 0, 0, -2,
	217, 0, 110, 301, 216, 308, 0, 0, 210, 264,
	265, 266, 267, 268, 0, 0, 0, 240, 148, 537,
	0, 369, -2, 540, 550, 556, 565, 0, 534, 527,
	528, 217, 362, 567, 575, 286, 289, 0, 292, 283,
	248, -2, 281, 0, 85, 136, 0, 131, 86, 140,
	0, 156, -2, 0, 351, 0, 233, 0, 233, 172,
	0, 0, -2, 540, 0, -2, 177, 181, 0, 0,
	283, 453, 0, 0, 214, 206, 300, 329, 0, 110,
	0, 301, 218, 241, 148, 247, -2, 368, 0, 0,
	0, 0, 85, 364, 0, 85, 85, 360, 452, 0,
	251, 253, 194, 254, 255, 256, 257, 282, 277, 0,
	279, 280, 0, 134, 86, 130, 132, 142, 0, 161,
	0, 229, 0, 0, 0, 0, 0, 173, 225, 148,
	0, -2, 0, -2, 0, 148, 0, 0, 283, 0,
	283, 301, 281, 0, 0, -2, 328, 331, 333, 334,
	335, 336, 337, 338, 339, 0, 207, 309, 110, -2,
	549, 561, 301, 361, 363, 86, 0, 0, 86, 358,
	86, 0, 284, 260, 0, 262, 263, 196, 195, 0,
	0, 278, 0, 0, 129, 135, 239, 0, 0, 148,
	236, 237, 230, 231, 0, -2, 0, 221, 228, -2,
	87, 183, 148, 0, 0, 0, 110, 0, 0, 192,
	211, 332, 306, 310, 0, 208, 110, 365, 366, 0,
	359, 0, 0, 0, 261, 0, 0, 0, 197, 275,
	271, 272, 276, 162, 223, 148, 148, -2, 232, 0,
	174, 186, 0, 0, 88, -2, 148, 0, 85, 457,
	458, 0, 148, 205, 0, 341, 452, 0, 0, 345,
	0, -2, -2, 0, 0, 0, 311, 0, 313, 0,
	0, 323, 0, 0, 322, 355, 367, 451, 269, 273,
	270, 274, 258, -2, -2, 226, 0, 184, 190, -2,
	454, 455, 86, 459, -2, 302, 0, 342, 0, 303,
	0, 0, 0, 0, 307, 212, 312, 314, 315, 316,
	0, 0, 0, 0, 0, 148, 450, 456, 191, 340,
	452, 344, 304, 452, -2, 317, 318, 319, 321, 324,
	259, 224, -2, 343, 346, 0, 320, 182, 283, 0,
	305, 325, 148, -2, 326,
}

var yyTok1 = [...]uint8{
	1, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 166, 152, 3, 169, 176, 163, 3,
	158, 159, 174, 165, 170, 164, 179, 175, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 157, 156,
	177, 172, 178, 162, 168, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 160, 3, 161, 173, 3, 153, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 3, 3, 3, 3, 3, 3, 3,
	3, 3, 3, 154, 171, 155, 167,
}

var yyTok2 = [...]uint8{
	2, 3, 4, 5, 6, 7, 8, 9, 10, 11,
	12, 13, 14, 15, 16, 17, 18, 19, 20, 21,
	22, 23, 24, 25, 26, 27, 28, 29, 30, 31,
	32, 33, 34, 35, 36, 37, 38, 39, 40, 41,
	42, 43, 44, 45, 46, 47, 48, 49, 50, 51,
	52, 53, 54, 55, 56, 57, 58, 59, 60, 61,
	62, 63, 64, 65, 66, 67, 68, 69, 70, 71,
	72, 73, 74, 75, 76, 77, 78, 79, 80, 81,
	82, 83, 84, 85, 86, 87, 88, 89, 90, 91,
	92, 93, 94, 95, 96, 97, 98, 99, 100, 101,
	102, 103, 104, 105, 106, 107, 108, 109, 110, 111,
	112, 113, 114, 115, 116, 117, 118, 119, 120, 121,
	122, 123, 124, 125, 126, 127, 128, 129, 130, 131,
	132, 133, 134, 135, 136, 137, 138, 139, 140, 141,
	142, 143, 144, 145, 146, 147, 148, 149, 150, 151,
}

var yyTok3 = [...]int8{
	0,
}

var yyErrorMessages = [...]struct {
	state int
	token int
	msg   string
}{}

// line yaccpar:1

/*	parser for yacc output	*/

var (
	yyDebug        = 0
	yyErrorVerbose = true
)

type yyLexer interface {
	Lex(lval *yySymType) int
	Error(s string)
}

type yyParser interface {
	Parse(yyLexer) int
	Lookahead() int
}

type yyParserImpl struct {
	lval  yySymType
	stack [yyInitialStackSize]yySymType
	char  int
}

func (p *yyParserImpl) Lookahead() int {
	return p.char
}

func yyNewParser() yyParser {
	return &yyParserImpl{}
}

const yyFlag = -1000

func yyTokname(c int) string {
	if c >= 1 && c-1 < len(yyToknames) {
		if yyToknames[c-1] != "" {
			return yyToknames[c-1]
		}
	}
	return __yyfmt__.Sprintf("tok-%v", c)
}

func yyStatname(s int) string {
	if s >= 0 && s < len(yyStatenames) {
		if yyStatenames[s] != "" {
			return yyStatenames[s]
		}
	}
	return __yyfmt__.Sprintf("state-%v", s)
}

func yyErrorMessage(state, lookAhead int) string {
	const TOKSTART = 4

	if !yyErrorVerbose {
		return "syntax error"
	}

	for _, e := range yyErrorMessages {
		if e.state == state && e.token == lookAhead {
			return "syntax error: " + e.msg
		}
	}

	res := "syntax error: unexpected " + yyTokname(lookAhead)

	// To match Bison, suggest at most four expected tokens.
	expected := make([]int, 0, 4)

	// Look for shiftable tokens.
	base := int(yyPact[state])
	for tok := TOKSTART; tok-1 < len(yyToknames); tok++ {
		if n := base + tok; n >= 0 && n < yyLast && int(yyChk[int(yyAct[n])]) == tok {
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}
	}

	if yyDef[state] == -2 {
		i := 0
		for yyExca[i] != -1 || int(yyExca[i+1]) != state {
			i += 2
		}

		// Look for tokens that we accept or reduce.
		for i += 2; yyExca[i] >= 0; i += 2 {
			tok := int(yyExca[i])
			if tok < TOKSTART || yyExca[i+1] == 0 {
				continue
			}
			if len(expected) == cap(expected) {
				return res
			}
			expected = append(expected, tok)
		}

		// If the default action is to accept or reduce, give up.
		if yyExca[i+1] != 0 {
			return res
		}
	}

	for i, tok := range expected {
		if i == 0 {
			res += ", expecting "
		} else {
			res += " or "
		}
		res += yyTokname(tok)
	}
	return res
}

func yylex1(lex yyLexer, lval *yySymType) (char, token int) {
	token = 0
	char = lex.Lex(lval)
	if char <= 0 {
		token = int(yyTok1[0])
		goto out
	}
	if char < len(yyTok1) {
		token = int(yyTok1[char])
		goto out
	}
	if char >= yyPrivate {
		if char < yyPrivate+len(yyTok2) {
			token = int(yyTok2[char-yyPrivate])
			goto out
		}
	}
	for i := 0; i < len(yyTok3); i += 2 {
		token = int(yyTok3[i+0])
		if token == char {
			token = int(yyTok3[i+1])
			goto out
		}
	}

out:
	if token == 0 {
		token = int(yyTok2[1]) /* unknown char */
	}
	if yyDebug >= 3 {
		__yyfmt__.Printf("lex %s(%d)\n", yyTokname(token), uint(char))
	}
	return char, token
}

func yyParse(yylex yyLexer) int {
	return yyNewParser().Parse(yylex)
}

func (yyrcvr *yyParserImpl) Parse(yylex yyLexer) int {
	var yyn int
	var yyVAL yySymType
	var yyDollar []yySymType
	_ = yyDollar // silence set and not used
	yyS := yyrcvr.stack[:]

	Nerrs := 0   /* number of errors */
	Errflag := 0 /* error recovery flag */
	yystate := 0
	yyrcvr.char = -1
	yytoken := -1 // yyrcvr.char translated into internal numbering
	defer func() {
		// Make sure we report no lookahead when not parsing.
		yystate = -1
		yyrcvr.char = -1
		yytoken = -1
	}()
	yyp := -1
	goto yystack

ret0:
	return 0

ret1:
	return 1

yystack:
	/* put a state and value onto the stack */
	if yyDebug >= 4 {
		__yyfmt__.Printf("char %v in %v\n", yyTokname(yytoken), yyStatname(yystate))
	}

	yyp++
	if yyp >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyS[yyp] = yyVAL
	yyS[yyp].yys = yystate

yynewstate:
	yyn = int(yyPact[yystate])
	if yyn <= yyFlag {
		goto yydefault /* simple state */
	}
	if yyrcvr.char < 0 {
		yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
	}
	yyn += yytoken
	if yyn < 0 || yyn >= yyLast {
		goto yydefault
	}
	yyn = int(yyAct[yyn])
	if int(yyChk[yyn]) == yytoken { /* valid shift */
		yyrcvr.char = -1
		yytoken = -1
		yyVAL = yyrcvr.lval
		yystate = yyn
		if Errflag > 0 {
			Errflag--
		}
		goto yystack
	}

yydefault:
	/* default state action */
	yyn = int(yyDef[yystate])
	if yyn == -2 {
		if yyrcvr.char < 0 {
			yyrcvr.char, yytoken = yylex1(yylex, &yyrcvr.lval)
		}

		/* look through exception table */
		xi := 0
		for {
			if yyExca[xi+0] == -1 && int(yyExca[xi+1]) == yystate {
				break
			}
			xi += 2
		}
		for xi += 2; ; xi += 2 {
			yyn = int(yyExca[xi+0])
			if yyn < 0 || yyn == yytoken {
				break
			}
		}
		yyn = int(yyExca[xi+1])
		if yyn < 0 {
			goto ret0
		}
	}
	if yyn == 0 {
		/* error ... attempt to resume parsing */
		switch Errflag {
		case 0: /* brand new error */
			yylex.Error(yyErrorMessage(yystate, yytoken))
			Nerrs++
			if yyDebug >= 1 {
				__yyfmt__.Printf("%s", yyStatname(yystate))
				__yyfmt__.Printf(" saw %s\n", yyTokname(yytoken))
			}
			fallthrough

		case 1, 2: /* incompletely recovered error ... try again */
			Errflag = 3

			/* find a state where "error" is a legal shift action */
			for yyp >= 0 {
				yyn = int(yyPact[yyS[yyp].yys]) + yyErrCode
				if yyn >= 0 && yyn < yyLast {
					yystate = int(yyAct[yyn]) /* simulate a shift of "error" */
					if int(yyChk[yystate]) == yyErrCode {
						goto yystack
					}
				}

				/* the current p has no shift on "error", pop stack */
				if yyDebug >= 2 {
					__yyfmt__.Printf("error recovery pops state %d\n", yyS[yyp].yys)
				}
				yyp--
			}
			/* there is no state on the stack with an error shift ... abort */
			goto ret1

		case 3: /* no shift yet; clobber input char */
			if yyDebug >= 2 {
				__yyfmt__.Printf("error recovery discards %s\n", yyTokname(yytoken))
			}
			if yytoken == yyEofCode {
				goto ret1
			}
			yyrcvr.char = -1
			yytoken = -1
			goto yynewstate /* try again in the same state */
		}
	}

	/* reduction by production yyn */
	if yyDebug >= 2 {
		__yyfmt__.Printf("reduce %v in:\n\t%v\n", yyn, yyStatname(yystate))
	}

	yynt := yyn
	yypt := yyp
	_ = yypt // guard against "declared and not used"

	yyp -= int(yyR2[yyn])
	// yyp is now the index of $0. Perform the default action. Iff the
	// reduced production is ε, $1 is possibly out of range.
	if yyp+1 >= len(yyS) {
		nyys := make([]yySymType, len(yyS)*2)
		copy(nyys, yyS)
		yyS = nyys
	}
	yyVAL = yyS[yyp+1]

	/* consult goto table to find next state */
	yyn = int(yyR1[yyn])
	yyg := int(yyPgo[yyn])
	yyj := yyg + yyS[yyp].yys + 1

	if yyj >= yyLast {
		yystate = int(yyAct[yyg])
	} else {
		yystate = int(yyAct[yyj])
		if int(yyChk[yystate]) != -yyn {
			yystate = int(yyAct[yyg])
		}
	}
	// dummy call; replaced with literal code
	switch yynt {

	case 1:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:313
		{
			yylex.(*Parser).currentToken.Value = nil

			yylex.(*Parser).rootNode = &ast.Root{
				Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[1].list),
				Stmts:    yyDollar[1].list,
				EndTkn:   yylex.(*Parser).currentToken,
			}
		}
	case 2:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 3:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 4:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 5:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 6:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 7:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 8:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 9:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:325
		{
			yyVAL.token = yyDollar[1].token
		}
	case 10:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 11:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 12:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 13:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 14:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 15:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 16:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 17:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 18:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 19:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 20:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 21:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:326
		{
			yyVAL.token = yyDollar[1].token
		}
	case 22:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 23:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 24:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 25:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 26:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 27:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 28:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 29:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 30:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 31:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:327
		{
			yyVAL.token = yyDollar[1].token
		}
	case 32:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 33:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 34:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 35:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 36:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 37:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 38:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 39:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 40:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 41:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:328
		{
			yyVAL.token = yyDollar[1].token
		}
	case 42:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 43:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 44:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 45:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 46:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 47:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 48:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 49:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 50:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 51:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 52:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:329
		{
			yyVAL.token = yyDollar[1].token
		}
	case 53:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 54:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 55:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 56:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 57:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 58:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 59:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 60:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:330
		{
			yyVAL.token = yyDollar[1].token
		}
	case 61:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 62:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 63:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 64:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 65:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 66:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 67:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 68:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 69:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 70:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 71:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:331
		{
			yyVAL.token = yyDollar[1].token
		}
	case 72:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:336
		{
			yyVAL.token = yyDollar[1].token
		}
	case 73:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 74:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 75:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 76:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:339
		{
			yyVAL.token = yyDollar[1].token
		}
	case 77:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 78:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 79:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:340
		{
			yyVAL.token = yyDollar[1].token
		}
	case 80:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:344
		{
			yyVAL.token = yyDollar[1].token
		}
	case 81:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:345
		{
			yyVAL.token = yyDollar[1].token
		}
	case 82:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:349
		{
			yyVAL.token = yyDollar[1].token
		}
	case 83:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:353
		{
			yyVAL.token = yyDollar[1].token
		}
	case 84:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:354
		{
			yyVAL.token = yyDollar[1].token
		}
	case 85:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:358
		{
			yyVAL.token = nil
		}
	case 86:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:359
		{
			yyVAL.token = yyDollar[1].token
		}
	case 87:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:363
		{
			yyVAL.token = nil
		}
	case 88:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:364
		{
			yyVAL.token = yyDollar[1].token
		}
	case 89:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:368
		{
			yyVAL.token = yyDollar[1].token
		}
	case 90:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:372
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 91:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:377
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 92:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:381
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 93:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:382
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 94:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:383
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 95:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:387
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 96:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:388
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 97:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:392
		{
			yyVAL.node = yyDollar[1].node
		}
	case 98:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:393
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 99:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:397
		{
			yyVAL.node = yylex.(*Parser).builder.NewName(yyDollar[1].token)
		}
	case 100:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:398
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameQualified(yyDollar[1].token)
		}
	case 101:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:399
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameFullyQualified(yyDollar[1].token)
		}
	case 102:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:400
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameRelative(yyDollar[1].token)
		}
	case 103:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:404
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, nil)
		}
	case 104:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:405
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttribute(yyDollar[1].node, yyDollar[2].node)
		}
	case 105:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:409
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 106:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:410
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 107:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:415
		{
			yyVAL.node = yylex.(*Parser).builder.NewAttributeGroup(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token)
		}
	case 108:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:419
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 109:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:420
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 110:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:424
		{
			yyVAL.list = nil
		}
	case 111:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:425
		{
			yyVAL.list = yyDollar[1].list
		}
	case 112:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:429
		{
			yyVAL.node = nil
		}
	case 113:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:430
		{
			yyVAL.node = yyDollar[1].node
		}
	case 114:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:431
		{
			yyVAL.node = yyDollar[1].node
		}
	case 115:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:432
		{
			yyVAL.node = yyDollar[1].node
		}
	case 116:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:433
		{
			yyVAL.node = yyDollar[1].node
		}
	case 117:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:434
		{
			yyVAL.node = yyDollar[1].node
		}
	case 118:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:435
		{
			yyVAL.node = yyDollar[1].node
		}
	case 119:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:437
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 120:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:447
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, nil, nil, nil, yyDollar[3].token)
		}
	case 121:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:449
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, yyDollar[4].list, yyDollar[5].token, nil)
		}
	case 122:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:451
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamespace(yyDollar[1].token, nil, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, nil)
		}
	case 123:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:454
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token)
		}
	case 124:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:456
		{
			yyVAL.node = yylex.(*Parser).builder.NewUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token)
		}
	case 125:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:458
		{
			yyVAL.node = yyDollar[1].node
		}
	case 126:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:461
		{
			yyVAL.node = &ast.StmtConstList{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ConstTkn:      yyDollar[1].token,
				Consts:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				SemiColonTkn:  yyDollar[3].token,
			}
		}
	case 127:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:473
		{
			yyVAL.token = yyDollar[1].token
		}
	case 128:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:474
		{
			yyVAL.token = yyDollar[1].token
		}
	case 129:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:479
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].token)
		}
	case 130:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:481
		{
			yyVAL.node = yylex.(*Parser).builder.NewGroupUseList(yyDollar[1].token, nil, yyDollar[2].node, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].token)
		}
	case 131:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:486
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 132:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:491
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 133:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:493
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 134:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:498
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 135:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:503
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 136:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:505
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 137:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:509
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 138:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:510
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 139:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:514
		{
			yyVAL.node = yyDollar[1].node
		}
	case 140:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:515
		{
			decl := yyDollar[2].node.(*ast.StmtUse)
			decl.Type = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
			decl.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
			yyVAL.node = yyDollar[2].node
		}
	case 141:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:524
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 142:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:525
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 143:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:529
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, nil, nil)
		}
	case 144:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:530
		{
			yyVAL.node = yylex.(*Parser).builder.NewUse(nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].token)
		}
	case 145:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:534
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 146:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:535
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 147:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:539
		{
			if yyDollar[2].node != nil {
				yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
			}
		}
	case 148:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:544
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 149:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:548
		{
			yyVAL.node = nil
		}
	case 150:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:549
		{
			yyVAL.node = yyDollar[1].node
		}
	case 151:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:550
		{
			yyVAL.node = yyDollar[1].node
		}
	case 152:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:551
		{
			yyVAL.node = yyDollar[1].node
		}
	case 153:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:552
		{
			yyVAL.node = yyDollar[1].node
		}
	case 154:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:553
		{
			yyVAL.node = yyDollar[1].node
		}
	case 155:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:554
		{
			yyVAL.node = yyDollar[1].node
		}
	case 156:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:556
		{
			yyVAL.node = &ast.StmtHaltCompiler{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				HaltCompilerTkn:     yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				CloseParenthesisTkn: yyDollar[3].token,
				SemiColonTkn:        yyDollar[4].token,
			}
		}
	case 157:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:568
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 158:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:577
		{
			yyVAL.node = yyDollar[1].node
		}
	case 159:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:581
		{
			yyVAL.node = yyDollar[1].node
		}
	case 160:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:585
		{
			yyDollar[5].node.(*ast.StmtWhile).WhileTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtWhile).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtWhile).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtWhile).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtWhile).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 161:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:595
		{
			yyVAL.node = &ast.StmtDo{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[7].token),
				DoTkn:               yyDollar[1].token,
				Stmt:                yyDollar[2].node,
				WhileTkn:            yyDollar[3].token,
				OpenParenthesisTkn:  yyDollar[4].token,
				Cond:                yyDollar[5].node,
				CloseParenthesisTkn: yyDollar[6].token,
				SemiColonTkn:        yyDollar[7].token,
			}
		}
	case 162:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:608
		{
			yyDollar[9].node.(*ast.StmtFor).ForTkn = yyDollar[1].token
			yyDollar[9].node.(*ast.StmtFor).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[9].node.(*ast.StmtFor).Init = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).InitSeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).InitSemiColonTkn = yyDollar[4].token
			yyDollar[9].node.(*ast.StmtFor).Cond = yyDollar[5].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).CondSeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CondSemiColonTkn = yyDollar[6].token
			yyDollar[9].node.(*ast.StmtFor).Loop = yyDollar[7].node.(*ParserSeparatedList).Items
			yyDollar[9].node.(*ast.StmtFor).LoopSeparatorTkns = yyDollar[7].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[9].node.(*ast.StmtFor).CloseParenthesisTkn = yyDollar[8].token
			yyDollar[9].node.(*ast.StmtFor).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)

			yyVAL.node = yyDollar[9].node
		}
	case 163:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:625
		{
			yyDollar[5].node.(*ast.StmtSwitch).SwitchTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtSwitch).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtSwitch).Cond = yyDollar[3].node
			yyDollar[5].node.(*ast.StmtSwitch).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtSwitch).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 164:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:635
		{
			yyVAL.node = &ast.StmtBreak{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				BreakTkn:     yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 165:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:644
		{
			yyVAL.node = &ast.StmtContinue{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ContinueTkn:  yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 166:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:653
		{
			yyVAL.node = &ast.StmtReturn{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				ReturnTkn:    yyDollar[1].token,
				Expr:         yyDollar[2].node,
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 167:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:662
		{
			yyDollar[2].node.(*ast.StmtGlobal).GlobalTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtGlobal).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtGlobal).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 168:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:670
		{
			yyDollar[2].node.(*ast.StmtStatic).StaticTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtStatic).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtStatic).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 169:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:678
		{
			yyDollar[2].node.(*ast.StmtEcho).EchoTkn = yyDollar[1].token
			yyDollar[2].node.(*ast.StmtEcho).SemiColonTkn = yyDollar[3].token
			yyDollar[2].node.(*ast.StmtEcho).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token)

			yyVAL.node = yyDollar[2].node
		}
	case 170:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:686
		{
			yyVAL.node = &ast.StmtInlineHtml{
				Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				InlineHtmlTkn: yyDollar[1].token,
				Value:         yyDollar[1].token.Value,
			}
		}
	case 171:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:694
		{
			yyVAL.node = yylex.(*Parser).builder.NewExpressionStmt(yyDollar[1].node, yyDollar[2].token)
		}
	case 172:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:698
		{
			yyDollar[3].node.(*ast.StmtUnset).UnsetTkn = yyDollar[1].token
			yyDollar[3].node.(*ast.StmtUnset).OpenParenthesisTkn = yyDollar[2].token
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[3].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[4].token)
			}
			yyDollar[3].node.(*ast.StmtUnset).CloseParenthesisTkn = yyDollar[5].token
			yyDollar[3].node.(*ast.StmtUnset).SemiColonTkn = yyDollar[6].token
			yyDollar[3].node.(*ast.StmtUnset).Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[6].token)

			yyVAL.node = yyDollar[3].node
		}
	case 173:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:711
		{
			foreach := yyDollar[7].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[7].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Var = yyDollar[5].node
			foreach.CloseParenthesisTkn = yyDollar[6].token

			if val, ok := yyDollar[5].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 174:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:730
		{
			foreach := yyDollar[9].node.(*ast.StmtForeach)

			foreach.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node)
			foreach.ForeachTkn = yyDollar[1].token
			foreach.OpenParenthesisTkn = yyDollar[2].token
			foreach.Expr = yyDollar[3].node
			foreach.AsTkn = yyDollar[4].token
			foreach.Key = yyDollar[5].node
			foreach.DoubleArrowTkn = yyDollar[6].token
			foreach.Var = yyDollar[7].node
			foreach.CloseParenthesisTkn = yyDollar[8].token

			if val, ok := yyDollar[7].node.(*ast.StmtForeach); ok {
				foreach.AmpersandTkn = val.AmpersandTkn
				foreach.Var = val.Var
			}

			yyVAL.node = foreach
		}
	case 175:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:751
		{
			yyDollar[5].node.(*ast.StmtDeclare).DeclareTkn = yyDollar[1].token
			yyDollar[5].node.(*ast.StmtDeclare).OpenParenthesisTkn = yyDollar[2].token
			yyDollar[5].node.(*ast.StmtDeclare).Consts = yyDollar[3].node.(*ParserSeparatedList).Items
			yyDollar[5].node.(*ast.StmtDeclare).SeparatorTkns = yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns
			yyDollar[5].node.(*ast.StmtDeclare).CloseParenthesisTkn = yyDollar[4].token
			yyDollar[5].node.(*ast.StmtDeclare).Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node)

			yyVAL.node = yyDollar[5].node
		}
	case 176:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:762
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 177:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:769
		{
			yyVAL.node = yylex.(*Parser).builder.NewTry(yyDollar[1].token, yyDollar[2].token, yyDollar[3].list, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node)
		}
	case 178:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:773
		{
			yyVAL.node = &ast.StmtGoto{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				GotoTkn:  yyDollar[1].token,
				Label: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				SemiColonTkn: yyDollar[3].token,
			}
		}
	case 179:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:786
		{
			yyVAL.node = &ast.StmtLabel{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				ColonTkn: yyDollar[2].token,
			}
		}
	case 180:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:799
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 181:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:800
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, nil, yyDollar[2].node)
		}
	case 182:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:805
		{
			yyVAL.node = yylex.(*Parser).builder.NewCatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 183:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:809
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 184:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:810
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 185:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:815
		{
			yyVAL.node = nil
		}
	case 186:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:819
		{
			yyVAL.node = &ast.StmtFinally{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				FinallyTkn:           yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Stmts:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 187:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:832
		{
			yyVAL.node = &ast.StmtUnset{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 188:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:838
		{
			yyDollar[1].node.(*ast.StmtUnset).Vars = append(yyDollar[1].node.(*ast.StmtUnset).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtUnset).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 189:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:847
		{
			yyVAL.node = yyDollar[1].node
		}
	case 190:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:852
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(nil, yyDollar[1].token, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].list, yyDollar[10].token)
		}
	case 191:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:855
		{
			yyVAL.node = yylex.(*Parser).builder.NewFunction(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token, yyDollar[8].node, yyDollar[9].token, yyDollar[10].list, yyDollar[11].token)
		}
	case 192:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:859
		{
			yyVAL.token = nil
		}
	case 193:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:860
		{
			yyVAL.token = yyDollar[1].token
		}
	case 194:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:864
		{
			yyVAL.token = nil
		}
	case 195:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:865
		{
			yyVAL.token = yyDollar[1].token
		}
	case 196:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:869
		{
			yyVAL.token = nil
		}
	case 197:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:870
		{
			yyVAL.token = yyDollar[1].token
		}
	case 198:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:874
		{
			yyVAL.list = nil
		}
	case 199:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:875
		{
			yyVAL.list = yyDollar[1].list
		}
	case 200:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:879
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 201:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:880
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 202:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:884
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 203:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:885
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 204:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:886
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 205:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:892
		{
			yyVAL.node = yylex.(*Parser).builder.NewClass(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].node, yyDollar[6].node, yyDollar[7].token, yyDollar[8].list, yyDollar[9].token)
		}
	case 206:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:898
		{
			yyVAL.node = yylex.(*Parser).builder.NewTrait(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].token, yyDollar[5].list, yyDollar[6].token)
		}
	case 207:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:904
		{
			yyVAL.node = yylex.(*Parser).builder.NewInterface(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token, yyDollar[6].list, yyDollar[7].token)
		}
	case 208:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:910
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnum(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 209:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:914
		{
			yyVAL.node = nil
		}
	case 210:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:915
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumType(yyDollar[1].token, yyDollar[2].node)
		}
	case 211:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:918
		{
			yyVAL.node = nil
		}
	case 212:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:919
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 213:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:923
		{
			yyVAL.node = nil
		}
	case 214:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:927
		{
			yyVAL.node = &ast.StmtClass{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExtendsTkn: yyDollar[1].token,
				Extends:    yyDollar[2].node,
			}
		}
	case 215:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:938
		{
			yyVAL.node = nil
		}
	case 216:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:942
		{
			yyVAL.node = &ast.StmtInterface{
				Position:             yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ExtendsTkn:           yyDollar[1].token,
				Extends:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ExtendsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 217:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:954
		{
			yyVAL.node = nil
		}
	case 218:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:958
		{
			yyVAL.node = &ast.StmtClass{
				Position:                yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[2].node.(*ParserSeparatedList).Items),
				ImplementsTkn:           yyDollar[1].token,
				Implements:              yyDollar[2].node.(*ParserSeparatedList).Items,
				ImplementsSeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 219:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:970
		{
			yyVAL.node = yyDollar[1].node
		}
	case 220:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:974
		{
			yyVAL.node = &ast.StmtForeach{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Var:          yyDollar[2].node,
			}
		}
	case 221:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:982
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ListTkn:         yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 222:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:993
		{
			yyVAL.node = &ast.ExprList{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 223:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1006
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 224:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1013
		{
			yyVAL.node = &ast.StmtFor{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForTkn:    yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 225:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1029
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 226:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1036
		{
			yyVAL.node = &ast.StmtForeach{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndForeachTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 227:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1052
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 228:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1059
		{
			yyVAL.node = &ast.StmtDeclare{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndDeclareTkn: yyDollar[3].token,
				SemiColonTkn:  yyDollar[4].token,
			}
		}
	case 229:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1075
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Cases:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 230:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1084
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CaseSeparatorTkn:     yyDollar[2].token,
				Cases:                yyDollar[3].list,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 231:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1094
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn:     yyDollar[1].token,
				Cases:        yyDollar[2].list,
				EndSwitchTkn: yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 232:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1104
		{
			yyVAL.node = &ast.StmtSwitch{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				ColonTkn:         yyDollar[1].token,
				CaseSeparatorTkn: yyDollar[2].token,
				Cases:            yyDollar[3].list,
				EndSwitchTkn:     yyDollar[4].token,
				SemiColonTkn:     yyDollar[5].token,
			}
		}
	case 233:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1118
		{
			yyVAL.list = nil
		}
	case 234:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1122
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtCase{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[5].list),
				CaseTkn:          yyDollar[2].token,
				Cond:             yyDollar[3].node,
				CaseSeparatorTkn: yyDollar[4].token,
				Stmts:            yyDollar[5].list,
			})
		}
	case 235:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1132
		{
			yyVAL.list = append(yyDollar[1].list, &ast.StmtDefault{
				Position:         yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				DefaultTkn:       yyDollar[2].token,
				CaseSeparatorTkn: yyDollar[3].token,
				Stmts:            yyDollar[4].list,
			})
		}
	case 236:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1143
		{
			yyVAL.token = yyDollar[1].token
		}
	case 237:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1144
		{
			yyVAL.token = yyDollar[1].token
		}
	case 238:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1149
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Stmt:     yyDollar[1].node,
			}
		}
	case 239:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1156
		{
			yyVAL.node = &ast.StmtWhile{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ColonTkn: yyDollar[1].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[2].list),
					Stmts:    yyDollar[2].list,
				},
				EndWhileTkn:  yyDollar[3].token,
				SemiColonTkn: yyDollar[4].token,
			}
		}
	case 240:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1172
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				Stmt:                yyDollar[5].node,
			}
		}
	case 241:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1183
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[6].node),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				Stmt:                yyDollar[6].node,
			})

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[6].node)

			yyVAL.node = yyDollar[1].node
		}
	case 242:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1201
		{
			yyVAL.node = yyDollar[1].node
		}
	case 243:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1205
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[2].token, yyDollar[3].node),
				ElseTkn:  yyDollar[2].token,
				Stmt:     yyDollar[3].node,
			}

			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node)

			yyVAL.node = yyDollar[1].node
		}
	case 244:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1220
		{
			yyVAL.node = &ast.StmtIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[1].token, yyDollar[6].list),
				IfTkn:               yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Cond:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
				ColonTkn:            yyDollar[5].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[6].list),
					Stmts:    yyDollar[6].list,
				},
			}
		}
	case 245:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1235
		{
			yyDollar[1].node.(*ast.StmtIf).ElseIf = append(yyDollar[1].node.(*ast.StmtIf).ElseIf, &ast.StmtElseIf{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[7].list),
				ElseIfTkn:           yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Cond:                yyDollar[4].node,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[7].list),
					Stmts:    yyDollar[7].list,
				},
			})

			yyVAL.node = yyDollar[1].node
		}
	case 246:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1255
		{
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[2].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[3].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token)

			yyVAL.node = yyDollar[1].node
		}
	case 247:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1263
		{
			yyDollar[1].node.(*ast.StmtIf).Else = &ast.StmtElse{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodeListPosition(yyDollar[2].token, yyDollar[4].list),
				ElseTkn:  yyDollar[2].token,
				ColonTkn: yyDollar[3].token,
				Stmt: &ast.StmtStmtList{
					Position: yylex.(*Parser).builder.Pos.NewNodeListPosition(yyDollar[4].list),
					Stmts:    yyDollar[4].list,
				},
			}
			yyDollar[1].node.(*ast.StmtIf).EndIfTkn = yyDollar[5].token
			yyDollar[1].node.(*ast.StmtIf).SemiColonTkn = yyDollar[6].token
			yyDollar[1].node.(*ast.StmtIf).Position = yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token)

			yyVAL.node = yyDollar[1].node
		}
	case 248:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1282
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 249:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1283
		{
			yyVAL.node = yylex.(*Parser).builder.NewEmptySeparatedList()
		}
	case 250:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1287
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 251:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1288
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 252:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1292
		{
			yyVAL.list = nil
		}
	case 253:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1293
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 254:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1297
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 255:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1298
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 256:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1299
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 257:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1300
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 258:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1306
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, nil, nil, false)
		}
	case 259:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1309
		{
			yyVAL.node = yylex.(*Parser).builder.NewParameter(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].token, yyDollar[8].node, true)
		}
	case 260:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1313
		{
			yyVAL.node = yyDollar[1].node
		}
	case 261:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1314
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 262:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1315
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 263:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1316
		{
			yyVAL.node = yylex.(*Parser).builder.NewIntersectionType(yyDollar[1].node)
		}
	case 264:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1320
		{
			yyVAL.node = yyDollar[1].node
		}
	case 265:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1321
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 266:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1325
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 267:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1326
		{
			yyVAL.node = yylex.(*Parser).builder.NewNameType(yyDollar[1].token)
		}
	case 268:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1327
		{
			yyVAL.node = yyDollar[1].node
		}
	case 269:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1331
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 270:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1332
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 271:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1337
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 272:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1339
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 273:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1344
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 274:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1346
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 275:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1351
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedListWithTwoElements(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 276:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1353
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 277:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1357
		{
			yyVAL.node = yyDollar[1].node
		}
	case 278:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1358
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullableType(yyDollar[1].token, yyDollar[2].node)
		}
	case 279:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1359
		{
			yyVAL.node = yylex.(*Parser).builder.NewUnionType(yyDollar[1].node)
		}
	case 280:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1360
		{
			yyVAL.node = yylex.(*Parser).builder.NewIntersectionType(yyDollar[1].node)
		}
	case 281:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1364
		{
			yyVAL.node = nil
		}
	case 282:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1365
		{
			yyVAL.node = yyDollar[1].node
		}
	case 283:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1369
		{
			yyVAL.node = &ReturnType{}
		}
	case 284:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1370
		{
			yyVAL.node = yylex.(*Parser).builder.NewReturnType(yyDollar[1].token, yyDollar[2].node)
		}
	case 285:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1374
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, nil, yyDollar[2].token)
		}
	case 286:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1376
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token, nil, yyDollar[4].token)
		}
	case 287:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1377
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgumentList(yyDollar[1].token, nil, nil, yyDollar[2].token, yyDollar[3].token)
		}
	case 288:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1381
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 289:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1383
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 290:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1387
		{
			yyVAL.node = yylex.(*Parser).builder.NewArgument(yyDollar[1].node)
		}
	case 291:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1388
		{
			yyVAL.node = yylex.(*Parser).builder.NewVariadicArgument(yyDollar[1].token, yyDollar[2].node)
		}
	case 292:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1389
		{
			yyVAL.node = yylex.(*Parser).builder.NewNamedArgument(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node)
		}
	case 293:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1394
		{
			yyDollar[1].node.(*ast.StmtGlobal).Vars = append(yyDollar[1].node.(*ast.StmtGlobal).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtGlobal).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 294:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1401
		{
			yyVAL.node = &ast.StmtGlobal{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 295:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1409
		{
			yyVAL.node = yyDollar[1].node
		}
	case 296:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1414
		{
			yyDollar[1].node.(*ast.StmtStatic).Vars = append(yyDollar[1].node.(*ast.StmtStatic).Vars, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtStatic).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 297:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1421
		{
			yyVAL.node = &ast.StmtStatic{
				Vars: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 298:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1430
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 299:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1444
		{
			yyVAL.node = &ast.StmtStaticVar{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 300:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1462
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 301:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1463
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 302:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1468
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].node, yyDollar[4].node, yyDollar[5].token)
		}
	case 303:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1470
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 304:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1472
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassTypedConstList(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token)
		}
	case 305:
		yyDollar = yyS[yypt-10 : yypt+1]
		// line internal/php8/php8.y:1474
		{
			yyVAL.node = yylex.(*Parser).builder.NewClassMethod(yyDollar[1].list, yyDollar[2].list, yyDollar[3].token, yyDollar[4].token, yyDollar[5].token, yyDollar[6].token, yyDollar[7].node, yyDollar[8].token, yyDollar[9].node, yyDollar[10].node)
		}
	case 306:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1476
		{
			traitUse := &ast.StmtTraitUse{
				Position:      yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				UseTkn:        yyDollar[1].token,
				Traits:        yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns: yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
			}

			switch n := yyDollar[3].node.(type) {
			case *TraitAdaptationList:
				traitUse.OpenCurlyBracketTkn = n.OpenCurlyBracketTkn
				traitUse.Adaptations = n.Adaptations
				traitUse.CloseCurlyBracketTkn = n.CloseCurlyBracketTkn
			case *ast.StmtNop:
				traitUse.SemiColonTkn = n.SemiColonTkn
			}

			yyVAL.node = traitUse
		}
	case 307:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1496
		{
			yyVAL.node = yylex.(*Parser).builder.NewEnumCase(yyDollar[1].list, yyDollar[2].token, yyDollar[3].token, yyDollar[4].node, yyDollar[5].token)
		}
	case 308:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1500
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 309:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1501
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 310:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1506
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 311:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1513
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				CloseCurlyBracketTkn: yyDollar[2].token,
			}
		}
	case 312:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1521
		{
			yyVAL.node = &TraitAdaptationList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Adaptations:          yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 313:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1532
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 314:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1533
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 315:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1538
		{
			yyDollar[1].node.(*ast.StmtTraitUsePrecedence).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 316:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1544
		{
			yyDollar[1].node.(*ast.StmtTraitUseAlias).SemiColonTkn = yyDollar[2].token

			yyVAL.node = yyDollar[1].node
		}
	case 317:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1553
		{
			yyVAL.node = &ast.StmtTraitUsePrecedence{
				Position:       yylex.(*Parser).builder.Pos.NewNodeNodeListPosition(yyDollar[1].node, yyDollar[3].node.(*ParserSeparatedList).Items),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				InsteadofTkn:   yyDollar[2].token,
				Insteadof:      yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:  yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
			}
		}
	case 318:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1568
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 319:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1583
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 320:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1598
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
				Alias: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[4].token),
					IdentifierTkn: yyDollar[4].token,
					Value:         yyDollar[4].token.Value,
				},
			}
		}
	case 321:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1614
		{
			yyVAL.node = &ast.StmtTraitUseAlias{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Trait:          yyDollar[1].node.(*TraitMethodRef).Trait,
				DoubleColonTkn: yyDollar[1].node.(*TraitMethodRef).DoubleColonTkn,
				Method:         yyDollar[1].node.(*TraitMethodRef).Method,
				AsTkn:          yyDollar[2].token,
				Modifier:       yyDollar[3].node,
			}
		}
	case 322:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1628
		{
			yyVAL.node = &TraitMethodRef{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 323:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1639
		{
			yyVAL.node = yyDollar[1].node
		}
	case 324:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1646
		{
			yyVAL.node = &TraitMethodRef{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Trait:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Method: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 325:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1662
		{
			yyVAL.node = &ast.StmtNop{
				Position:     yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				SemiColonTkn: yyDollar[1].token,
			}
		}
	case 326:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1669
		{
			yyVAL.node = &ast.StmtStmtList{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Stmts:                yyDollar[2].list,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 327:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1680
		{
			yyVAL.list = yyDollar[1].list
		}
	case 328:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1681
		{
			yyVAL.list = []ast.Vertex{yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)}
		}
	case 329:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1685
		{
			yyVAL.list = nil
		}
	case 330:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1686
		{
			yyVAL.list = yyDollar[1].list
		}
	case 331:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1690
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 332:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1691
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 333:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1695
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 334:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1696
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 335:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1697
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 336:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1698
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 337:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1699
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 338:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1700
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 339:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1701
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 340:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1705
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 341:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1706
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 342:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1711
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				Expr: nil,
			}
		}
	case 343:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1726
		{
			yyVAL.node = &ast.StmtProperty{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 344:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1744
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 345:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1745
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 346:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1750
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 347:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1766
		{
			yyVAL.node = &ast.StmtConstant{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 348:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1782
		{
			yyDollar[1].node.(*ast.StmtEcho).Exprs = append(yyDollar[1].node.(*ast.StmtEcho).Exprs, yyDollar[3].node)
			yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns = append(yyDollar[1].node.(*ast.StmtEcho).SeparatorTkns, yyDollar[2].token)

			yyVAL.node = yyDollar[1].node
		}
	case 349:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1789
		{
			yyVAL.node = &ast.StmtEcho{
				Exprs: []ast.Vertex{yyDollar[1].node},
			}
		}
	case 350:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1797
		{
			yyVAL.node = yyDollar[1].node
		}
	case 351:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1801
		{
			yyVAL.node = &ParserSeparatedList{}
		}
	case 352:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1802
		{
			yyVAL.node = yyDollar[1].node
		}
	case 353:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1806
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 354:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1807
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 355:
		yyDollar = yyS[yypt-8 : yypt+1]
		// line internal/php8/php8.y:1813
		{
			yyVAL.node = yylex.(*Parser).builder.NewAnonClass(yyDollar[1].list, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node, yyDollar[5].node, yyDollar[6].token, yyDollar[7].list, yyDollar[8].token)
		}
	case 356:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1818
		{
			if yyDollar[3].node != nil {
				yyVAL.node = &ast.ExprNew{
					Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[3].node),
					NewTkn:              yyDollar[1].token,
					Class:               yyDollar[2].node,
					OpenParenthesisTkn:  yyDollar[3].node.(*ArgumentList).OpenParenthesisTkn,
					Args:                yyDollar[3].node.(*ArgumentList).Arguments,
					SeparatorTkns:       yyDollar[3].node.(*ArgumentList).SeparatorTkns,
					CloseParenthesisTkn: yyDollar[3].node.(*ArgumentList).CloseParenthesisTkn,
				}
			} else {
				yyVAL.node = &ast.ExprNew{
					Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
					NewTkn:   yyDollar[1].token,
					Class:    yyDollar[2].node,
				}
			}
		}
	case 357:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1838
		{
			yyVAL.node = &ast.ExprNew{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				NewTkn:   yyDollar[1].token,
				Class:    yyDollar[2].node,
			}
		}
	case 358:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1849
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 359:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1853
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 360:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1854
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 361:
		yyDollar = yyS[yypt-7 : yypt+1]
		// line internal/php8/php8.y:1859
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatch(yyDollar[1].token, yyDollar[2].token, yyDollar[3].node, yyDollar[4].token, yyDollar[5].token, yyDollar[6].node, yyDollar[7].token)
		}
	case 362:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:1864
		{
			yyVAL.node = nil
		}
	case 363:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1866
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 364:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:1871
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 365:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1873
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 366:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1878
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(nil, nil, yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 367:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1880
		{
			yyVAL.node = yylex.(*Parser).builder.NewMatchArm(yyDollar[1].token, yyDollar[2].token, nil, yyDollar[3].token, yyDollar[4].node)
		}
	case 368:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:1885
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[6].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
				EqualTkn: yyDollar[5].token,
				Expr:     yyDollar[6].node,
			}
		}
	case 369:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:1901
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[5].node),
				Var: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
					OpenBracketTkn:  yyDollar[1].token,
					Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[3].token,
				},
				EqualTkn: yyDollar[4].token,
				Expr:     yyDollar[5].node,
			}
		}
	case 370:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1916
		{
			yyVAL.node = &ast.ExprAssign{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 371:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:1925
		{
			yyVAL.node = &ast.ExprAssignReference{
				Position:     yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Var:          yyDollar[1].node,
				EqualTkn:     yyDollar[2].token,
				AmpersandTkn: yyDollar[3].token,
				Expr:         yyDollar[4].node,
			}
		}
	case 372:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:1935
		{
			yyVAL.node = &ast.ExprClone{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CloneTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 373:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1943
		{
			yyVAL.node = &ast.ExprAssignPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 374:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1952
		{
			yyVAL.node = &ast.ExprAssignMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 375:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1961
		{
			yyVAL.node = &ast.ExprAssignMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 376:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1970
		{
			yyVAL.node = &ast.ExprAssignPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 377:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1979
		{
			yyVAL.node = &ast.ExprAssignDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 378:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1988
		{
			yyVAL.node = &ast.ExprAssignConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 379:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:1997
		{
			yyVAL.node = &ast.ExprAssignMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 380:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2006
		{
			yyVAL.node = &ast.ExprAssignBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 381:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2015
		{
			yyVAL.node = &ast.ExprAssignBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 382:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2024
		{
			yyVAL.node = &ast.ExprAssignBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 383:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2033
		{
			yyVAL.node = &ast.ExprAssignShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 384:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2042
		{
			yyVAL.node = &ast.ExprAssignShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 385:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2051
		{
			yyVAL.node = &ast.ExprAssignCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Var:      yyDollar[1].node,
				EqualTkn: yyDollar[2].token,
				Expr:     yyDollar[3].node,
			}
		}
	case 386:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2060
		{
			yyVAL.node = &ast.ExprPostInc{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				IncTkn:   yyDollar[2].token,
			}
		}
	case 387:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2068
		{
			yyVAL.node = &ast.ExprPreInc{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 388:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2076
		{
			yyVAL.node = &ast.ExprPostDec{
				Position: yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[2].token),
				Var:      yyDollar[1].node,
				DecTkn:   yyDollar[2].token,
			}
		}
	case 389:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2084
		{
			yyVAL.node = &ast.ExprPreDec{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DecTkn:   yyDollar[1].token,
				Var:      yyDollar[2].node,
			}
		}
	case 390:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2092
		{
			yyVAL.node = &ast.ExprBinaryBooleanOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 391:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2101
		{
			yyVAL.node = &ast.ExprBinaryBooleanAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 392:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2110
		{
			yyVAL.node = &ast.ExprBinaryLogicalOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 393:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2119
		{
			yyVAL.node = &ast.ExprBinaryLogicalAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 394:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2128
		{
			yyVAL.node = &ast.ExprBinaryLogicalXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 395:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2137
		{
			yyVAL.node = &ast.ExprBinaryBitwiseOr{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 396:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2146
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 397:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2155
		{
			yyVAL.node = &ast.ExprBinaryBitwiseAnd{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 398:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2164
		{
			yyVAL.node = &ast.ExprBinaryBitwiseXor{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 399:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2173
		{
			yyVAL.node = &ast.ExprBinaryConcat{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 400:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2182
		{
			yyVAL.node = &ast.ExprBinaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 401:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2191
		{
			yyVAL.node = &ast.ExprBinaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 402:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2200
		{
			yyVAL.node = &ast.ExprBinaryMul{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 403:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2209
		{
			yyVAL.node = &ast.ExprBinaryPow{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 404:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2218
		{
			yyVAL.node = &ast.ExprBinaryDiv{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 405:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2227
		{
			yyVAL.node = &ast.ExprBinaryMod{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 406:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2236
		{
			yyVAL.node = &ast.ExprBinaryShiftLeft{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 407:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2245
		{
			yyVAL.node = &ast.ExprBinaryShiftRight{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 408:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2254
		{
			yyVAL.node = &ast.ExprUnaryPlus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PlusTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 409:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2262
		{
			yyVAL.node = &ast.ExprUnaryMinus{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				MinusTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 410:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2270
		{
			yyVAL.node = &ast.ExprBooleanNot{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				ExclamationTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 411:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2278
		{
			yyVAL.node = &ast.ExprBitwiseNot{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				TildaTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 412:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2286
		{
			yyVAL.node = &ast.ExprBinaryIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 413:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2295
		{
			yyVAL.node = &ast.ExprBinaryNotIdentical{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 414:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2304
		{
			yyVAL.node = &ast.ExprBinaryEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 415:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2313
		{
			yyVAL.node = &ast.ExprBinaryNotEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 416:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2322
		{
			yyVAL.node = &ast.ExprBinarySmaller{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 417:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2331
		{
			yyVAL.node = &ast.ExprBinarySmallerOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 418:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2340
		{
			yyVAL.node = &ast.ExprBinaryGreater{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 419:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2349
		{
			yyVAL.node = &ast.ExprBinaryGreaterOrEqual{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 420:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2358
		{
			yyVAL.node = &ast.ExprBinarySpaceship{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 421:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2367
		{
			yyVAL.node = &ast.ExprInstanceOf{
				Position:      yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Expr:          yyDollar[1].node,
				InstanceOfTkn: yyDollar[2].token,
				Class:         yyDollar[3].node,
			}
		}
	case 422:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2376
		{
			yyVAL.node = &ast.ExprBrackets{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenParenthesisTkn:  yyDollar[1].token,
				Expr:                yyDollar[2].node,
				CloseParenthesisTkn: yyDollar[3].token,
			}
		}
	case 423:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2385
		{
			yyVAL.node = yyDollar[1].node
		}
	case 424:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2389
		{
			yyVAL.node = yyDollar[1].node
		}
	case 425:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:2393
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[5].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				IfTrue:      yyDollar[3].node,
				ColonTkn:    yyDollar[4].token,
				IfFalse:     yyDollar[5].node,
			}
		}
	case 426:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2404
		{
			yyVAL.node = &ast.ExprTernary{
				Position:    yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Cond:        yyDollar[1].node,
				QuestionTkn: yyDollar[2].token,
				ColonTkn:    yyDollar[3].token,
				IfFalse:     yyDollar[4].node,
			}
		}
	case 427:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2414
		{
			yyVAL.node = &ast.ExprBinaryCoalesce{
				Position: yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Left:     yyDollar[1].node,
				OpTkn:    yyDollar[2].token,
				Right:    yyDollar[3].node,
			}
		}
	case 428:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2423
		{
			yyVAL.node = yyDollar[1].node
		}
	case 429:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2427
		{
			yyVAL.node = &ast.ExprCastInt{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 430:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2435
		{
			yyVAL.node = &ast.ExprCastDouble{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 431:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2443
		{
			yyVAL.node = &ast.ExprCastString{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 432:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2451
		{
			yyVAL.node = &ast.ExprCastArray{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 433:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2459
		{
			yyVAL.node = &ast.ExprCastObject{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 434:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2467
		{
			yyVAL.node = &ast.ExprCastBool{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 435:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2475
		{
			yyVAL.node = &ast.ExprCastUnset{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				CastTkn:  yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 436:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2483
		{
			exit := &ast.ExprExit{
				ExitTkn: yyDollar[1].token,
			}

			if yyDollar[2].node == nil {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token)
			} else {
				exit.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				exit.OpenParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).OpenParenthesisTkn
				exit.Expr = yyDollar[2].node.(*ast.ExprBrackets).Expr
				exit.CloseParenthesisTkn = yyDollar[2].node.(*ast.ExprBrackets).CloseParenthesisTkn
			}

			yyVAL.node = exit
		}
	case 437:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2500
		{
			yyVAL.node = &ast.ExprErrorSuppress{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AtTkn:    yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 438:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2508
		{
			yyVAL.node = yyDollar[1].node
		}
	case 439:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2512
		{
			yyVAL.node = &ast.ExprShellExec{
				Position:         yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBacktickTkn:  yyDollar[1].token,
				Parts:            yyDollar[2].list,
				CloseBacktickTkn: yyDollar[3].token,
			}
		}
	case 440:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2521
		{
			yyVAL.node = &ast.ExprPrint{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				PrintTkn: yyDollar[1].token,
				Expr:     yyDollar[2].node,
			}
		}
	case 441:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2529
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				YieldTkn: yyDollar[1].token,
			}
		}
	case 442:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2536
		{
			yyVAL.node = &ast.ExprYield{
				Position: yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldTkn: yyDollar[1].token,
				Val:      yyDollar[2].node,
			}
		}
	case 443:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2544
		{
			yyVAL.node = &ast.ExprYield{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[4].node),
				YieldTkn:       yyDollar[1].token,
				Key:            yyDollar[2].node,
				DoubleArrowTkn: yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 444:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2554
		{
			yyVAL.node = &ast.ExprYieldFrom{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				YieldFromTkn: yyDollar[1].token,
				Expr:         yyDollar[2].node,
			}
		}
	case 445:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2562
		{
			yyVAL.node = yylex.(*Parser).builder.NewThrowExpr(yyDollar[1].token, yyDollar[2].node)
		}
	case 446:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2566
		{
			yyVAL.node = yyDollar[1].node
		}
	case 447:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2570
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node)
				n.StaticTkn = yyDollar[1].token
			}

			yyVAL.node = yyDollar[2].node
		}
	case 448:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2585
		{
			yyVAL.node = yyDollar[1].node
		}
	case 449:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2587
		{
			switch n := yyDollar[2].node.(type) {
			case *ast.ExprClosure:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			case *ast.ExprArrowFunction:
				n.Position = yylex.(*Parser).builder.Pos.NewNodeListNodePosition(yyDollar[1].list, yyDollar[2].node)
				n.AttrGroups = yyDollar[1].list
			}

			yyVAL.node = yyDollar[2].node
		}
	case 450:
		yyDollar = yyS[yypt-11 : yypt+1]
		// line internal/php8/php8.y:2603
		{
			closure := yyDollar[7].node.(*ast.ExprClosure)

			closure.Position = yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[11].token)
			closure.FunctionTkn = yyDollar[1].token
			closure.AmpersandTkn = yyDollar[2].token
			closure.OpenParenthesisTkn = yyDollar[4].token
			closure.Params = yyDollar[5].node.(*ParserSeparatedList).Items
			closure.SeparatorTkns = yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns
			closure.CloseParenthesisTkn = yyDollar[6].token
			closure.ColonTkn = yyDollar[8].node.(*ReturnType).ColonTkn
			closure.ReturnType = yyDollar[8].node.(*ReturnType).Type
			closure.OpenCurlyBracketTkn = yyDollar[9].token
			closure.Stmts = yyDollar[10].list
			closure.CloseCurlyBracketTkn = yyDollar[11].token

			yyVAL.node = closure
		}
	case 451:
		yyDollar = yyS[yypt-9 : yypt+1]
		// line internal/php8/php8.y:2622
		{
			yyVAL.node = &ast.ExprArrowFunction{
				Position:            yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[9].node),
				FnTkn:               yyDollar[1].token,
				AmpersandTkn:        yyDollar[2].token,
				OpenParenthesisTkn:  yyDollar[3].token,
				Params:              yyDollar[4].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[4].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
				ColonTkn:            yyDollar[6].node.(*ReturnType).ColonTkn,
				ReturnType:          yyDollar[6].node.(*ReturnType).Type,
				DoubleArrowTkn:      yyDollar[8].token,
				Expr:                yyDollar[9].node,
			}
		}
	case 453:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2645
		{
			yyVAL.node = &ast.ExprClosure{}
		}
	case 454:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2647
		{
			yyVAL.node = &ast.ExprClosure{
				UseTkn:                 yyDollar[1].token,
				UseOpenParenthesisTkn:  yyDollar[2].token,
				Uses:                   yyDollar[3].node.(*ParserSeparatedList).Items,
				UseSeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				UseCloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 455:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2659
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, nil)
		}
	case 456:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2663
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 457:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2664
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 458:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2669
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
			}
		}
	case 459:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2683
		{
			yyVAL.node = &ast.ExprClosureUse{
				Position:     yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				AmpersandTkn: yyDollar[1].token,
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						IdentifierTkn: yyDollar[2].token,
						Value:         yyDollar[2].token.Value,
					},
				},
			}
		}
	case 460:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2701
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 461:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2713
		{
			staticCall := &ast.ExprStaticCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Class:               yyDollar[1].node,
				DoubleColonTkn:      yyDollar[2].token,
				Call:                yyDollar[3].node,
				OpenParenthesisTkn:  yyDollar[4].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[4].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[4].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[4].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[4].node.(*ArgumentList).CloseParenthesisTkn,
			}

			if brackets, ok := yyDollar[3].node.(*ParserBrackets); ok {
				staticCall.OpenCurlyBracketTkn = brackets.OpenBracketTkn
				staticCall.Call = brackets.Child
				staticCall.CloseCurlyBracketTkn = brackets.CloseBracketTkn
			}

			yyVAL.node = staticCall
		}
	case 462:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2735
		{
			yyVAL.node = &ast.ExprFunctionCall{
				Position:            yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[2].node),
				Function:            yyDollar[1].node,
				OpenParenthesisTkn:  yyDollar[2].node.(*ArgumentList).OpenParenthesisTkn,
				Args:                yyDollar[2].node.(*ArgumentList).Arguments,
				SeparatorTkns:       yyDollar[2].node.(*ArgumentList).SeparatorTkns,
				EllipsisTkn:         yyDollar[2].node.(*ArgumentList).EllipsisTkn,
				CloseParenthesisTkn: yyDollar[2].node.(*ArgumentList).CloseParenthesisTkn,
			}
		}
	case 463:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2749
		{
			yyVAL.node = yyDollar[1].node
		}
	case 464:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2750
		{
			yyVAL.node = yyDollar[1].node
		}
	case 465:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2754
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 466:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2755
		{
			yyVAL.node = yyDollar[1].node
		}
	case 467:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2759
		{
			yyVAL.node = yyDollar[1].node
		}
	case 468:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2760
		{
			yyVAL.node = yyDollar[1].node
		}
	case 469:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2761
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 470:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2765
		{
			yyVAL.node = nil
		}
	case 471:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2766
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 472:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2771
		{
			yyVAL.list = []ast.Vertex{}
		}
	case 473:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2775
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
			}
		}
	case 474:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2785
		{
			yyVAL.list = yyDollar[1].list
		}
	case 475:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2791
		{
			yyVAL.node = nil
		}
	case 476:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2792
		{
			yyVAL.node = yyDollar[1].node
		}
	case 477:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2797
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				ArrayTkn:        yyDollar[1].token,
				OpenBracketTkn:  yyDollar[2].token,
				Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 478:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2808
		{
			yyVAL.node = &ast.ExprArray{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenBracketTkn:  yyDollar[1].token,
				Items:           yyDollar[2].node.(*ParserSeparatedList).Items,
				SeparatorTkns:   yyDollar[2].node.(*ParserSeparatedList).SeparatorTkns,
				CloseBracketTkn: yyDollar[3].token,
			}
		}
	case 479:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2818
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 480:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2826
		{
			yyVAL.node = &ast.ScalarEncapsed{
				Position:      yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenQuoteTkn:  yyDollar[1].token,
				Parts:         yyDollar[2].list,
				CloseQuoteTkn: yyDollar[3].token,
			}
		}
	case 481:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2838
		{
			yyVAL.node = &ast.ScalarLnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 482:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2846
		{
			yyVAL.node = &ast.ScalarDnumber{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				NumberTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 483:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2854
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:       yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn: yyDollar[1].token,
				Parts: []ast.Vertex{
					&ast.ScalarEncapsedStringPart{
						Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						EncapsedStrTkn: yyDollar[2].token,
						Value:          yyDollar[2].token.Value,
					},
				},
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 484:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:2869
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
				OpenHeredocTkn:  yyDollar[1].token,
				CloseHeredocTkn: yyDollar[2].token,
			}
		}
	case 485:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2877
		{
			yyVAL.node = &ast.ScalarHeredoc{
				Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenHeredocTkn:  yyDollar[1].token,
				Parts:           yyDollar[2].list,
				CloseHeredocTkn: yyDollar[3].token,
			}
		}
	case 486:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2885
		{
			yyVAL.node = yyDollar[1].node
		}
	case 487:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2886
		{
			yyVAL.node = yyDollar[1].node
		}
	case 488:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2887
		{
			yyVAL.node = yyDollar[1].node
		}
	case 489:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2892
		{
			yyVAL.node = &ast.ExprClassConstFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[3].token),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Const: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[3].token),
					IdentifierTkn: yyDollar[3].token,
					Value:         yyDollar[3].token.Value,
				},
			}
		}
	case 490:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2907
		{
			yyVAL.node = yylex.(*Parser).builder.NewConstFetch(yyDollar[1].node)
		}
	case 491:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2908
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 492:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2909
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 493:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2910
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 494:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2911
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 495:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2912
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 496:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2913
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 497:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2914
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 498:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2915
		{
			yyVAL.node = yylex.(*Parser).builder.NewScalarMagicConstant(yyDollar[1].token)
		}
	case 499:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2919
		{
			yyVAL.node = yyDollar[1].node
		}
	case 500:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2920
		{
			yyVAL.node = yyDollar[1].node
		}
	case 501:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:2924
		{
			yyVAL.node = nil
		}
	case 502:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2925
		{
			yyVAL.node = yyDollar[1].node
		}
	case 503:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2929
		{
			yyVAL.node = yyDollar[1].node
		}
	case 504:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2930
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 505:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2931
		{
			yyVAL.node = yyDollar[1].node
		}
	case 506:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2932
		{
			yyVAL.node = yyDollar[1].node
		}
	case 507:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2936
		{
			yyVAL.node = yyDollar[1].node
		}
	case 508:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2937
		{
			yyVAL.node = yyDollar[1].node
		}
	case 509:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2941
		{
			yyVAL.node = yyDollar[1].node
		}
	case 510:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2942
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 511:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2943
		{
			yyVAL.node = yyDollar[1].node
		}
	case 512:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2948
		{
			yyVAL.node = yyDollar[1].node
		}
	case 513:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2950
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 514:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2960
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 515:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2972
		{
			yyVAL.node = yylex.(*Parser).builder.NewMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 516:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:2974
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafeMethodCall(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node, yyDollar[4].node)
		}
	case 517:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2976
		{
			yyVAL.node = yyDollar[1].node
		}
	case 518:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2981
		{
			yyVAL.node = yyDollar[1].node
		}
	case 519:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2983
		{
			yyVAL.node = yyDollar[1].node
		}
	case 520:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2985
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 521:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:2987
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 522:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:2992
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 523:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3003
		{
			yyVAL.node = &ast.ExprVariable{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				DollarTkn:            yyDollar[1].token,
				OpenCurlyBracketTkn:  yyDollar[2].token,
				Name:                 yyDollar[3].node,
				CloseCurlyBracketTkn: yyDollar[4].token,
			}
		}
	case 524:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3013
		{
			yyVAL.node = &ast.ExprVariable{
				Position:  yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				DollarTkn: yyDollar[1].token,
				Name:      yyDollar[2].node,
			}
		}
	case 525:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3024
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 526:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3036
		{
			yyVAL.node = yyDollar[1].node
		}
	case 527:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3040
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 528:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3050
		{
			yylex.(*Parser).Error("Array and string offset access syntax with curly braces is no longer supported")

			yyVAL.node = &ast.ExprArrayDimFetch{
				Position:        yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[4].token),
				Var:             yyDollar[1].node,
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 529:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3062
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 530:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3066
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetch(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 531:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3070
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 532:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3079
		{
			yyVAL.node = &ast.ExprStaticPropertyFetch{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Class:          yyDollar[1].node,
				DoubleColonTkn: yyDollar[2].token,
				Prop:           yyDollar[3].node,
			}
		}
	case 533:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3090
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 534:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3091
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 535:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3092
		{
			yyVAL.node = yyDollar[1].node
		}
	case 536:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3096
		{
			yyVAL.node = yylex.(*Parser).builder.NewIdentifier(yyDollar[1].token)
		}
	case 537:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3097
		{
			yyVAL.node = yylex.(*Parser).builder.NewBracket(yyDollar[1].token, yyDollar[2].node, yyDollar[3].token)
		}
	case 538:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3098
		{
			yyVAL.node = yyDollar[1].node
		}
	case 539:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3103
		{
			pairList := yyDollar[1].node.(*ParserSeparatedList)
			fistPair := pairList.Items[0].(*ast.ExprArrayItem)

			if fistPair.Key == nil && fistPair.Val == nil && len(pairList.Items) == 1 {
				pairList.Items = nil
			}

			yyVAL.node = yyDollar[1].node
		}
	case 540:
		yyDollar = yyS[yypt-0 : yypt+1]
		// line internal/php8/php8.y:3116
		{
			yyVAL.node = &ast.ExprArrayItem{}
		}
	case 541:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3117
		{
			yyVAL.node = yyDollar[1].node
		}
	case 542:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3122
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 543:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3124
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 544:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3129
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[3].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val:            yyDollar[3].node,
			}
		}
	case 545:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3138
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewNodePosition(yyDollar[1].node),
				Val:      yyDollar[1].node,
			}
		}
	case 546:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3145
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodesPosition(yyDollar[1].node, yyDollar[4].node),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				AmpersandTkn:   yyDollar[3].token,
				Val:            yyDollar[4].node,
			}
		}
	case 547:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3155
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:     yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				AmpersandTkn: yyDollar[1].token,
				Val:          yyDollar[2].node,
			}
		}
	case 548:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3163
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:    yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				EllipsisTkn: yyDollar[1].token,
				Val:         yyDollar[2].node,
			}
		}
	case 549:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3171
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position:       yylex.(*Parser).builder.Pos.NewNodeTokenPosition(yyDollar[1].node, yyDollar[6].token),
				Key:            yyDollar[1].node,
				DoubleArrowTkn: yyDollar[2].token,
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[3].token, yyDollar[6].token),
					ListTkn:         yyDollar[3].token,
					OpenBracketTkn:  yyDollar[4].token,
					Items:           yyDollar[5].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[5].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[6].token,
				},
			}
		}
	case 550:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3187
		{
			yyVAL.node = &ast.ExprArrayItem{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Val: &ast.ExprList{
					Position:        yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
					ListTkn:         yyDollar[1].token,
					OpenBracketTkn:  yyDollar[2].token,
					Items:           yyDollar[3].node.(*ParserSeparatedList).Items,
					SeparatorTkns:   yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
					CloseBracketTkn: yyDollar[4].token,
				},
			}
		}
	case 551:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3204
		{
			yyVAL.list = append(yyDollar[1].list, yyDollar[2].node)
		}
	case 552:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3208
		{
			yyVAL.list = append(
				yyDollar[1].list,
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					EncapsedStrTkn: yyDollar[2].token,
					Value:          yyDollar[2].token.Value,
				},
			)
		}
	case 553:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3219
		{
			yyVAL.list = []ast.Vertex{yyDollar[1].node}
		}
	case 554:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3223
		{
			yyVAL.list = []ast.Vertex{
				&ast.ScalarEncapsedStringPart{
					Position:       yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					EncapsedStrTkn: yyDollar[1].token,
					Value:          yyDollar[1].token.Value,
				},
				yyDollar[2].node,
			}
		}
	case 555:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3237
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 556:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3248
		{
			yyVAL.node = &ast.ExprArrayDimFetch{
				Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				Var: &ast.ExprVariable{
					Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					Name: &ast.Identifier{
						Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
						IdentifierTkn: yyDollar[1].token,
						Value:         yyDollar[1].token.Value,
					},
				},
				OpenBracketTkn:  yyDollar[2].token,
				Dim:             yyDollar[3].node,
				CloseBracketTkn: yyDollar[4].token,
			}
		}
	case 557:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3265
		{
			yyVAL.node = yylex.(*Parser).builder.NewPropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 558:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3269
		{
			yyVAL.node = yylex.(*Parser).builder.NewNullsafePropertyFetchFromTokens(yyDollar[1].token, yyDollar[2].token, yyDollar[3].token)
		}
	case 559:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3273
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name:                      yyDollar[2].node,
				CloseCurlyBracketTkn:      yyDollar[3].token,
			}
		}
	case 560:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3282
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 561:
		yyDollar = yyS[yypt-6 : yypt+1]
		// line internal/php8/php8.y:3295
		{
			yyVAL.node = &ast.ScalarEncapsedStringVar{
				Position:                  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				DollarOpenCurlyBracketTkn: yyDollar[1].token,
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
					IdentifierTkn: yyDollar[2].token,
					Value:         yyDollar[2].token.Value,
				},
				OpenSquareBracketTkn:  yyDollar[3].token,
				Dim:                   yyDollar[4].node,
				CloseSquareBracketTkn: yyDollar[5].token,
				CloseCurlyBracketTkn:  yyDollar[6].token,
			}
		}
	case 562:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3311
		{
			yyVAL.node = &ast.ScalarEncapsedStringBrackets{
				Position:             yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[3].token),
				OpenCurlyBracketTkn:  yyDollar[1].token,
				Var:                  yyDollar[2].node,
				CloseCurlyBracketTkn: yyDollar[3].token,
			}
		}
	case 563:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3323
		{
			yyVAL.node = &ast.ScalarString{
				Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				StringTkn: yyDollar[1].token,
				Value:     yyDollar[1].token.Value,
			}
		}
	case 564:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3331
		{
			// TODO: add option to handle 64 bit integer
			if _, err := strconv.Atoi(string(yyDollar[1].token.Value)); err == nil {
				yyVAL.node = &ast.ScalarLnumber{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					NumberTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					StringTkn: yyDollar[1].token,
					Value:     yyDollar[1].token.Value,
				}
			}
		}
	case 565:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3348
		{
			_, err := strconv.Atoi(string(yyDollar[2].token.Value))
			isInt := err == nil

			if isInt {
				yyVAL.node = &ast.ExprUnaryMinus{
					Position: yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn: yyDollar[1].token,
					Expr: &ast.ScalarLnumber{
						Position:  yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[2].token),
						NumberTkn: yyDollar[2].token,
						Value:     yyDollar[2].token.Value,
					},
				}
			} else {
				yyVAL.node = &ast.ScalarString{
					Position:  yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[2].token),
					MinusTkn:  yyDollar[1].token,
					StringTkn: yyDollar[2].token,
					Value:     append([]byte("-"), yyDollar[2].token.Value...),
				}
			}
		}
	case 566:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3372
		{
			yyVAL.node = &ast.ExprVariable{
				Position: yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
				Name: &ast.Identifier{
					Position:      yylex.(*Parser).builder.Pos.NewTokenPosition(yyDollar[1].token),
					IdentifierTkn: yyDollar[1].token,
					Value:         yyDollar[1].token.Value,
				},
			}
		}
	case 567:
		yyDollar = yyS[yypt-5 : yypt+1]
		// line internal/php8/php8.y:3386
		{
			if yyDollar[4].token != nil {
				yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns = append(yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns, yyDollar[4].token)
			}

			yyVAL.node = &ast.ExprIsset{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[5].token),
				IssetTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Vars:                yyDollar[3].node.(*ParserSeparatedList).Items,
				SeparatorTkns:       yyDollar[3].node.(*ParserSeparatedList).SeparatorTkns,
				CloseParenthesisTkn: yyDollar[5].token,
			}
		}
	case 568:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3401
		{
			yyVAL.node = &ast.ExprEmpty{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EmptyTkn:            yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 569:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3411
		{
			yyVAL.node = &ast.ExprInclude{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 570:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3419
		{
			yyVAL.node = &ast.ExprIncludeOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				IncludeOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 571:
		yyDollar = yyS[yypt-4 : yypt+1]
		// line internal/php8/php8.y:3427
		{
			yyVAL.node = &ast.ExprEval{
				Position:            yylex.(*Parser).builder.Pos.NewTokensPosition(yyDollar[1].token, yyDollar[4].token),
				EvalTkn:             yyDollar[1].token,
				OpenParenthesisTkn:  yyDollar[2].token,
				Expr:                yyDollar[3].node,
				CloseParenthesisTkn: yyDollar[4].token,
			}
		}
	case 572:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3437
		{
			yyVAL.node = &ast.ExprRequire{
				Position:   yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireTkn: yyDollar[1].token,
				Expr:       yyDollar[2].node,
			}
		}
	case 573:
		yyDollar = yyS[yypt-2 : yypt+1]
		// line internal/php8/php8.y:3445
		{
			yyVAL.node = &ast.ExprRequireOnce{
				Position:       yylex.(*Parser).builder.Pos.NewTokenNodePosition(yyDollar[1].token, yyDollar[2].node),
				RequireOnceTkn: yyDollar[1].token,
				Expr:           yyDollar[2].node,
			}
		}
	case 574:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3455
		{
			yyVAL.node = yylex.(*Parser).builder.NewSeparatedList(yyDollar[1].node)
		}
	case 575:
		yyDollar = yyS[yypt-3 : yypt+1]
		// line internal/php8/php8.y:3456
		{
			yyVAL.node = yylex.(*Parser).builder.AppendToSeparatedList(yyDollar[1].node, yyDollar[2].token, yyDollar[3].node)
		}
	case 576:
		yyDollar = yyS[yypt-1 : yypt+1]
		// line internal/php8/php8.y:3460
		{
			yyVAL.node = yyDollar[1].node
		}
	}
	goto yystack /* stack new state and value */
}

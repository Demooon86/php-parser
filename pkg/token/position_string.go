// Code generated by "stringer -type=Position -output ./position_string.go"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[Start-0]
	_ = x[End-1]
	_ = x[Colon-2]
	_ = x[SemiColon-3]
	_ = x[AltEnd-4]
	_ = x[Dollar-5]
	_ = x[Ampersand-6]
	_ = x[Name-7]
	_ = x[Prefix-8]
	_ = x[Key-9]
	_ = x[Var-10]
	_ = x[UseType-11]
	_ = x[ReturnType-12]
	_ = x[OptionalType-13]
	_ = x[CaseSeparator-14]
	_ = x[LexicalVars-15]
	_ = x[Params-16]
	_ = x[Ref-17]
	_ = x[Cast-18]
	_ = x[Expr-19]
	_ = x[InitExpr-20]
	_ = x[CondExpr-21]
	_ = x[IncExpr-22]
	_ = x[True-23]
	_ = x[Cond-24]
	_ = x[HaltCompiller-25]
	_ = x[Namespace-26]
	_ = x[Static-27]
	_ = x[Class-28]
	_ = x[Use-29]
	_ = x[While-30]
	_ = x[For-31]
	_ = x[Switch-32]
	_ = x[Break-33]
	_ = x[Foreach-34]
	_ = x[Declare-35]
	_ = x[Label-36]
	_ = x[Finally-37]
	_ = x[List-38]
	_ = x[Default-39]
	_ = x[If-40]
	_ = x[ElseIf-41]
	_ = x[Else-42]
	_ = x[Variadic-43]
	_ = x[Function-44]
	_ = x[DoubleArrow-45]
	_ = x[Alias-46]
	_ = x[As-47]
	_ = x[Equal-48]
	_ = x[Exit-49]
	_ = x[Array-50]
	_ = x[Isset-51]
	_ = x[Empty-52]
	_ = x[Eval-53]
	_ = x[Echo-54]
	_ = x[Try-55]
	_ = x[Catch-56]
	_ = x[Unset-57]
	_ = x[Stmts-58]
	_ = x[VarList-59]
	_ = x[ConstList-60]
	_ = x[NameList-61]
	_ = x[ParamList-62]
	_ = x[ModifierList-63]
	_ = x[ArrayPairList-64]
	_ = x[CaseListStart-65]
	_ = x[CaseListEnd-66]
	_ = x[ArgumentList-67]
	_ = x[PropertyList-68]
	_ = x[ParameterList-69]
	_ = x[AdaptationList-70]
	_ = x[LexicalVarList-71]
	_ = x[UseDeclarationList-72]
	_ = x[OpenParenthesisToken-73]
	_ = x[CloseParenthesisToken-74]
}

const _Position_name = "StartEndColonSemiColonAltEndDollarAmpersandNamePrefixKeyVarUseTypeReturnTypeOptionalTypeCaseSeparatorLexicalVarsParamsRefCastExprInitExprCondExprIncExprTrueCondHaltCompillerNamespaceStaticClassUseWhileForSwitchBreakForeachDeclareLabelFinallyListDefaultIfElseIfElseVariadicFunctionDoubleArrowAliasAsEqualExitArrayIssetEmptyEvalEchoTryCatchUnsetStmtsVarListConstListNameListParamListModifierListArrayPairListCaseListStartCaseListEndArgumentListPropertyListParameterListAdaptationListLexicalVarListUseDeclarationListOpenParenthesisTokenCloseParenthesisToken"

var _Position_index = [...]uint16{0, 5, 8, 13, 22, 28, 34, 43, 47, 53, 56, 59, 66, 76, 88, 101, 112, 118, 121, 125, 129, 137, 145, 152, 156, 160, 173, 182, 188, 193, 196, 201, 204, 210, 215, 222, 229, 234, 241, 245, 252, 254, 260, 264, 272, 280, 291, 296, 298, 303, 307, 312, 317, 322, 326, 330, 333, 338, 343, 348, 355, 364, 372, 381, 393, 406, 419, 430, 442, 454, 467, 481, 495, 513, 533, 554}

func (i Position) String() string {
	if i < 0 || i >= Position(len(_Position_index)-1) {
		return "Position(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _Position_name[_Position_index[i]:_Position_index[i+1]]
}
